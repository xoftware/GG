/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Enum Values                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace X86 {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    PROLOG_LABEL	= 2,
    EH_LABEL	= 3,
    GC_LABEL	= 4,
    KILL	= 5,
    EXTRACT_SUBREG	= 6,
    INSERT_SUBREG	= 7,
    IMPLICIT_DEF	= 8,
    SUBREG_TO_REG	= 9,
    COPY_TO_REGCLASS	= 10,
    DBG_VALUE	= 11,
    REG_SEQUENCE	= 12,
    COPY	= 13,
    BUNDLE	= 14,
    LIFETIME_START	= 15,
    LIFETIME_END	= 16,
    BUNDLE_ALIGN_START	= 17,
    BUNDLE_ALIGN_END	= 18,
    BUNDLE_LOCK	= 19,
    BUNDLE_UNLOCK	= 20,
    AAA	= 21,
    AAD8i8	= 22,
    AAM8i8	= 23,
    AAS	= 24,
    ABS_F	= 25,
    ABS_Fp32	= 26,
    ABS_Fp64	= 27,
    ABS_Fp80	= 28,
    ACQUIRE_MOV16rm	= 29,
    ACQUIRE_MOV32rm	= 30,
    ACQUIRE_MOV64rm	= 31,
    ACQUIRE_MOV8rm	= 32,
    ADC16i16	= 33,
    ADC16mi	= 34,
    ADC16mi8	= 35,
    ADC16mr	= 36,
    ADC16ri	= 37,
    ADC16ri8	= 38,
    ADC16rm	= 39,
    ADC16rr	= 40,
    ADC16rr_REV	= 41,
    ADC32i32	= 42,
    ADC32mi	= 43,
    ADC32mi8	= 44,
    ADC32mr	= 45,
    ADC32ri	= 46,
    ADC32ri8	= 47,
    ADC32rm	= 48,
    ADC32rr	= 49,
    ADC32rr_REV	= 50,
    ADC64i32	= 51,
    ADC64mi32	= 52,
    ADC64mi8	= 53,
    ADC64mr	= 54,
    ADC64ri32	= 55,
    ADC64ri8	= 56,
    ADC64rm	= 57,
    ADC64rr	= 58,
    ADC64rr_REV	= 59,
    ADC8i8	= 60,
    ADC8mi	= 61,
    ADC8mr	= 62,
    ADC8ri	= 63,
    ADC8rm	= 64,
    ADC8rr	= 65,
    ADC8rr_REV	= 66,
    ADCX32rm	= 67,
    ADCX32rr	= 68,
    ADCX64rm	= 69,
    ADCX64rr	= 70,
    ADD16i16	= 71,
    ADD16mi	= 72,
    ADD16mi8	= 73,
    ADD16mr	= 74,
    ADD16ri	= 75,
    ADD16ri8	= 76,
    ADD16ri8_DB	= 77,
    ADD16ri_DB	= 78,
    ADD16rm	= 79,
    ADD16rr	= 80,
    ADD16rr_DB	= 81,
    ADD16rr_REV	= 82,
    ADD32i32	= 83,
    ADD32mi	= 84,
    ADD32mi8	= 85,
    ADD32mr	= 86,
    ADD32ri	= 87,
    ADD32ri8	= 88,
    ADD32ri8_DB	= 89,
    ADD32ri_DB	= 90,
    ADD32rm	= 91,
    ADD32rr	= 92,
    ADD32rr_DB	= 93,
    ADD32rr_REV	= 94,
    ADD64i32	= 95,
    ADD64mi32	= 96,
    ADD64mi8	= 97,
    ADD64mr	= 98,
    ADD64ri32	= 99,
    ADD64ri32_DB	= 100,
    ADD64ri8	= 101,
    ADD64ri8_DB	= 102,
    ADD64rm	= 103,
    ADD64rr	= 104,
    ADD64rr_DB	= 105,
    ADD64rr_REV	= 106,
    ADD8i8	= 107,
    ADD8mi	= 108,
    ADD8mr	= 109,
    ADD8ri	= 110,
    ADD8rm	= 111,
    ADD8rr	= 112,
    ADD8rr_REV	= 113,
    ADDPDrm	= 114,
    ADDPDrr	= 115,
    ADDPSrm	= 116,
    ADDPSrr	= 117,
    ADDSDrm	= 118,
    ADDSDrm_Int	= 119,
    ADDSDrr	= 120,
    ADDSDrr_Int	= 121,
    ADDSSrm	= 122,
    ADDSSrm_Int	= 123,
    ADDSSrr	= 124,
    ADDSSrr_Int	= 125,
    ADDSUBPDrm	= 126,
    ADDSUBPDrr	= 127,
    ADDSUBPSrm	= 128,
    ADDSUBPSrr	= 129,
    ADD_F32m	= 130,
    ADD_F64m	= 131,
    ADD_FI16m	= 132,
    ADD_FI32m	= 133,
    ADD_FPrST0	= 134,
    ADD_FST0r	= 135,
    ADD_Fp32	= 136,
    ADD_Fp32m	= 137,
    ADD_Fp64	= 138,
    ADD_Fp64m	= 139,
    ADD_Fp64m32	= 140,
    ADD_Fp80	= 141,
    ADD_Fp80m32	= 142,
    ADD_Fp80m64	= 143,
    ADD_FpI16m32	= 144,
    ADD_FpI16m64	= 145,
    ADD_FpI16m80	= 146,
    ADD_FpI32m32	= 147,
    ADD_FpI32m64	= 148,
    ADD_FpI32m80	= 149,
    ADD_FrST0	= 150,
    ADJCALLSTACKDOWN32	= 151,
    ADJCALLSTACKDOWN64	= 152,
    ADJCALLSTACKUP32	= 153,
    ADJCALLSTACKUP64	= 154,
    ADOX32rm	= 155,
    ADOX32rr	= 156,
    ADOX64rm	= 157,
    ADOX64rr	= 158,
    AESDECLASTrm	= 159,
    AESDECLASTrr	= 160,
    AESDECrm	= 161,
    AESDECrr	= 162,
    AESENCLASTrm	= 163,
    AESENCLASTrr	= 164,
    AESENCrm	= 165,
    AESENCrr	= 166,
    AESIMCrm	= 167,
    AESIMCrr	= 168,
    AESKEYGENASSIST128rm	= 169,
    AESKEYGENASSIST128rr	= 170,
    AND16i16	= 171,
    AND16mi	= 172,
    AND16mi8	= 173,
    AND16mr	= 174,
    AND16ri	= 175,
    AND16ri8	= 176,
    AND16rm	= 177,
    AND16rr	= 178,
    AND16rr_REV	= 179,
    AND32i32	= 180,
    AND32mi	= 181,
    AND32mi8	= 182,
    AND32mr	= 183,
    AND32ri	= 184,
    AND32ri8	= 185,
    AND32rm	= 186,
    AND32rr	= 187,
    AND32rr_REV	= 188,
    AND64i32	= 189,
    AND64mi32	= 190,
    AND64mi8	= 191,
    AND64mr	= 192,
    AND64ri32	= 193,
    AND64ri8	= 194,
    AND64rm	= 195,
    AND64rr	= 196,
    AND64rr_REV	= 197,
    AND8i8	= 198,
    AND8mi	= 199,
    AND8mr	= 200,
    AND8ri	= 201,
    AND8rm	= 202,
    AND8rr	= 203,
    AND8rr_REV	= 204,
    ANDN32rm	= 205,
    ANDN32rr	= 206,
    ANDN64rm	= 207,
    ANDN64rr	= 208,
    ANDNPDrm	= 209,
    ANDNPDrr	= 210,
    ANDNPSrm	= 211,
    ANDNPSrr	= 212,
    ANDPDrm	= 213,
    ANDPDrr	= 214,
    ANDPSrm	= 215,
    ANDPSrr	= 216,
    ARPL16mr	= 217,
    ARPL16rr	= 218,
    ATOMADD6432	= 219,
    ATOMAND16	= 220,
    ATOMAND32	= 221,
    ATOMAND64	= 222,
    ATOMAND6432	= 223,
    ATOMAND8	= 224,
    ATOMMAX16	= 225,
    ATOMMAX32	= 226,
    ATOMMAX64	= 227,
    ATOMMAX6432	= 228,
    ATOMMAX8	= 229,
    ATOMMIN16	= 230,
    ATOMMIN32	= 231,
    ATOMMIN64	= 232,
    ATOMMIN6432	= 233,
    ATOMMIN8	= 234,
    ATOMNAND16	= 235,
    ATOMNAND32	= 236,
    ATOMNAND64	= 237,
    ATOMNAND6432	= 238,
    ATOMNAND8	= 239,
    ATOMOR16	= 240,
    ATOMOR32	= 241,
    ATOMOR64	= 242,
    ATOMOR6432	= 243,
    ATOMOR8	= 244,
    ATOMSUB6432	= 245,
    ATOMSWAP6432	= 246,
    ATOMUMAX16	= 247,
    ATOMUMAX32	= 248,
    ATOMUMAX64	= 249,
    ATOMUMAX6432	= 250,
    ATOMUMAX8	= 251,
    ATOMUMIN16	= 252,
    ATOMUMIN32	= 253,
    ATOMUMIN64	= 254,
    ATOMUMIN6432	= 255,
    ATOMUMIN8	= 256,
    ATOMXOR16	= 257,
    ATOMXOR32	= 258,
    ATOMXOR64	= 259,
    ATOMXOR6432	= 260,
    ATOMXOR8	= 261,
    AVX2_SETALLONES	= 262,
    AVX_SET0	= 263,
    BEXTR32rm	= 264,
    BEXTR32rr	= 265,
    BEXTR64rm	= 266,
    BEXTR64rr	= 267,
    BLENDPDrmi	= 268,
    BLENDPDrri	= 269,
    BLENDPSrmi	= 270,
    BLENDPSrri	= 271,
    BLENDVPDrm0	= 272,
    BLENDVPDrr0	= 273,
    BLENDVPSrm0	= 274,
    BLENDVPSrr0	= 275,
    BLSI32rm	= 276,
    BLSI32rr	= 277,
    BLSI64rm	= 278,
    BLSI64rr	= 279,
    BLSMSK32rm	= 280,
    BLSMSK32rr	= 281,
    BLSMSK64rm	= 282,
    BLSMSK64rr	= 283,
    BLSR32rm	= 284,
    BLSR32rr	= 285,
    BLSR64rm	= 286,
    BLSR64rr	= 287,
    BOUNDS16rm	= 288,
    BOUNDS32rm	= 289,
    BSF16rm	= 290,
    BSF16rr	= 291,
    BSF32rm	= 292,
    BSF32rr	= 293,
    BSF64rm	= 294,
    BSF64rr	= 295,
    BSR16rm	= 296,
    BSR16rr	= 297,
    BSR32rm	= 298,
    BSR32rr	= 299,
    BSR64rm	= 300,
    BSR64rr	= 301,
    BSWAP32r	= 302,
    BSWAP64r	= 303,
    BT16mi8	= 304,
    BT16mr	= 305,
    BT16ri8	= 306,
    BT16rr	= 307,
    BT32mi8	= 308,
    BT32mr	= 309,
    BT32ri8	= 310,
    BT32rr	= 311,
    BT64mi8	= 312,
    BT64mr	= 313,
    BT64ri8	= 314,
    BT64rr	= 315,
    BTC16mi8	= 316,
    BTC16mr	= 317,
    BTC16ri8	= 318,
    BTC16rr	= 319,
    BTC32mi8	= 320,
    BTC32mr	= 321,
    BTC32ri8	= 322,
    BTC32rr	= 323,
    BTC64mi8	= 324,
    BTC64mr	= 325,
    BTC64ri8	= 326,
    BTC64rr	= 327,
    BTR16mi8	= 328,
    BTR16mr	= 329,
    BTR16ri8	= 330,
    BTR16rr	= 331,
    BTR32mi8	= 332,
    BTR32mr	= 333,
    BTR32ri8	= 334,
    BTR32rr	= 335,
    BTR64mi8	= 336,
    BTR64mr	= 337,
    BTR64ri8	= 338,
    BTR64rr	= 339,
    BTS16mi8	= 340,
    BTS16mr	= 341,
    BTS16ri8	= 342,
    BTS16rr	= 343,
    BTS32mi8	= 344,
    BTS32mr	= 345,
    BTS32ri8	= 346,
    BTS32rr	= 347,
    BTS64mi8	= 348,
    BTS64mr	= 349,
    BTS64ri8	= 350,
    BTS64rr	= 351,
    BZHI32rm	= 352,
    BZHI32rr	= 353,
    BZHI64rm	= 354,
    BZHI64rr	= 355,
    CALL32m	= 356,
    CALL32r	= 357,
    CALL64m	= 358,
    CALL64pcrel32	= 359,
    CALL64r	= 360,
    CALLpcrel16	= 361,
    CALLpcrel32	= 362,
    CBW	= 363,
    CDQ	= 364,
    CDQE	= 365,
    CHS_F	= 366,
    CHS_Fp32	= 367,
    CHS_Fp64	= 368,
    CHS_Fp80	= 369,
    CLAC	= 370,
    CLC	= 371,
    CLD	= 372,
    CLFLUSH	= 373,
    CLGI	= 374,
    CLI	= 375,
    CLTS	= 376,
    CMC	= 377,
    CMOVA16rm	= 378,
    CMOVA16rr	= 379,
    CMOVA32rm	= 380,
    CMOVA32rr	= 381,
    CMOVA64rm	= 382,
    CMOVA64rr	= 383,
    CMOVAE16rm	= 384,
    CMOVAE16rr	= 385,
    CMOVAE32rm	= 386,
    CMOVAE32rr	= 387,
    CMOVAE64rm	= 388,
    CMOVAE64rr	= 389,
    CMOVB16rm	= 390,
    CMOVB16rr	= 391,
    CMOVB32rm	= 392,
    CMOVB32rr	= 393,
    CMOVB64rm	= 394,
    CMOVB64rr	= 395,
    CMOVBE16rm	= 396,
    CMOVBE16rr	= 397,
    CMOVBE32rm	= 398,
    CMOVBE32rr	= 399,
    CMOVBE64rm	= 400,
    CMOVBE64rr	= 401,
    CMOVBE_F	= 402,
    CMOVBE_Fp32	= 403,
    CMOVBE_Fp64	= 404,
    CMOVBE_Fp80	= 405,
    CMOVB_F	= 406,
    CMOVB_Fp32	= 407,
    CMOVB_Fp64	= 408,
    CMOVB_Fp80	= 409,
    CMOVE16rm	= 410,
    CMOVE16rr	= 411,
    CMOVE32rm	= 412,
    CMOVE32rr	= 413,
    CMOVE64rm	= 414,
    CMOVE64rr	= 415,
    CMOVE_F	= 416,
    CMOVE_Fp32	= 417,
    CMOVE_Fp64	= 418,
    CMOVE_Fp80	= 419,
    CMOVG16rm	= 420,
    CMOVG16rr	= 421,
    CMOVG32rm	= 422,
    CMOVG32rr	= 423,
    CMOVG64rm	= 424,
    CMOVG64rr	= 425,
    CMOVGE16rm	= 426,
    CMOVGE16rr	= 427,
    CMOVGE32rm	= 428,
    CMOVGE32rr	= 429,
    CMOVGE64rm	= 430,
    CMOVGE64rr	= 431,
    CMOVL16rm	= 432,
    CMOVL16rr	= 433,
    CMOVL32rm	= 434,
    CMOVL32rr	= 435,
    CMOVL64rm	= 436,
    CMOVL64rr	= 437,
    CMOVLE16rm	= 438,
    CMOVLE16rr	= 439,
    CMOVLE32rm	= 440,
    CMOVLE32rr	= 441,
    CMOVLE64rm	= 442,
    CMOVLE64rr	= 443,
    CMOVNBE_F	= 444,
    CMOVNBE_Fp32	= 445,
    CMOVNBE_Fp64	= 446,
    CMOVNBE_Fp80	= 447,
    CMOVNB_F	= 448,
    CMOVNB_Fp32	= 449,
    CMOVNB_Fp64	= 450,
    CMOVNB_Fp80	= 451,
    CMOVNE16rm	= 452,
    CMOVNE16rr	= 453,
    CMOVNE32rm	= 454,
    CMOVNE32rr	= 455,
    CMOVNE64rm	= 456,
    CMOVNE64rr	= 457,
    CMOVNE_F	= 458,
    CMOVNE_Fp32	= 459,
    CMOVNE_Fp64	= 460,
    CMOVNE_Fp80	= 461,
    CMOVNO16rm	= 462,
    CMOVNO16rr	= 463,
    CMOVNO32rm	= 464,
    CMOVNO32rr	= 465,
    CMOVNO64rm	= 466,
    CMOVNO64rr	= 467,
    CMOVNP16rm	= 468,
    CMOVNP16rr	= 469,
    CMOVNP32rm	= 470,
    CMOVNP32rr	= 471,
    CMOVNP64rm	= 472,
    CMOVNP64rr	= 473,
    CMOVNP_F	= 474,
    CMOVNP_Fp32	= 475,
    CMOVNP_Fp64	= 476,
    CMOVNP_Fp80	= 477,
    CMOVNS16rm	= 478,
    CMOVNS16rr	= 479,
    CMOVNS32rm	= 480,
    CMOVNS32rr	= 481,
    CMOVNS64rm	= 482,
    CMOVNS64rr	= 483,
    CMOVO16rm	= 484,
    CMOVO16rr	= 485,
    CMOVO32rm	= 486,
    CMOVO32rr	= 487,
    CMOVO64rm	= 488,
    CMOVO64rr	= 489,
    CMOVP16rm	= 490,
    CMOVP16rr	= 491,
    CMOVP32rm	= 492,
    CMOVP32rr	= 493,
    CMOVP64rm	= 494,
    CMOVP64rr	= 495,
    CMOVP_F	= 496,
    CMOVP_Fp32	= 497,
    CMOVP_Fp64	= 498,
    CMOVP_Fp80	= 499,
    CMOVS16rm	= 500,
    CMOVS16rr	= 501,
    CMOVS32rm	= 502,
    CMOVS32rr	= 503,
    CMOVS64rm	= 504,
    CMOVS64rr	= 505,
    CMOV_FR32	= 506,
    CMOV_FR64	= 507,
    CMOV_GR16	= 508,
    CMOV_GR32	= 509,
    CMOV_GR8	= 510,
    CMOV_RFP32	= 511,
    CMOV_RFP64	= 512,
    CMOV_RFP80	= 513,
    CMOV_V2F64	= 514,
    CMOV_V2I64	= 515,
    CMOV_V4F32	= 516,
    CMOV_V4F64	= 517,
    CMOV_V4I64	= 518,
    CMOV_V8F32	= 519,
    CMP16i16	= 520,
    CMP16mi	= 521,
    CMP16mi8	= 522,
    CMP16mr	= 523,
    CMP16ri	= 524,
    CMP16ri8	= 525,
    CMP16rm	= 526,
    CMP16rr	= 527,
    CMP16rr_REV	= 528,
    CMP32i32	= 529,
    CMP32mi	= 530,
    CMP32mi8	= 531,
    CMP32mr	= 532,
    CMP32ri	= 533,
    CMP32ri8	= 534,
    CMP32rm	= 535,
    CMP32rr	= 536,
    CMP32rr_REV	= 537,
    CMP64i32	= 538,
    CMP64mi32	= 539,
    CMP64mi8	= 540,
    CMP64mr	= 541,
    CMP64ri32	= 542,
    CMP64ri8	= 543,
    CMP64rm	= 544,
    CMP64rr	= 545,
    CMP64rr_REV	= 546,
    CMP8i8	= 547,
    CMP8mi	= 548,
    CMP8mr	= 549,
    CMP8ri	= 550,
    CMP8rm	= 551,
    CMP8rr	= 552,
    CMP8rr_REV	= 553,
    CMPPDrmi	= 554,
    CMPPDrmi_alt	= 555,
    CMPPDrri	= 556,
    CMPPDrri_alt	= 557,
    CMPPSrmi	= 558,
    CMPPSrmi_alt	= 559,
    CMPPSrri	= 560,
    CMPPSrri_alt	= 561,
    CMPS16	= 562,
    CMPS32	= 563,
    CMPS64	= 564,
    CMPS8	= 565,
    CMPSDrm	= 566,
    CMPSDrm_alt	= 567,
    CMPSDrr	= 568,
    CMPSDrr_alt	= 569,
    CMPSSrm	= 570,
    CMPSSrm_alt	= 571,
    CMPSSrr	= 572,
    CMPSSrr_alt	= 573,
    CMPXCHG16B	= 574,
    CMPXCHG16rm	= 575,
    CMPXCHG16rr	= 576,
    CMPXCHG32rm	= 577,
    CMPXCHG32rr	= 578,
    CMPXCHG64rm	= 579,
    CMPXCHG64rr	= 580,
    CMPXCHG8B	= 581,
    CMPXCHG8rm	= 582,
    CMPXCHG8rr	= 583,
    COMISDrm	= 584,
    COMISDrr	= 585,
    COMISSrm	= 586,
    COMISSrr	= 587,
    COMP_FST0r	= 588,
    COM_FIPr	= 589,
    COM_FIr	= 590,
    COM_FST0r	= 591,
    COS_F	= 592,
    COS_Fp32	= 593,
    COS_Fp64	= 594,
    COS_Fp80	= 595,
    CPUID	= 596,
    CQO	= 597,
    CRC32r32m16	= 598,
    CRC32r32m32	= 599,
    CRC32r32m8	= 600,
    CRC32r32r16	= 601,
    CRC32r32r32	= 602,
    CRC32r32r8	= 603,
    CRC32r64m64	= 604,
    CRC32r64m8	= 605,
    CRC32r64r64	= 606,
    CRC32r64r8	= 607,
    CS_PREFIX	= 608,
    CVTDQ2PDrm	= 609,
    CVTDQ2PDrr	= 610,
    CVTDQ2PSrm	= 611,
    CVTDQ2PSrr	= 612,
    CVTPD2DQrm	= 613,
    CVTPD2DQrr	= 614,
    CVTPD2PSrm	= 615,
    CVTPD2PSrr	= 616,
    CVTPS2DQrm	= 617,
    CVTPS2DQrr	= 618,
    CVTPS2PDrm	= 619,
    CVTPS2PDrr	= 620,
    CVTSD2SI64rm	= 621,
    CVTSD2SI64rr	= 622,
    CVTSD2SIrm	= 623,
    CVTSD2SIrr	= 624,
    CVTSD2SSrm	= 625,
    CVTSD2SSrr	= 626,
    CVTSI2SD64rm	= 627,
    CVTSI2SD64rr	= 628,
    CVTSI2SDrm	= 629,
    CVTSI2SDrr	= 630,
    CVTSI2SS64rm	= 631,
    CVTSI2SS64rr	= 632,
    CVTSI2SSrm	= 633,
    CVTSI2SSrr	= 634,
    CVTSS2SDrm	= 635,
    CVTSS2SDrr	= 636,
    CVTSS2SI64rm	= 637,
    CVTSS2SI64rr	= 638,
    CVTSS2SIrm	= 639,
    CVTSS2SIrr	= 640,
    CVTTPD2DQrm	= 641,
    CVTTPD2DQrr	= 642,
    CVTTPS2DQrm	= 643,
    CVTTPS2DQrr	= 644,
    CVTTSD2SI64rm	= 645,
    CVTTSD2SI64rr	= 646,
    CVTTSD2SIrm	= 647,
    CVTTSD2SIrr	= 648,
    CVTTSS2SI64rm	= 649,
    CVTTSS2SI64rr	= 650,
    CVTTSS2SIrm	= 651,
    CVTTSS2SIrr	= 652,
    CWD	= 653,
    CWDE	= 654,
    DAA	= 655,
    DAS	= 656,
    DATA16_PREFIX	= 657,
    DEC16m	= 658,
    DEC16r	= 659,
    DEC32m	= 660,
    DEC32r	= 661,
    DEC64_16m	= 662,
    DEC64_16r	= 663,
    DEC64_32m	= 664,
    DEC64_32r	= 665,
    DEC64m	= 666,
    DEC64r	= 667,
    DEC8m	= 668,
    DEC8r	= 669,
    DIV16m	= 670,
    DIV16r	= 671,
    DIV32m	= 672,
    DIV32r	= 673,
    DIV64m	= 674,
    DIV64r	= 675,
    DIV8m	= 676,
    DIV8r	= 677,
    DIVPDrm	= 678,
    DIVPDrr	= 679,
    DIVPSrm	= 680,
    DIVPSrr	= 681,
    DIVR_F32m	= 682,
    DIVR_F64m	= 683,
    DIVR_FI16m	= 684,
    DIVR_FI32m	= 685,
    DIVR_FPrST0	= 686,
    DIVR_FST0r	= 687,
    DIVR_Fp32m	= 688,
    DIVR_Fp64m	= 689,
    DIVR_Fp64m32	= 690,
    DIVR_Fp80m32	= 691,
    DIVR_Fp80m64	= 692,
    DIVR_FpI16m32	= 693,
    DIVR_FpI16m64	= 694,
    DIVR_FpI16m80	= 695,
    DIVR_FpI32m32	= 696,
    DIVR_FpI32m64	= 697,
    DIVR_FpI32m80	= 698,
    DIVR_FrST0	= 699,
    DIVSDrm	= 700,
    DIVSDrm_Int	= 701,
    DIVSDrr	= 702,
    DIVSDrr_Int	= 703,
    DIVSSrm	= 704,
    DIVSSrm_Int	= 705,
    DIVSSrr	= 706,
    DIVSSrr_Int	= 707,
    DIV_F32m	= 708,
    DIV_F64m	= 709,
    DIV_FI16m	= 710,
    DIV_FI32m	= 711,
    DIV_FPrST0	= 712,
    DIV_FST0r	= 713,
    DIV_Fp32	= 714,
    DIV_Fp32m	= 715,
    DIV_Fp64	= 716,
    DIV_Fp64m	= 717,
    DIV_Fp64m32	= 718,
    DIV_Fp80	= 719,
    DIV_Fp80m32	= 720,
    DIV_Fp80m64	= 721,
    DIV_FpI16m32	= 722,
    DIV_FpI16m64	= 723,
    DIV_FpI16m80	= 724,
    DIV_FpI32m32	= 725,
    DIV_FpI32m64	= 726,
    DIV_FpI32m80	= 727,
    DIV_FrST0	= 728,
    DPPDrmi	= 729,
    DPPDrri	= 730,
    DPPSrmi	= 731,
    DPPSrri	= 732,
    DS_PREFIX	= 733,
    EH_RETURN	= 734,
    EH_RETURN64	= 735,
    EH_SjLj_LongJmp32	= 736,
    EH_SjLj_LongJmp64	= 737,
    EH_SjLj_SetJmp32	= 738,
    EH_SjLj_SetJmp64	= 739,
    EH_SjLj_Setup	= 740,
    ENTER	= 741,
    ES_PREFIX	= 742,
    EXTRACTPSmr	= 743,
    EXTRACTPSrr	= 744,
    EXTRQ	= 745,
    EXTRQI	= 746,
    F2XM1	= 747,
    FARCALL16i	= 748,
    FARCALL16m	= 749,
    FARCALL32i	= 750,
    FARCALL32m	= 751,
    FARCALL64	= 752,
    FARJMP16i	= 753,
    FARJMP16m	= 754,
    FARJMP32i	= 755,
    FARJMP32m	= 756,
    FARJMP64	= 757,
    FBLDm	= 758,
    FBSTPm	= 759,
    FCOM32m	= 760,
    FCOM64m	= 761,
    FCOMP32m	= 762,
    FCOMP64m	= 763,
    FCOMPP	= 764,
    FDECSTP	= 765,
    FEMMS	= 766,
    FFREE	= 767,
    FICOM16m	= 768,
    FICOM32m	= 769,
    FICOMP16m	= 770,
    FICOMP32m	= 771,
    FINCSTP	= 772,
    FLDCW16m	= 773,
    FLDENVm	= 774,
    FLDL2E	= 775,
    FLDL2T	= 776,
    FLDLG2	= 777,
    FLDLN2	= 778,
    FLDPI	= 779,
    FNCLEX	= 780,
    FNINIT	= 781,
    FNOP	= 782,
    FNSTCW16m	= 783,
    FNSTSW16r	= 784,
    FNSTSWm	= 785,
    FP32_TO_INT16_IN_MEM	= 786,
    FP32_TO_INT32_IN_MEM	= 787,
    FP32_TO_INT64_IN_MEM	= 788,
    FP64_TO_INT16_IN_MEM	= 789,
    FP64_TO_INT32_IN_MEM	= 790,
    FP64_TO_INT64_IN_MEM	= 791,
    FP80_TO_INT16_IN_MEM	= 792,
    FP80_TO_INT32_IN_MEM	= 793,
    FP80_TO_INT64_IN_MEM	= 794,
    FPATAN	= 795,
    FPREM	= 796,
    FPREM1	= 797,
    FPTAN	= 798,
    FRNDINT	= 799,
    FRSTORm	= 800,
    FSAVEm	= 801,
    FSCALE	= 802,
    FSINCOS	= 803,
    FSTENVm	= 804,
    FS_PREFIX	= 805,
    FXAM	= 806,
    FXRSTOR	= 807,
    FXRSTOR64	= 808,
    FXSAVE	= 809,
    FXSAVE64	= 810,
    FXTRACT	= 811,
    FYL2X	= 812,
    FYL2XP1	= 813,
    FpPOP_RETVAL	= 814,
    FsANDNPDrm	= 815,
    FsANDNPDrr	= 816,
    FsANDNPSrm	= 817,
    FsANDNPSrr	= 818,
    FsANDPDrm	= 819,
    FsANDPDrr	= 820,
    FsANDPSrm	= 821,
    FsANDPSrr	= 822,
    FsFLD0SD	= 823,
    FsFLD0SS	= 824,
    FsMOVAPDrm	= 825,
    FsMOVAPDrr	= 826,
    FsMOVAPSrm	= 827,
    FsMOVAPSrr	= 828,
    FsORPDrm	= 829,
    FsORPDrr	= 830,
    FsORPSrm	= 831,
    FsORPSrr	= 832,
    FsVMOVAPDrm	= 833,
    FsVMOVAPDrr	= 834,
    FsVMOVAPSrm	= 835,
    FsVMOVAPSrr	= 836,
    FsXORPDrm	= 837,
    FsXORPDrr	= 838,
    FsXORPSrm	= 839,
    FsXORPSrr	= 840,
    GS_PREFIX	= 841,
    HADDPDrm	= 842,
    HADDPDrr	= 843,
    HADDPSrm	= 844,
    HADDPSrr	= 845,
    HLT	= 846,
    HSUBPDrm	= 847,
    HSUBPDrr	= 848,
    HSUBPSrm	= 849,
    HSUBPSrr	= 850,
    IDIV16m	= 851,
    IDIV16r	= 852,
    IDIV32m	= 853,
    IDIV32r	= 854,
    IDIV64m	= 855,
    IDIV64r	= 856,
    IDIV8m	= 857,
    IDIV8r	= 858,
    ILD_F16m	= 859,
    ILD_F32m	= 860,
    ILD_F64m	= 861,
    ILD_Fp16m32	= 862,
    ILD_Fp16m64	= 863,
    ILD_Fp16m80	= 864,
    ILD_Fp32m32	= 865,
    ILD_Fp32m64	= 866,
    ILD_Fp32m80	= 867,
    ILD_Fp64m32	= 868,
    ILD_Fp64m64	= 869,
    ILD_Fp64m80	= 870,
    IMUL16m	= 871,
    IMUL16r	= 872,
    IMUL16rm	= 873,
    IMUL16rmi	= 874,
    IMUL16rmi8	= 875,
    IMUL16rr	= 876,
    IMUL16rri	= 877,
    IMUL16rri8	= 878,
    IMUL32m	= 879,
    IMUL32r	= 880,
    IMUL32rm	= 881,
    IMUL32rmi	= 882,
    IMUL32rmi8	= 883,
    IMUL32rr	= 884,
    IMUL32rri	= 885,
    IMUL32rri8	= 886,
    IMUL64m	= 887,
    IMUL64r	= 888,
    IMUL64rm	= 889,
    IMUL64rmi32	= 890,
    IMUL64rmi8	= 891,
    IMUL64rr	= 892,
    IMUL64rri32	= 893,
    IMUL64rri8	= 894,
    IMUL8m	= 895,
    IMUL8r	= 896,
    IN16	= 897,
    IN16ri	= 898,
    IN16rr	= 899,
    IN32	= 900,
    IN32ri	= 901,
    IN32rr	= 902,
    IN8	= 903,
    IN8ri	= 904,
    IN8rr	= 905,
    INC16m	= 906,
    INC16r	= 907,
    INC32m	= 908,
    INC32r	= 909,
    INC64_16m	= 910,
    INC64_16r	= 911,
    INC64_32m	= 912,
    INC64_32r	= 913,
    INC64m	= 914,
    INC64r	= 915,
    INC8m	= 916,
    INC8r	= 917,
    INSERTPSrm	= 918,
    INSERTPSrr	= 919,
    INSERTQ	= 920,
    INSERTQI	= 921,
    INT	= 922,
    INT3	= 923,
    INTO	= 924,
    INVD	= 925,
    INVEPT32	= 926,
    INVEPT64	= 927,
    INVLPG	= 928,
    INVLPGA32	= 929,
    INVLPGA64	= 930,
    INVPCID32	= 931,
    INVPCID64	= 932,
    INVVPID32	= 933,
    INVVPID64	= 934,
    IRET16	= 935,
    IRET32	= 936,
    IRET64	= 937,
    ISTT_FP16m	= 938,
    ISTT_FP32m	= 939,
    ISTT_FP64m	= 940,
    ISTT_Fp16m32	= 941,
    ISTT_Fp16m64	= 942,
    ISTT_Fp16m80	= 943,
    ISTT_Fp32m32	= 944,
    ISTT_Fp32m64	= 945,
    ISTT_Fp32m80	= 946,
    ISTT_Fp64m32	= 947,
    ISTT_Fp64m64	= 948,
    ISTT_Fp64m80	= 949,
    IST_F16m	= 950,
    IST_F32m	= 951,
    IST_FP16m	= 952,
    IST_FP32m	= 953,
    IST_FP64m	= 954,
    IST_Fp16m32	= 955,
    IST_Fp16m64	= 956,
    IST_Fp16m80	= 957,
    IST_Fp32m32	= 958,
    IST_Fp32m64	= 959,
    IST_Fp32m80	= 960,
    IST_Fp64m32	= 961,
    IST_Fp64m64	= 962,
    IST_Fp64m80	= 963,
    Int_CMPSDrm	= 964,
    Int_CMPSDrr	= 965,
    Int_CMPSSrm	= 966,
    Int_CMPSSrr	= 967,
    Int_COMISDrm	= 968,
    Int_COMISDrr	= 969,
    Int_COMISSrm	= 970,
    Int_COMISSrr	= 971,
    Int_CVTSD2SSrm	= 972,
    Int_CVTSD2SSrr	= 973,
    Int_CVTSI2SD64rm	= 974,
    Int_CVTSI2SD64rr	= 975,
    Int_CVTSI2SDrm	= 976,
    Int_CVTSI2SDrr	= 977,
    Int_CVTSI2SS64rm	= 978,
    Int_CVTSI2SS64rr	= 979,
    Int_CVTSI2SSrm	= 980,
    Int_CVTSI2SSrr	= 981,
    Int_CVTSS2SDrm	= 982,
    Int_CVTSS2SDrr	= 983,
    Int_CVTTSD2SI64rm	= 984,
    Int_CVTTSD2SI64rr	= 985,
    Int_CVTTSD2SIrm	= 986,
    Int_CVTTSD2SIrr	= 987,
    Int_CVTTSS2SI64rm	= 988,
    Int_CVTTSS2SI64rr	= 989,
    Int_CVTTSS2SIrm	= 990,
    Int_CVTTSS2SIrr	= 991,
    Int_MemBarrier	= 992,
    Int_UCOMISDrm	= 993,
    Int_UCOMISDrr	= 994,
    Int_UCOMISSrm	= 995,
    Int_UCOMISSrr	= 996,
    Int_VCMPSDrm	= 997,
    Int_VCMPSDrr	= 998,
    Int_VCMPSSrm	= 999,
    Int_VCMPSSrr	= 1000,
    Int_VCOMISDrm	= 1001,
    Int_VCOMISDrr	= 1002,
    Int_VCOMISSrm	= 1003,
    Int_VCOMISSrr	= 1004,
    Int_VCVTSD2SSrm	= 1005,
    Int_VCVTSD2SSrr	= 1006,
    Int_VCVTSI2SD64rm	= 1007,
    Int_VCVTSI2SD64rr	= 1008,
    Int_VCVTSI2SDrm	= 1009,
    Int_VCVTSI2SDrr	= 1010,
    Int_VCVTSI2SS64rm	= 1011,
    Int_VCVTSI2SS64rr	= 1012,
    Int_VCVTSI2SSrm	= 1013,
    Int_VCVTSI2SSrr	= 1014,
    Int_VCVTSS2SDrm	= 1015,
    Int_VCVTSS2SDrr	= 1016,
    Int_VCVTTSD2SI64rm	= 1017,
    Int_VCVTTSD2SI64rr	= 1018,
    Int_VCVTTSD2SIrm	= 1019,
    Int_VCVTTSD2SIrr	= 1020,
    Int_VCVTTSS2SI64rm	= 1021,
    Int_VCVTTSS2SI64rr	= 1022,
    Int_VCVTTSS2SIrm	= 1023,
    Int_VCVTTSS2SIrr	= 1024,
    Int_VUCOMISDrm	= 1025,
    Int_VUCOMISDrr	= 1026,
    Int_VUCOMISSrm	= 1027,
    Int_VUCOMISSrr	= 1028,
    JAE_1	= 1029,
    JAE_4	= 1030,
    JA_1	= 1031,
    JA_4	= 1032,
    JBE_1	= 1033,
    JBE_4	= 1034,
    JB_1	= 1035,
    JB_4	= 1036,
    JCXZ	= 1037,
    JECXZ_32	= 1038,
    JECXZ_64	= 1039,
    JE_1	= 1040,
    JE_4	= 1041,
    JGE_1	= 1042,
    JGE_4	= 1043,
    JG_1	= 1044,
    JG_4	= 1045,
    JLE_1	= 1046,
    JLE_4	= 1047,
    JL_1	= 1048,
    JL_4	= 1049,
    JMP32m	= 1050,
    JMP32r	= 1051,
    JMP64m	= 1052,
    JMP64pcrel32	= 1053,
    JMP64r	= 1054,
    JMP_1	= 1055,
    JMP_4	= 1056,
    JNE_1	= 1057,
    JNE_4	= 1058,
    JNO_1	= 1059,
    JNO_4	= 1060,
    JNP_1	= 1061,
    JNP_4	= 1062,
    JNS_1	= 1063,
    JNS_4	= 1064,
    JO_1	= 1065,
    JO_4	= 1066,
    JP_1	= 1067,
    JP_4	= 1068,
    JRCXZ	= 1069,
    JS_1	= 1070,
    JS_4	= 1071,
    LAHF	= 1072,
    LAR16rm	= 1073,
    LAR16rr	= 1074,
    LAR32rm	= 1075,
    LAR32rr	= 1076,
    LAR64rm	= 1077,
    LAR64rr	= 1078,
    LCMPXCHG16	= 1079,
    LCMPXCHG16B	= 1080,
    LCMPXCHG32	= 1081,
    LCMPXCHG64	= 1082,
    LCMPXCHG8	= 1083,
    LCMPXCHG8B	= 1084,
    LDDQUrm	= 1085,
    LDMXCSR	= 1086,
    LDS16rm	= 1087,
    LDS32rm	= 1088,
    LD_F0	= 1089,
    LD_F1	= 1090,
    LD_F32m	= 1091,
    LD_F64m	= 1092,
    LD_F80m	= 1093,
    LD_Fp032	= 1094,
    LD_Fp064	= 1095,
    LD_Fp080	= 1096,
    LD_Fp132	= 1097,
    LD_Fp164	= 1098,
    LD_Fp180	= 1099,
    LD_Fp32m	= 1100,
    LD_Fp32m64	= 1101,
    LD_Fp32m80	= 1102,
    LD_Fp64m	= 1103,
    LD_Fp64m80	= 1104,
    LD_Fp80m	= 1105,
    LD_Frr	= 1106,
    LEA16r	= 1107,
    LEA32r	= 1108,
    LEA64_32r	= 1109,
    LEA64r	= 1110,
    LEAVE	= 1111,
    LEAVE64	= 1112,
    LES16rm	= 1113,
    LES32rm	= 1114,
    LFENCE	= 1115,
    LFS16rm	= 1116,
    LFS32rm	= 1117,
    LFS64rm	= 1118,
    LGDT16m	= 1119,
    LGDTm	= 1120,
    LGS16rm	= 1121,
    LGS32rm	= 1122,
    LGS64rm	= 1123,
    LIDT16m	= 1124,
    LIDTm	= 1125,
    LLDT16m	= 1126,
    LLDT16r	= 1127,
    LMSW16m	= 1128,
    LMSW16r	= 1129,
    LOCK_ADD16mi	= 1130,
    LOCK_ADD16mi8	= 1131,
    LOCK_ADD16mr	= 1132,
    LOCK_ADD32mi	= 1133,
    LOCK_ADD32mi8	= 1134,
    LOCK_ADD32mr	= 1135,
    LOCK_ADD64mi32	= 1136,
    LOCK_ADD64mi8	= 1137,
    LOCK_ADD64mr	= 1138,
    LOCK_ADD8mi	= 1139,
    LOCK_ADD8mr	= 1140,
    LOCK_AND16mi	= 1141,
    LOCK_AND16mi8	= 1142,
    LOCK_AND16mr	= 1143,
    LOCK_AND32mi	= 1144,
    LOCK_AND32mi8	= 1145,
    LOCK_AND32mr	= 1146,
    LOCK_AND64mi32	= 1147,
    LOCK_AND64mi8	= 1148,
    LOCK_AND64mr	= 1149,
    LOCK_AND8mi	= 1150,
    LOCK_AND8mr	= 1151,
    LOCK_DEC16m	= 1152,
    LOCK_DEC32m	= 1153,
    LOCK_DEC64m	= 1154,
    LOCK_DEC8m	= 1155,
    LOCK_INC16m	= 1156,
    LOCK_INC32m	= 1157,
    LOCK_INC64m	= 1158,
    LOCK_INC8m	= 1159,
    LOCK_OR16mi	= 1160,
    LOCK_OR16mi8	= 1161,
    LOCK_OR16mr	= 1162,
    LOCK_OR32mi	= 1163,
    LOCK_OR32mi8	= 1164,
    LOCK_OR32mr	= 1165,
    LOCK_OR64mi32	= 1166,
    LOCK_OR64mi8	= 1167,
    LOCK_OR64mr	= 1168,
    LOCK_OR8mi	= 1169,
    LOCK_OR8mr	= 1170,
    LOCK_PREFIX	= 1171,
    LOCK_SUB16mi	= 1172,
    LOCK_SUB16mi8	= 1173,
    LOCK_SUB16mr	= 1174,
    LOCK_SUB32mi	= 1175,
    LOCK_SUB32mi8	= 1176,
    LOCK_SUB32mr	= 1177,
    LOCK_SUB64mi32	= 1178,
    LOCK_SUB64mi8	= 1179,
    LOCK_SUB64mr	= 1180,
    LOCK_SUB8mi	= 1181,
    LOCK_SUB8mr	= 1182,
    LOCK_XOR16mi	= 1183,
    LOCK_XOR16mi8	= 1184,
    LOCK_XOR16mr	= 1185,
    LOCK_XOR32mi	= 1186,
    LOCK_XOR32mi8	= 1187,
    LOCK_XOR32mr	= 1188,
    LOCK_XOR64mi32	= 1189,
    LOCK_XOR64mi8	= 1190,
    LOCK_XOR64mr	= 1191,
    LOCK_XOR8mi	= 1192,
    LOCK_XOR8mr	= 1193,
    LODSB	= 1194,
    LODSD	= 1195,
    LODSQ	= 1196,
    LODSW	= 1197,
    LOOP	= 1198,
    LOOPE	= 1199,
    LOOPNE	= 1200,
    LRETI	= 1201,
    LRETIW	= 1202,
    LRETL	= 1203,
    LRETQ	= 1204,
    LRETW	= 1205,
    LSL16rm	= 1206,
    LSL16rr	= 1207,
    LSL32rm	= 1208,
    LSL32rr	= 1209,
    LSL64rm	= 1210,
    LSL64rr	= 1211,
    LSS16rm	= 1212,
    LSS32rm	= 1213,
    LSS64rm	= 1214,
    LTRm	= 1215,
    LTRr	= 1216,
    LXADD16	= 1217,
    LXADD32	= 1218,
    LXADD64	= 1219,
    LXADD8	= 1220,
    LZCNT16rm	= 1221,
    LZCNT16rr	= 1222,
    LZCNT32rm	= 1223,
    LZCNT32rr	= 1224,
    LZCNT64rm	= 1225,
    LZCNT64rr	= 1226,
    MASKMOVDQU	= 1227,
    MASKMOVDQU64	= 1228,
    MAXCPDrm	= 1229,
    MAXCPDrr	= 1230,
    MAXCPSrm	= 1231,
    MAXCPSrr	= 1232,
    MAXCSDrm	= 1233,
    MAXCSDrr	= 1234,
    MAXCSSrm	= 1235,
    MAXCSSrr	= 1236,
    MAXPDrm	= 1237,
    MAXPDrr	= 1238,
    MAXPSrm	= 1239,
    MAXPSrr	= 1240,
    MAXSDrm	= 1241,
    MAXSDrm_Int	= 1242,
    MAXSDrr	= 1243,
    MAXSDrr_Int	= 1244,
    MAXSSrm	= 1245,
    MAXSSrm_Int	= 1246,
    MAXSSrr	= 1247,
    MAXSSrr_Int	= 1248,
    MFENCE	= 1249,
    MINCPDrm	= 1250,
    MINCPDrr	= 1251,
    MINCPSrm	= 1252,
    MINCPSrr	= 1253,
    MINCSDrm	= 1254,
    MINCSDrr	= 1255,
    MINCSSrm	= 1256,
    MINCSSrr	= 1257,
    MINPDrm	= 1258,
    MINPDrr	= 1259,
    MINPSrm	= 1260,
    MINPSrr	= 1261,
    MINSDrm	= 1262,
    MINSDrm_Int	= 1263,
    MINSDrr	= 1264,
    MINSDrr_Int	= 1265,
    MINSSrm	= 1266,
    MINSSrm_Int	= 1267,
    MINSSrr	= 1268,
    MINSSrr_Int	= 1269,
    MMX_CVTPD2PIirm	= 1270,
    MMX_CVTPD2PIirr	= 1271,
    MMX_CVTPI2PDirm	= 1272,
    MMX_CVTPI2PDirr	= 1273,
    MMX_CVTPI2PSirm	= 1274,
    MMX_CVTPI2PSirr	= 1275,
    MMX_CVTPS2PIirm	= 1276,
    MMX_CVTPS2PIirr	= 1277,
    MMX_CVTTPD2PIirm	= 1278,
    MMX_CVTTPD2PIirr	= 1279,
    MMX_CVTTPS2PIirm	= 1280,
    MMX_CVTTPS2PIirr	= 1281,
    MMX_EMMS	= 1282,
    MMX_MASKMOVQ	= 1283,
    MMX_MASKMOVQ64	= 1284,
    MMX_MOVD64from64rr	= 1285,
    MMX_MOVD64grr	= 1286,
    MMX_MOVD64mr	= 1287,
    MMX_MOVD64rm	= 1288,
    MMX_MOVD64rr	= 1289,
    MMX_MOVD64rrv164	= 1290,
    MMX_MOVD64to64rr	= 1291,
    MMX_MOVDQ2Qrr	= 1292,
    MMX_MOVFR642Qrr	= 1293,
    MMX_MOVNTQmr	= 1294,
    MMX_MOVQ2DQrr	= 1295,
    MMX_MOVQ2FR64rr	= 1296,
    MMX_MOVQ64mr	= 1297,
    MMX_MOVQ64rm	= 1298,
    MMX_MOVQ64rr	= 1299,
    MMX_MOVZDI2PDIrm	= 1300,
    MMX_MOVZDI2PDIrr	= 1301,
    MMX_PABSBrm64	= 1302,
    MMX_PABSBrr64	= 1303,
    MMX_PABSDrm64	= 1304,
    MMX_PABSDrr64	= 1305,
    MMX_PABSWrm64	= 1306,
    MMX_PABSWrr64	= 1307,
    MMX_PACKSSDWirm	= 1308,
    MMX_PACKSSDWirr	= 1309,
    MMX_PACKSSWBirm	= 1310,
    MMX_PACKSSWBirr	= 1311,
    MMX_PACKUSWBirm	= 1312,
    MMX_PACKUSWBirr	= 1313,
    MMX_PADDBirm	= 1314,
    MMX_PADDBirr	= 1315,
    MMX_PADDDirm	= 1316,
    MMX_PADDDirr	= 1317,
    MMX_PADDQirm	= 1318,
    MMX_PADDQirr	= 1319,
    MMX_PADDSBirm	= 1320,
    MMX_PADDSBirr	= 1321,
    MMX_PADDSWirm	= 1322,
    MMX_PADDSWirr	= 1323,
    MMX_PADDUSBirm	= 1324,
    MMX_PADDUSBirr	= 1325,
    MMX_PADDUSWirm	= 1326,
    MMX_PADDUSWirr	= 1327,
    MMX_PADDWirm	= 1328,
    MMX_PADDWirr	= 1329,
    MMX_PALIGNR64irm	= 1330,
    MMX_PALIGNR64irr	= 1331,
    MMX_PANDNirm	= 1332,
    MMX_PANDNirr	= 1333,
    MMX_PANDirm	= 1334,
    MMX_PANDirr	= 1335,
    MMX_PAVGBirm	= 1336,
    MMX_PAVGBirr	= 1337,
    MMX_PAVGWirm	= 1338,
    MMX_PAVGWirr	= 1339,
    MMX_PCMPEQBirm	= 1340,
    MMX_PCMPEQBirr	= 1341,
    MMX_PCMPEQDirm	= 1342,
    MMX_PCMPEQDirr	= 1343,
    MMX_PCMPEQWirm	= 1344,
    MMX_PCMPEQWirr	= 1345,
    MMX_PCMPGTBirm	= 1346,
    MMX_PCMPGTBirr	= 1347,
    MMX_PCMPGTDirm	= 1348,
    MMX_PCMPGTDirr	= 1349,
    MMX_PCMPGTWirm	= 1350,
    MMX_PCMPGTWirr	= 1351,
    MMX_PEXTRWirri	= 1352,
    MMX_PHADDSWrm64	= 1353,
    MMX_PHADDSWrr64	= 1354,
    MMX_PHADDWrm64	= 1355,
    MMX_PHADDWrr64	= 1356,
    MMX_PHADDrm64	= 1357,
    MMX_PHADDrr64	= 1358,
    MMX_PHSUBDrm64	= 1359,
    MMX_PHSUBDrr64	= 1360,
    MMX_PHSUBSWrm64	= 1361,
    MMX_PHSUBSWrr64	= 1362,
    MMX_PHSUBWrm64	= 1363,
    MMX_PHSUBWrr64	= 1364,
    MMX_PINSRWirmi	= 1365,
    MMX_PINSRWirri	= 1366,
    MMX_PMADDUBSWrm64	= 1367,
    MMX_PMADDUBSWrr64	= 1368,
    MMX_PMADDWDirm	= 1369,
    MMX_PMADDWDirr	= 1370,
    MMX_PMAXSWirm	= 1371,
    MMX_PMAXSWirr	= 1372,
    MMX_PMAXUBirm	= 1373,
    MMX_PMAXUBirr	= 1374,
    MMX_PMINSWirm	= 1375,
    MMX_PMINSWirr	= 1376,
    MMX_PMINUBirm	= 1377,
    MMX_PMINUBirr	= 1378,
    MMX_PMOVMSKBrr	= 1379,
    MMX_PMULHRSWrm64	= 1380,
    MMX_PMULHRSWrr64	= 1381,
    MMX_PMULHUWirm	= 1382,
    MMX_PMULHUWirr	= 1383,
    MMX_PMULHWirm	= 1384,
    MMX_PMULHWirr	= 1385,
    MMX_PMULLWirm	= 1386,
    MMX_PMULLWirr	= 1387,
    MMX_PMULUDQirm	= 1388,
    MMX_PMULUDQirr	= 1389,
    MMX_PORirm	= 1390,
    MMX_PORirr	= 1391,
    MMX_PSADBWirm	= 1392,
    MMX_PSADBWirr	= 1393,
    MMX_PSHUFBrm64	= 1394,
    MMX_PSHUFBrr64	= 1395,
    MMX_PSHUFWmi	= 1396,
    MMX_PSHUFWri	= 1397,
    MMX_PSIGNBrm64	= 1398,
    MMX_PSIGNBrr64	= 1399,
    MMX_PSIGNDrm64	= 1400,
    MMX_PSIGNDrr64	= 1401,
    MMX_PSIGNWrm64	= 1402,
    MMX_PSIGNWrr64	= 1403,
    MMX_PSLLDri	= 1404,
    MMX_PSLLDrm	= 1405,
    MMX_PSLLDrr	= 1406,
    MMX_PSLLQri	= 1407,
    MMX_PSLLQrm	= 1408,
    MMX_PSLLQrr	= 1409,
    MMX_PSLLWri	= 1410,
    MMX_PSLLWrm	= 1411,
    MMX_PSLLWrr	= 1412,
    MMX_PSRADri	= 1413,
    MMX_PSRADrm	= 1414,
    MMX_PSRADrr	= 1415,
    MMX_PSRAWri	= 1416,
    MMX_PSRAWrm	= 1417,
    MMX_PSRAWrr	= 1418,
    MMX_PSRLDri	= 1419,
    MMX_PSRLDrm	= 1420,
    MMX_PSRLDrr	= 1421,
    MMX_PSRLQri	= 1422,
    MMX_PSRLQrm	= 1423,
    MMX_PSRLQrr	= 1424,
    MMX_PSRLWri	= 1425,
    MMX_PSRLWrm	= 1426,
    MMX_PSRLWrr	= 1427,
    MMX_PSUBBirm	= 1428,
    MMX_PSUBBirr	= 1429,
    MMX_PSUBDirm	= 1430,
    MMX_PSUBDirr	= 1431,
    MMX_PSUBQirm	= 1432,
    MMX_PSUBQirr	= 1433,
    MMX_PSUBSBirm	= 1434,
    MMX_PSUBSBirr	= 1435,
    MMX_PSUBSWirm	= 1436,
    MMX_PSUBSWirr	= 1437,
    MMX_PSUBUSBirm	= 1438,
    MMX_PSUBUSBirr	= 1439,
    MMX_PSUBUSWirm	= 1440,
    MMX_PSUBUSWirr	= 1441,
    MMX_PSUBWirm	= 1442,
    MMX_PSUBWirr	= 1443,
    MMX_PUNPCKHBWirm	= 1444,
    MMX_PUNPCKHBWirr	= 1445,
    MMX_PUNPCKHDQirm	= 1446,
    MMX_PUNPCKHDQirr	= 1447,
    MMX_PUNPCKHWDirm	= 1448,
    MMX_PUNPCKHWDirr	= 1449,
    MMX_PUNPCKLBWirm	= 1450,
    MMX_PUNPCKLBWirr	= 1451,
    MMX_PUNPCKLDQirm	= 1452,
    MMX_PUNPCKLDQirr	= 1453,
    MMX_PUNPCKLWDirm	= 1454,
    MMX_PUNPCKLWDirr	= 1455,
    MMX_PXORirm	= 1456,
    MMX_PXORirr	= 1457,
    MONITOR	= 1458,
    MONITORrrr	= 1459,
    MONTMUL	= 1460,
    MORESTACK_RET	= 1461,
    MORESTACK_RET_RESTORE_R10	= 1462,
    MOV16ao16	= 1463,
    MOV16mi	= 1464,
    MOV16mr	= 1465,
    MOV16ms	= 1466,
    MOV16o16a	= 1467,
    MOV16r0	= 1468,
    MOV16ri	= 1469,
    MOV16rm	= 1470,
    MOV16rr	= 1471,
    MOV16rr_REV	= 1472,
    MOV16rs	= 1473,
    MOV16sm	= 1474,
    MOV16sr	= 1475,
    MOV32ao32	= 1476,
    MOV32cr	= 1477,
    MOV32dr	= 1478,
    MOV32mi	= 1479,
    MOV32mr	= 1480,
    MOV32ms	= 1481,
    MOV32o32a	= 1482,
    MOV32r0	= 1483,
    MOV32rc	= 1484,
    MOV32rd	= 1485,
    MOV32ri	= 1486,
    MOV32rm	= 1487,
    MOV32rr	= 1488,
    MOV32rr_REV	= 1489,
    MOV32rs	= 1490,
    MOV32sm	= 1491,
    MOV32sr	= 1492,
    MOV64cr	= 1493,
    MOV64dr	= 1494,
    MOV64mi32	= 1495,
    MOV64mr	= 1496,
    MOV64ms	= 1497,
    MOV64r0	= 1498,
    MOV64rc	= 1499,
    MOV64rd	= 1500,
    MOV64ri	= 1501,
    MOV64ri32	= 1502,
    MOV64ri64i32	= 1503,
    MOV64rm	= 1504,
    MOV64rr	= 1505,
    MOV64rr_REV	= 1506,
    MOV64rs	= 1507,
    MOV64sm	= 1508,
    MOV64sr	= 1509,
    MOV64toPQIrr	= 1510,
    MOV64toSDrm	= 1511,
    MOV64toSDrr	= 1512,
    MOV8ao8	= 1513,
    MOV8mi	= 1514,
    MOV8mr	= 1515,
    MOV8mr_NOREX	= 1516,
    MOV8o8a	= 1517,
    MOV8r0	= 1518,
    MOV8ri	= 1519,
    MOV8rm	= 1520,
    MOV8rm_NOREX	= 1521,
    MOV8rr	= 1522,
    MOV8rr_NOREX	= 1523,
    MOV8rr_REV	= 1524,
    MOVAPDmr	= 1525,
    MOVAPDrm	= 1526,
    MOVAPDrr	= 1527,
    MOVAPDrr_REV	= 1528,
    MOVAPSmr	= 1529,
    MOVAPSrm	= 1530,
    MOVAPSrr	= 1531,
    MOVAPSrr_REV	= 1532,
    MOVBE16mr	= 1533,
    MOVBE16rm	= 1534,
    MOVBE32mr	= 1535,
    MOVBE32rm	= 1536,
    MOVBE64mr	= 1537,
    MOVBE64rm	= 1538,
    MOVDDUPrm	= 1539,
    MOVDDUPrr	= 1540,
    MOVDI2PDIrm	= 1541,
    MOVDI2PDIrr	= 1542,
    MOVDI2SSrm	= 1543,
    MOVDI2SSrr	= 1544,
    MOVDQAmr	= 1545,
    MOVDQArm	= 1546,
    MOVDQArr	= 1547,
    MOVDQArr_REV	= 1548,
    MOVDQUmr	= 1549,
    MOVDQUrm	= 1550,
    MOVDQUrr	= 1551,
    MOVDQUrr_REV	= 1552,
    MOVHLPSrr	= 1553,
    MOVHPDmr	= 1554,
    MOVHPDrm	= 1555,
    MOVHPSmr	= 1556,
    MOVHPSrm	= 1557,
    MOVLHPSrr	= 1558,
    MOVLPDmr	= 1559,
    MOVLPDrm	= 1560,
    MOVLPSmr	= 1561,
    MOVLPSrm	= 1562,
    MOVLQ128mr	= 1563,
    MOVMSKPDrr32	= 1564,
    MOVMSKPDrr64	= 1565,
    MOVMSKPSrr32	= 1566,
    MOVMSKPSrr64	= 1567,
    MOVNTDQArm	= 1568,
    MOVNTDQmr	= 1569,
    MOVNTI_64mr	= 1570,
    MOVNTImr	= 1571,
    MOVNTPDmr	= 1572,
    MOVNTPSmr	= 1573,
    MOVNTSD	= 1574,
    MOVNTSS	= 1575,
    MOVPC32r	= 1576,
    MOVPDI2DImr	= 1577,
    MOVPDI2DIrr	= 1578,
    MOVPQI2QImr	= 1579,
    MOVPQIto64rr	= 1580,
    MOVQI2PQIrm	= 1581,
    MOVQxrxr	= 1582,
    MOVSB	= 1583,
    MOVSD	= 1584,
    MOVSDmr	= 1585,
    MOVSDrm	= 1586,
    MOVSDrr	= 1587,
    MOVSDrr_REV	= 1588,
    MOVSDto64mr	= 1589,
    MOVSDto64rr	= 1590,
    MOVSHDUPrm	= 1591,
    MOVSHDUPrr	= 1592,
    MOVSLDUPrm	= 1593,
    MOVSLDUPrr	= 1594,
    MOVSQ	= 1595,
    MOVSS2DImr	= 1596,
    MOVSS2DIrr	= 1597,
    MOVSSmr	= 1598,
    MOVSSrm	= 1599,
    MOVSSrr	= 1600,
    MOVSSrr_REV	= 1601,
    MOVSW	= 1602,
    MOVSX16rm8	= 1603,
    MOVSX16rr8	= 1604,
    MOVSX32rm16	= 1605,
    MOVSX32rm8	= 1606,
    MOVSX32rr16	= 1607,
    MOVSX32rr8	= 1608,
    MOVSX64rm16	= 1609,
    MOVSX64rm32	= 1610,
    MOVSX64rm8	= 1611,
    MOVSX64rr16	= 1612,
    MOVSX64rr32	= 1613,
    MOVSX64rr8	= 1614,
    MOVUPDmr	= 1615,
    MOVUPDrm	= 1616,
    MOVUPDrr	= 1617,
    MOVUPDrr_REV	= 1618,
    MOVUPSmr	= 1619,
    MOVUPSrm	= 1620,
    MOVUPSrr	= 1621,
    MOVUPSrr_REV	= 1622,
    MOVZDI2PDIrm	= 1623,
    MOVZDI2PDIrr	= 1624,
    MOVZPQILo2PQIrm	= 1625,
    MOVZPQILo2PQIrr	= 1626,
    MOVZQI2PQIrm	= 1627,
    MOVZQI2PQIrr	= 1628,
    MOVZX16rm8	= 1629,
    MOVZX16rr8	= 1630,
    MOVZX32_NOREXrm8	= 1631,
    MOVZX32_NOREXrr8	= 1632,
    MOVZX32rm16	= 1633,
    MOVZX32rm8	= 1634,
    MOVZX32rr16	= 1635,
    MOVZX32rr8	= 1636,
    MOVZX64rm16	= 1637,
    MOVZX64rm16_Q	= 1638,
    MOVZX64rm32	= 1639,
    MOVZX64rm8	= 1640,
    MOVZX64rm8_Q	= 1641,
    MOVZX64rr16	= 1642,
    MOVZX64rr16_Q	= 1643,
    MOVZX64rr32	= 1644,
    MOVZX64rr8	= 1645,
    MOVZX64rr8_Q	= 1646,
    MPSADBWrmi	= 1647,
    MPSADBWrri	= 1648,
    MUL16m	= 1649,
    MUL16r	= 1650,
    MUL32m	= 1651,
    MUL32r	= 1652,
    MUL64m	= 1653,
    MUL64r	= 1654,
    MUL8m	= 1655,
    MUL8r	= 1656,
    MULPDrm	= 1657,
    MULPDrr	= 1658,
    MULPSrm	= 1659,
    MULPSrr	= 1660,
    MULSDrm	= 1661,
    MULSDrm_Int	= 1662,
    MULSDrr	= 1663,
    MULSDrr_Int	= 1664,
    MULSSrm	= 1665,
    MULSSrm_Int	= 1666,
    MULSSrr	= 1667,
    MULSSrr_Int	= 1668,
    MULX32rm	= 1669,
    MULX32rr	= 1670,
    MULX64rm	= 1671,
    MULX64rr	= 1672,
    MUL_F32m	= 1673,
    MUL_F64m	= 1674,
    MUL_FI16m	= 1675,
    MUL_FI32m	= 1676,
    MUL_FPrST0	= 1677,
    MUL_FST0r	= 1678,
    MUL_Fp32	= 1679,
    MUL_Fp32m	= 1680,
    MUL_Fp64	= 1681,
    MUL_Fp64m	= 1682,
    MUL_Fp64m32	= 1683,
    MUL_Fp80	= 1684,
    MUL_Fp80m32	= 1685,
    MUL_Fp80m64	= 1686,
    MUL_FpI16m32	= 1687,
    MUL_FpI16m64	= 1688,
    MUL_FpI16m80	= 1689,
    MUL_FpI32m32	= 1690,
    MUL_FpI32m64	= 1691,
    MUL_FpI32m80	= 1692,
    MUL_FrST0	= 1693,
    MWAITrr	= 1694,
    NACL_ANDSPi32	= 1695,
    NACL_ASPi32	= 1696,
    NACL_ASPi8	= 1697,
    NACL_CALL32d	= 1698,
    NACL_CALL32r	= 1699,
    NACL_CALL64d	= 1700,
    NACL_CALL64r	= 1701,
    NACL_CG_CALL32r	= 1702,
    NACL_CG_CALL64pcrel32	= 1703,
    NACL_CG_CALL64r	= 1704,
    NACL_CG_CALLpcrel32	= 1705,
    NACL_CG_GD_TLS_addr64	= 1706,
    NACL_CG_IE_TLS_addr32	= 1707,
    NACL_CG_IE_TLS_addr64	= 1708,
    NACL_CG_JMP64r	= 1709,
    NACL_CG_LE_TLS_addr32	= 1710,
    NACL_CG_LE_TLS_addr64	= 1711,
    NACL_CG_TAILJMPd64	= 1712,
    NACL_CG_TAILJMPr64	= 1713,
    NACL_CG_TCRETURNdi64	= 1714,
    NACL_CG_TCRETURNri64	= 1715,
    NACL_CG_TLS_addr32	= 1716,
    NACL_CG_VAARG_64	= 1717,
    NACL_JMP32r	= 1718,
    NACL_JMP64r	= 1719,
    NACL_JMP64z	= 1720,
    NACL_RESTBPm	= 1721,
    NACL_RESTBPr	= 1722,
    NACL_RESTBPrz	= 1723,
    NACL_RESTSPm	= 1724,
    NACL_RESTSPr	= 1725,
    NACL_RESTSPrz	= 1726,
    NACL_RET32	= 1727,
    NACL_RET64	= 1728,
    NACL_RETI32	= 1729,
    NACL_SPADJi32	= 1730,
    NACL_SSPi32	= 1731,
    NACL_SSPi8	= 1732,
    NACL_TLS_addr32	= 1733,
    NACL_TRAP32	= 1734,
    NACL_TRAP64	= 1735,
    NEG16m	= 1736,
    NEG16r	= 1737,
    NEG32m	= 1738,
    NEG32r	= 1739,
    NEG64m	= 1740,
    NEG64r	= 1741,
    NEG8m	= 1742,
    NEG8r	= 1743,
    NOOP	= 1744,
    NOOPL	= 1745,
    NOOPW	= 1746,
    NOT16m	= 1747,
    NOT16r	= 1748,
    NOT32m	= 1749,
    NOT32r	= 1750,
    NOT64m	= 1751,
    NOT64r	= 1752,
    NOT8m	= 1753,
    NOT8r	= 1754,
    OR16i16	= 1755,
    OR16mi	= 1756,
    OR16mi8	= 1757,
    OR16mr	= 1758,
    OR16ri	= 1759,
    OR16ri8	= 1760,
    OR16rm	= 1761,
    OR16rr	= 1762,
    OR16rr_REV	= 1763,
    OR32i32	= 1764,
    OR32mi	= 1765,
    OR32mi8	= 1766,
    OR32mr	= 1767,
    OR32mrLocked	= 1768,
    OR32ri	= 1769,
    OR32ri8	= 1770,
    OR32rm	= 1771,
    OR32rr	= 1772,
    OR32rr_REV	= 1773,
    OR64i32	= 1774,
    OR64mi32	= 1775,
    OR64mi8	= 1776,
    OR64mr	= 1777,
    OR64ri32	= 1778,
    OR64ri8	= 1779,
    OR64rm	= 1780,
    OR64rr	= 1781,
    OR64rr_REV	= 1782,
    OR8i8	= 1783,
    OR8mi	= 1784,
    OR8mr	= 1785,
    OR8ri	= 1786,
    OR8rm	= 1787,
    OR8rr	= 1788,
    OR8rr_REV	= 1789,
    ORPDrm	= 1790,
    ORPDrr	= 1791,
    ORPSrm	= 1792,
    ORPSrr	= 1793,
    OUT16ir	= 1794,
    OUT16rr	= 1795,
    OUT32ir	= 1796,
    OUT32rr	= 1797,
    OUT8ir	= 1798,
    OUT8rr	= 1799,
    OUTSB	= 1800,
    OUTSD	= 1801,
    OUTSW	= 1802,
    PABSBrm128	= 1803,
    PABSBrr128	= 1804,
    PABSDrm128	= 1805,
    PABSDrr128	= 1806,
    PABSWrm128	= 1807,
    PABSWrr128	= 1808,
    PACKSSDWrm	= 1809,
    PACKSSDWrr	= 1810,
    PACKSSWBrm	= 1811,
    PACKSSWBrr	= 1812,
    PACKUSDWrm	= 1813,
    PACKUSDWrr	= 1814,
    PACKUSWBrm	= 1815,
    PACKUSWBrr	= 1816,
    PADDBrm	= 1817,
    PADDBrr	= 1818,
    PADDDrm	= 1819,
    PADDDrr	= 1820,
    PADDQrm	= 1821,
    PADDQrr	= 1822,
    PADDSBrm	= 1823,
    PADDSBrr	= 1824,
    PADDSWrm	= 1825,
    PADDSWrr	= 1826,
    PADDUSBrm	= 1827,
    PADDUSBrr	= 1828,
    PADDUSWrm	= 1829,
    PADDUSWrr	= 1830,
    PADDWrm	= 1831,
    PADDWrr	= 1832,
    PALIGNR128rm	= 1833,
    PALIGNR128rr	= 1834,
    PANDNrm	= 1835,
    PANDNrr	= 1836,
    PANDrm	= 1837,
    PANDrr	= 1838,
    PAUSE	= 1839,
    PAVGBrm	= 1840,
    PAVGBrr	= 1841,
    PAVGUSBrm	= 1842,
    PAVGUSBrr	= 1843,
    PAVGWrm	= 1844,
    PAVGWrr	= 1845,
    PBLENDVBrm0	= 1846,
    PBLENDVBrr0	= 1847,
    PBLENDWrmi	= 1848,
    PBLENDWrri	= 1849,
    PCLMULQDQrm	= 1850,
    PCLMULQDQrr	= 1851,
    PCMPEQBrm	= 1852,
    PCMPEQBrr	= 1853,
    PCMPEQDrm	= 1854,
    PCMPEQDrr	= 1855,
    PCMPEQQrm	= 1856,
    PCMPEQQrr	= 1857,
    PCMPEQWrm	= 1858,
    PCMPEQWrr	= 1859,
    PCMPESTRIMEM	= 1860,
    PCMPESTRIREG	= 1861,
    PCMPESTRIrm	= 1862,
    PCMPESTRIrr	= 1863,
    PCMPESTRM128MEM	= 1864,
    PCMPESTRM128REG	= 1865,
    PCMPESTRM128rm	= 1866,
    PCMPESTRM128rr	= 1867,
    PCMPGTBrm	= 1868,
    PCMPGTBrr	= 1869,
    PCMPGTDrm	= 1870,
    PCMPGTDrr	= 1871,
    PCMPGTQrm	= 1872,
    PCMPGTQrr	= 1873,
    PCMPGTWrm	= 1874,
    PCMPGTWrr	= 1875,
    PCMPISTRIMEM	= 1876,
    PCMPISTRIREG	= 1877,
    PCMPISTRIrm	= 1878,
    PCMPISTRIrr	= 1879,
    PCMPISTRM128MEM	= 1880,
    PCMPISTRM128REG	= 1881,
    PCMPISTRM128rm	= 1882,
    PCMPISTRM128rr	= 1883,
    PDEP32rm	= 1884,
    PDEP32rr	= 1885,
    PDEP64rm	= 1886,
    PDEP64rr	= 1887,
    PEXT32rm	= 1888,
    PEXT32rr	= 1889,
    PEXT64rm	= 1890,
    PEXT64rr	= 1891,
    PEXTRBmr	= 1892,
    PEXTRBrr	= 1893,
    PEXTRDmr	= 1894,
    PEXTRDrr	= 1895,
    PEXTRQmr	= 1896,
    PEXTRQrr	= 1897,
    PEXTRWmr	= 1898,
    PEXTRWri	= 1899,
    PF2IDrm	= 1900,
    PF2IDrr	= 1901,
    PF2IWrm	= 1902,
    PF2IWrr	= 1903,
    PFACCrm	= 1904,
    PFACCrr	= 1905,
    PFADDrm	= 1906,
    PFADDrr	= 1907,
    PFCMPEQrm	= 1908,
    PFCMPEQrr	= 1909,
    PFCMPGErm	= 1910,
    PFCMPGErr	= 1911,
    PFCMPGTrm	= 1912,
    PFCMPGTrr	= 1913,
    PFMAXrm	= 1914,
    PFMAXrr	= 1915,
    PFMINrm	= 1916,
    PFMINrr	= 1917,
    PFMULrm	= 1918,
    PFMULrr	= 1919,
    PFNACCrm	= 1920,
    PFNACCrr	= 1921,
    PFPNACCrm	= 1922,
    PFPNACCrr	= 1923,
    PFRCPIT1rm	= 1924,
    PFRCPIT1rr	= 1925,
    PFRCPIT2rm	= 1926,
    PFRCPIT2rr	= 1927,
    PFRCPrm	= 1928,
    PFRCPrr	= 1929,
    PFRSQIT1rm	= 1930,
    PFRSQIT1rr	= 1931,
    PFRSQRTrm	= 1932,
    PFRSQRTrr	= 1933,
    PFSUBRrm	= 1934,
    PFSUBRrr	= 1935,
    PFSUBrm	= 1936,
    PFSUBrr	= 1937,
    PHADDDrm	= 1938,
    PHADDDrr	= 1939,
    PHADDSWrm128	= 1940,
    PHADDSWrr128	= 1941,
    PHADDWrm	= 1942,
    PHADDWrr	= 1943,
    PHMINPOSUWrm128	= 1944,
    PHMINPOSUWrr128	= 1945,
    PHSUBDrm	= 1946,
    PHSUBDrr	= 1947,
    PHSUBSWrm128	= 1948,
    PHSUBSWrr128	= 1949,
    PHSUBWrm	= 1950,
    PHSUBWrr	= 1951,
    PI2FDrm	= 1952,
    PI2FDrr	= 1953,
    PI2FWrm	= 1954,
    PI2FWrr	= 1955,
    PINSRBrm	= 1956,
    PINSRBrr	= 1957,
    PINSRDrm	= 1958,
    PINSRDrr	= 1959,
    PINSRQrm	= 1960,
    PINSRQrr	= 1961,
    PINSRWrmi	= 1962,
    PINSRWrri	= 1963,
    PMADDUBSWrm128	= 1964,
    PMADDUBSWrr128	= 1965,
    PMADDWDrm	= 1966,
    PMADDWDrr	= 1967,
    PMAXSBrm	= 1968,
    PMAXSBrr	= 1969,
    PMAXSDrm	= 1970,
    PMAXSDrr	= 1971,
    PMAXSWrm	= 1972,
    PMAXSWrr	= 1973,
    PMAXUBrm	= 1974,
    PMAXUBrr	= 1975,
    PMAXUDrm	= 1976,
    PMAXUDrr	= 1977,
    PMAXUWrm	= 1978,
    PMAXUWrr	= 1979,
    PMINSBrm	= 1980,
    PMINSBrr	= 1981,
    PMINSDrm	= 1982,
    PMINSDrr	= 1983,
    PMINSWrm	= 1984,
    PMINSWrr	= 1985,
    PMINUBrm	= 1986,
    PMINUBrr	= 1987,
    PMINUDrm	= 1988,
    PMINUDrr	= 1989,
    PMINUWrm	= 1990,
    PMINUWrr	= 1991,
    PMOVMSKBrr	= 1992,
    PMOVSXBDrm	= 1993,
    PMOVSXBDrr	= 1994,
    PMOVSXBQrm	= 1995,
    PMOVSXBQrr	= 1996,
    PMOVSXBWrm	= 1997,
    PMOVSXBWrr	= 1998,
    PMOVSXDQrm	= 1999,
    PMOVSXDQrr	= 2000,
    PMOVSXWDrm	= 2001,
    PMOVSXWDrr	= 2002,
    PMOVSXWQrm	= 2003,
    PMOVSXWQrr	= 2004,
    PMOVZXBDrm	= 2005,
    PMOVZXBDrr	= 2006,
    PMOVZXBQrm	= 2007,
    PMOVZXBQrr	= 2008,
    PMOVZXBWrm	= 2009,
    PMOVZXBWrr	= 2010,
    PMOVZXDQrm	= 2011,
    PMOVZXDQrr	= 2012,
    PMOVZXWDrm	= 2013,
    PMOVZXWDrr	= 2014,
    PMOVZXWQrm	= 2015,
    PMOVZXWQrr	= 2016,
    PMULDQrm	= 2017,
    PMULDQrr	= 2018,
    PMULHRSWrm128	= 2019,
    PMULHRSWrr128	= 2020,
    PMULHRWrm	= 2021,
    PMULHRWrr	= 2022,
    PMULHUWrm	= 2023,
    PMULHUWrr	= 2024,
    PMULHWrm	= 2025,
    PMULHWrr	= 2026,
    PMULLDrm	= 2027,
    PMULLDrr	= 2028,
    PMULLWrm	= 2029,
    PMULLWrr	= 2030,
    PMULUDQrm	= 2031,
    PMULUDQrr	= 2032,
    POP16r	= 2033,
    POP16rmm	= 2034,
    POP16rmr	= 2035,
    POP32r	= 2036,
    POP32rmm	= 2037,
    POP32rmr	= 2038,
    POP64r	= 2039,
    POP64rmm	= 2040,
    POP64rmr	= 2041,
    POPA32	= 2042,
    POPCNT16rm	= 2043,
    POPCNT16rr	= 2044,
    POPCNT32rm	= 2045,
    POPCNT32rr	= 2046,
    POPCNT64rm	= 2047,
    POPCNT64rr	= 2048,
    POPDS16	= 2049,
    POPDS32	= 2050,
    POPES16	= 2051,
    POPES32	= 2052,
    POPF16	= 2053,
    POPF32	= 2054,
    POPF64	= 2055,
    POPFS16	= 2056,
    POPFS32	= 2057,
    POPFS64	= 2058,
    POPGS16	= 2059,
    POPGS32	= 2060,
    POPGS64	= 2061,
    POPSS16	= 2062,
    POPSS32	= 2063,
    PORrm	= 2064,
    PORrr	= 2065,
    PREFETCH	= 2066,
    PREFETCHNTA	= 2067,
    PREFETCHT0	= 2068,
    PREFETCHT1	= 2069,
    PREFETCHT2	= 2070,
    PREFETCHW	= 2071,
    PSADBWrm	= 2072,
    PSADBWrr	= 2073,
    PSHUFBrm	= 2074,
    PSHUFBrr	= 2075,
    PSHUFDmi	= 2076,
    PSHUFDri	= 2077,
    PSHUFHWmi	= 2078,
    PSHUFHWri	= 2079,
    PSHUFLWmi	= 2080,
    PSHUFLWri	= 2081,
    PSIGNBrm	= 2082,
    PSIGNBrr	= 2083,
    PSIGNDrm	= 2084,
    PSIGNDrr	= 2085,
    PSIGNWrm	= 2086,
    PSIGNWrr	= 2087,
    PSLLDQri	= 2088,
    PSLLDri	= 2089,
    PSLLDrm	= 2090,
    PSLLDrr	= 2091,
    PSLLQri	= 2092,
    PSLLQrm	= 2093,
    PSLLQrr	= 2094,
    PSLLWri	= 2095,
    PSLLWrm	= 2096,
    PSLLWrr	= 2097,
    PSRADri	= 2098,
    PSRADrm	= 2099,
    PSRADrr	= 2100,
    PSRAWri	= 2101,
    PSRAWrm	= 2102,
    PSRAWrr	= 2103,
    PSRLDQri	= 2104,
    PSRLDri	= 2105,
    PSRLDrm	= 2106,
    PSRLDrr	= 2107,
    PSRLQri	= 2108,
    PSRLQrm	= 2109,
    PSRLQrr	= 2110,
    PSRLWri	= 2111,
    PSRLWrm	= 2112,
    PSRLWrr	= 2113,
    PSUBBrm	= 2114,
    PSUBBrr	= 2115,
    PSUBDrm	= 2116,
    PSUBDrr	= 2117,
    PSUBQrm	= 2118,
    PSUBQrr	= 2119,
    PSUBSBrm	= 2120,
    PSUBSBrr	= 2121,
    PSUBSWrm	= 2122,
    PSUBSWrr	= 2123,
    PSUBUSBrm	= 2124,
    PSUBUSBrr	= 2125,
    PSUBUSWrm	= 2126,
    PSUBUSWrr	= 2127,
    PSUBWrm	= 2128,
    PSUBWrr	= 2129,
    PSWAPDrm	= 2130,
    PSWAPDrr	= 2131,
    PTESTrm	= 2132,
    PTESTrr	= 2133,
    PUNPCKHBWrm	= 2134,
    PUNPCKHBWrr	= 2135,
    PUNPCKHDQrm	= 2136,
    PUNPCKHDQrr	= 2137,
    PUNPCKHQDQrm	= 2138,
    PUNPCKHQDQrr	= 2139,
    PUNPCKHWDrm	= 2140,
    PUNPCKHWDrr	= 2141,
    PUNPCKLBWrm	= 2142,
    PUNPCKLBWrr	= 2143,
    PUNPCKLDQrm	= 2144,
    PUNPCKLDQrr	= 2145,
    PUNPCKLQDQrm	= 2146,
    PUNPCKLQDQrr	= 2147,
    PUNPCKLWDrm	= 2148,
    PUNPCKLWDrr	= 2149,
    PUSH16r	= 2150,
    PUSH16rmm	= 2151,
    PUSH16rmr	= 2152,
    PUSH32r	= 2153,
    PUSH32rmm	= 2154,
    PUSH32rmr	= 2155,
    PUSH64i16	= 2156,
    PUSH64i32	= 2157,
    PUSH64i8	= 2158,
    PUSH64r	= 2159,
    PUSH64rmm	= 2160,
    PUSH64rmr	= 2161,
    PUSHA32	= 2162,
    PUSHCS16	= 2163,
    PUSHCS32	= 2164,
    PUSHDS16	= 2165,
    PUSHDS32	= 2166,
    PUSHES16	= 2167,
    PUSHES32	= 2168,
    PUSHF16	= 2169,
    PUSHF32	= 2170,
    PUSHF64	= 2171,
    PUSHFS16	= 2172,
    PUSHFS32	= 2173,
    PUSHFS64	= 2174,
    PUSHGS16	= 2175,
    PUSHGS32	= 2176,
    PUSHGS64	= 2177,
    PUSHSS16	= 2178,
    PUSHSS32	= 2179,
    PUSHi16	= 2180,
    PUSHi32	= 2181,
    PUSHi8	= 2182,
    PXORrm	= 2183,
    PXORrr	= 2184,
    RCL16m1	= 2185,
    RCL16mCL	= 2186,
    RCL16mi	= 2187,
    RCL16r1	= 2188,
    RCL16rCL	= 2189,
    RCL16ri	= 2190,
    RCL32m1	= 2191,
    RCL32mCL	= 2192,
    RCL32mi	= 2193,
    RCL32r1	= 2194,
    RCL32rCL	= 2195,
    RCL32ri	= 2196,
    RCL64m1	= 2197,
    RCL64mCL	= 2198,
    RCL64mi	= 2199,
    RCL64r1	= 2200,
    RCL64rCL	= 2201,
    RCL64ri	= 2202,
    RCL8m1	= 2203,
    RCL8mCL	= 2204,
    RCL8mi	= 2205,
    RCL8r1	= 2206,
    RCL8rCL	= 2207,
    RCL8ri	= 2208,
    RCPPSm	= 2209,
    RCPPSm_Int	= 2210,
    RCPPSr	= 2211,
    RCPPSr_Int	= 2212,
    RCPSSm	= 2213,
    RCPSSm_Int	= 2214,
    RCPSSr	= 2215,
    RCPSSr_Int	= 2216,
    RCR16m1	= 2217,
    RCR16mCL	= 2218,
    RCR16mi	= 2219,
    RCR16r1	= 2220,
    RCR16rCL	= 2221,
    RCR16ri	= 2222,
    RCR32m1	= 2223,
    RCR32mCL	= 2224,
    RCR32mi	= 2225,
    RCR32r1	= 2226,
    RCR32rCL	= 2227,
    RCR32ri	= 2228,
    RCR64m1	= 2229,
    RCR64mCL	= 2230,
    RCR64mi	= 2231,
    RCR64r1	= 2232,
    RCR64rCL	= 2233,
    RCR64ri	= 2234,
    RCR8m1	= 2235,
    RCR8mCL	= 2236,
    RCR8mi	= 2237,
    RCR8r1	= 2238,
    RCR8rCL	= 2239,
    RCR8ri	= 2240,
    RDFSBASE	= 2241,
    RDFSBASE64	= 2242,
    RDGSBASE	= 2243,
    RDGSBASE64	= 2244,
    RDMSR	= 2245,
    RDPMC	= 2246,
    RDRAND16r	= 2247,
    RDRAND32r	= 2248,
    RDRAND64r	= 2249,
    RDSEED16r	= 2250,
    RDSEED32r	= 2251,
    RDSEED64r	= 2252,
    RDTSC	= 2253,
    RDTSCP	= 2254,
    RELEASE_MOV16mr	= 2255,
    RELEASE_MOV32mr	= 2256,
    RELEASE_MOV64mr	= 2257,
    RELEASE_MOV8mr	= 2258,
    REPNE_PREFIX	= 2259,
    REP_MOVSB_32	= 2260,
    REP_MOVSB_64	= 2261,
    REP_MOVSD_32	= 2262,
    REP_MOVSD_64	= 2263,
    REP_MOVSQ_64	= 2264,
    REP_MOVSW_32	= 2265,
    REP_MOVSW_64	= 2266,
    REP_PREFIX	= 2267,
    REP_STOSB_32	= 2268,
    REP_STOSB_64	= 2269,
    REP_STOSD_32	= 2270,
    REP_STOSD_64	= 2271,
    REP_STOSQ_64	= 2272,
    REP_STOSW_32	= 2273,
    REP_STOSW_64	= 2274,
    RET	= 2275,
    RETI	= 2276,
    RETIW	= 2277,
    RETW	= 2278,
    REX64_PREFIX	= 2279,
    ROL16m1	= 2280,
    ROL16mCL	= 2281,
    ROL16mi	= 2282,
    ROL16r1	= 2283,
    ROL16rCL	= 2284,
    ROL16ri	= 2285,
    ROL32m1	= 2286,
    ROL32mCL	= 2287,
    ROL32mi	= 2288,
    ROL32r1	= 2289,
    ROL32rCL	= 2290,
    ROL32ri	= 2291,
    ROL64m1	= 2292,
    ROL64mCL	= 2293,
    ROL64mi	= 2294,
    ROL64r1	= 2295,
    ROL64rCL	= 2296,
    ROL64ri	= 2297,
    ROL8m1	= 2298,
    ROL8mCL	= 2299,
    ROL8mi	= 2300,
    ROL8r1	= 2301,
    ROL8rCL	= 2302,
    ROL8ri	= 2303,
    ROR16m1	= 2304,
    ROR16mCL	= 2305,
    ROR16mi	= 2306,
    ROR16r1	= 2307,
    ROR16rCL	= 2308,
    ROR16ri	= 2309,
    ROR32m1	= 2310,
    ROR32mCL	= 2311,
    ROR32mi	= 2312,
    ROR32r1	= 2313,
    ROR32rCL	= 2314,
    ROR32ri	= 2315,
    ROR64m1	= 2316,
    ROR64mCL	= 2317,
    ROR64mi	= 2318,
    ROR64r1	= 2319,
    ROR64rCL	= 2320,
    ROR64ri	= 2321,
    ROR8m1	= 2322,
    ROR8mCL	= 2323,
    ROR8mi	= 2324,
    ROR8r1	= 2325,
    ROR8rCL	= 2326,
    ROR8ri	= 2327,
    RORX32mi	= 2328,
    RORX32ri	= 2329,
    RORX64mi	= 2330,
    RORX64ri	= 2331,
    ROUNDPDm	= 2332,
    ROUNDPDr	= 2333,
    ROUNDPSm	= 2334,
    ROUNDPSr	= 2335,
    ROUNDSDm	= 2336,
    ROUNDSDr	= 2337,
    ROUNDSDr_Int	= 2338,
    ROUNDSSm	= 2339,
    ROUNDSSr	= 2340,
    ROUNDSSr_Int	= 2341,
    RSM	= 2342,
    RSQRTPSm	= 2343,
    RSQRTPSm_Int	= 2344,
    RSQRTPSr	= 2345,
    RSQRTPSr_Int	= 2346,
    RSQRTSSm	= 2347,
    RSQRTSSm_Int	= 2348,
    RSQRTSSr	= 2349,
    RSQRTSSr_Int	= 2350,
    SAHF	= 2351,
    SAR16m1	= 2352,
    SAR16mCL	= 2353,
    SAR16mi	= 2354,
    SAR16r1	= 2355,
    SAR16rCL	= 2356,
    SAR16ri	= 2357,
    SAR32m1	= 2358,
    SAR32mCL	= 2359,
    SAR32mi	= 2360,
    SAR32r1	= 2361,
    SAR32rCL	= 2362,
    SAR32ri	= 2363,
    SAR64m1	= 2364,
    SAR64mCL	= 2365,
    SAR64mi	= 2366,
    SAR64r1	= 2367,
    SAR64rCL	= 2368,
    SAR64ri	= 2369,
    SAR8m1	= 2370,
    SAR8mCL	= 2371,
    SAR8mi	= 2372,
    SAR8r1	= 2373,
    SAR8rCL	= 2374,
    SAR8ri	= 2375,
    SARX32rm	= 2376,
    SARX32rr	= 2377,
    SARX64rm	= 2378,
    SARX64rr	= 2379,
    SBB16i16	= 2380,
    SBB16mi	= 2381,
    SBB16mi8	= 2382,
    SBB16mr	= 2383,
    SBB16ri	= 2384,
    SBB16ri8	= 2385,
    SBB16rm	= 2386,
    SBB16rr	= 2387,
    SBB16rr_REV	= 2388,
    SBB32i32	= 2389,
    SBB32mi	= 2390,
    SBB32mi8	= 2391,
    SBB32mr	= 2392,
    SBB32ri	= 2393,
    SBB32ri8	= 2394,
    SBB32rm	= 2395,
    SBB32rr	= 2396,
    SBB32rr_REV	= 2397,
    SBB64i32	= 2398,
    SBB64mi32	= 2399,
    SBB64mi8	= 2400,
    SBB64mr	= 2401,
    SBB64ri32	= 2402,
    SBB64ri8	= 2403,
    SBB64rm	= 2404,
    SBB64rr	= 2405,
    SBB64rr_REV	= 2406,
    SBB8i8	= 2407,
    SBB8mi	= 2408,
    SBB8mr	= 2409,
    SBB8ri	= 2410,
    SBB8rm	= 2411,
    SBB8rr	= 2412,
    SBB8rr_REV	= 2413,
    SCAS16	= 2414,
    SCAS32	= 2415,
    SCAS64	= 2416,
    SCAS8	= 2417,
    SEG_ALLOCA_32	= 2418,
    SEG_ALLOCA_64	= 2419,
    SETAEm	= 2420,
    SETAEr	= 2421,
    SETAm	= 2422,
    SETAr	= 2423,
    SETBEm	= 2424,
    SETBEr	= 2425,
    SETB_C16r	= 2426,
    SETB_C32r	= 2427,
    SETB_C64r	= 2428,
    SETB_C8r	= 2429,
    SETBm	= 2430,
    SETBr	= 2431,
    SETEm	= 2432,
    SETEr	= 2433,
    SETGEm	= 2434,
    SETGEr	= 2435,
    SETGm	= 2436,
    SETGr	= 2437,
    SETLEm	= 2438,
    SETLEr	= 2439,
    SETLm	= 2440,
    SETLr	= 2441,
    SETNEm	= 2442,
    SETNEr	= 2443,
    SETNOm	= 2444,
    SETNOr	= 2445,
    SETNPm	= 2446,
    SETNPr	= 2447,
    SETNSm	= 2448,
    SETNSr	= 2449,
    SETOm	= 2450,
    SETOr	= 2451,
    SETPm	= 2452,
    SETPr	= 2453,
    SETSm	= 2454,
    SETSr	= 2455,
    SFENCE	= 2456,
    SGDT16m	= 2457,
    SGDTm	= 2458,
    SHL16m1	= 2459,
    SHL16mCL	= 2460,
    SHL16mi	= 2461,
    SHL16r1	= 2462,
    SHL16rCL	= 2463,
    SHL16ri	= 2464,
    SHL32m1	= 2465,
    SHL32mCL	= 2466,
    SHL32mi	= 2467,
    SHL32r1	= 2468,
    SHL32rCL	= 2469,
    SHL32ri	= 2470,
    SHL64m1	= 2471,
    SHL64mCL	= 2472,
    SHL64mi	= 2473,
    SHL64r1	= 2474,
    SHL64rCL	= 2475,
    SHL64ri	= 2476,
    SHL8m1	= 2477,
    SHL8mCL	= 2478,
    SHL8mi	= 2479,
    SHL8r1	= 2480,
    SHL8rCL	= 2481,
    SHL8ri	= 2482,
    SHLD16mrCL	= 2483,
    SHLD16mri8	= 2484,
    SHLD16rrCL	= 2485,
    SHLD16rri8	= 2486,
    SHLD32mrCL	= 2487,
    SHLD32mri8	= 2488,
    SHLD32rrCL	= 2489,
    SHLD32rri8	= 2490,
    SHLD64mrCL	= 2491,
    SHLD64mri8	= 2492,
    SHLD64rrCL	= 2493,
    SHLD64rri8	= 2494,
    SHLX32rm	= 2495,
    SHLX32rr	= 2496,
    SHLX64rm	= 2497,
    SHLX64rr	= 2498,
    SHR16m1	= 2499,
    SHR16mCL	= 2500,
    SHR16mi	= 2501,
    SHR16r1	= 2502,
    SHR16rCL	= 2503,
    SHR16ri	= 2504,
    SHR32m1	= 2505,
    SHR32mCL	= 2506,
    SHR32mi	= 2507,
    SHR32r1	= 2508,
    SHR32rCL	= 2509,
    SHR32ri	= 2510,
    SHR64m1	= 2511,
    SHR64mCL	= 2512,
    SHR64mi	= 2513,
    SHR64r1	= 2514,
    SHR64rCL	= 2515,
    SHR64ri	= 2516,
    SHR8m1	= 2517,
    SHR8mCL	= 2518,
    SHR8mi	= 2519,
    SHR8r1	= 2520,
    SHR8rCL	= 2521,
    SHR8ri	= 2522,
    SHRD16mrCL	= 2523,
    SHRD16mri8	= 2524,
    SHRD16rrCL	= 2525,
    SHRD16rri8	= 2526,
    SHRD32mrCL	= 2527,
    SHRD32mri8	= 2528,
    SHRD32rrCL	= 2529,
    SHRD32rri8	= 2530,
    SHRD64mrCL	= 2531,
    SHRD64mri8	= 2532,
    SHRD64rrCL	= 2533,
    SHRD64rri8	= 2534,
    SHRX32rm	= 2535,
    SHRX32rr	= 2536,
    SHRX64rm	= 2537,
    SHRX64rr	= 2538,
    SHUFPDrmi	= 2539,
    SHUFPDrri	= 2540,
    SHUFPSrmi	= 2541,
    SHUFPSrri	= 2542,
    SIDT16m	= 2543,
    SIDTm	= 2544,
    SIN_F	= 2545,
    SIN_Fp32	= 2546,
    SIN_Fp64	= 2547,
    SIN_Fp80	= 2548,
    SKINIT	= 2549,
    SLDT16m	= 2550,
    SLDT16r	= 2551,
    SLDT32r	= 2552,
    SLDT64m	= 2553,
    SLDT64r	= 2554,
    SMSW16m	= 2555,
    SMSW16r	= 2556,
    SMSW32r	= 2557,
    SMSW64r	= 2558,
    SQRTPDm	= 2559,
    SQRTPDr	= 2560,
    SQRTPSm	= 2561,
    SQRTPSr	= 2562,
    SQRTSDm	= 2563,
    SQRTSDm_Int	= 2564,
    SQRTSDr	= 2565,
    SQRTSDr_Int	= 2566,
    SQRTSSm	= 2567,
    SQRTSSm_Int	= 2568,
    SQRTSSr	= 2569,
    SQRTSSr_Int	= 2570,
    SQRT_F	= 2571,
    SQRT_Fp32	= 2572,
    SQRT_Fp64	= 2573,
    SQRT_Fp80	= 2574,
    SS_PREFIX	= 2575,
    STAC	= 2576,
    STC	= 2577,
    STD	= 2578,
    STGI	= 2579,
    STI	= 2580,
    STMXCSR	= 2581,
    STOSB	= 2582,
    STOSD	= 2583,
    STOSQ	= 2584,
    STOSW	= 2585,
    STR16r	= 2586,
    STR32r	= 2587,
    STR64r	= 2588,
    STRm	= 2589,
    ST_F32m	= 2590,
    ST_F64m	= 2591,
    ST_FP32m	= 2592,
    ST_FP64m	= 2593,
    ST_FP80m	= 2594,
    ST_FPrr	= 2595,
    ST_Fp32m	= 2596,
    ST_Fp64m	= 2597,
    ST_Fp64m32	= 2598,
    ST_Fp80m32	= 2599,
    ST_Fp80m64	= 2600,
    ST_FpP32m	= 2601,
    ST_FpP64m	= 2602,
    ST_FpP64m32	= 2603,
    ST_FpP80m	= 2604,
    ST_FpP80m32	= 2605,
    ST_FpP80m64	= 2606,
    ST_Frr	= 2607,
    SUB16i16	= 2608,
    SUB16mi	= 2609,
    SUB16mi8	= 2610,
    SUB16mr	= 2611,
    SUB16ri	= 2612,
    SUB16ri8	= 2613,
    SUB16rm	= 2614,
    SUB16rr	= 2615,
    SUB16rr_REV	= 2616,
    SUB32i32	= 2617,
    SUB32mi	= 2618,
    SUB32mi8	= 2619,
    SUB32mr	= 2620,
    SUB32ri	= 2621,
    SUB32ri8	= 2622,
    SUB32rm	= 2623,
    SUB32rr	= 2624,
    SUB32rr_REV	= 2625,
    SUB64i32	= 2626,
    SUB64mi32	= 2627,
    SUB64mi8	= 2628,
    SUB64mr	= 2629,
    SUB64ri32	= 2630,
    SUB64ri8	= 2631,
    SUB64rm	= 2632,
    SUB64rr	= 2633,
    SUB64rr_REV	= 2634,
    SUB8i8	= 2635,
    SUB8mi	= 2636,
    SUB8mr	= 2637,
    SUB8ri	= 2638,
    SUB8rm	= 2639,
    SUB8rr	= 2640,
    SUB8rr_REV	= 2641,
    SUBPDrm	= 2642,
    SUBPDrr	= 2643,
    SUBPSrm	= 2644,
    SUBPSrr	= 2645,
    SUBR_F32m	= 2646,
    SUBR_F64m	= 2647,
    SUBR_FI16m	= 2648,
    SUBR_FI32m	= 2649,
    SUBR_FPrST0	= 2650,
    SUBR_FST0r	= 2651,
    SUBR_Fp32m	= 2652,
    SUBR_Fp64m	= 2653,
    SUBR_Fp64m32	= 2654,
    SUBR_Fp80m32	= 2655,
    SUBR_Fp80m64	= 2656,
    SUBR_FpI16m32	= 2657,
    SUBR_FpI16m64	= 2658,
    SUBR_FpI16m80	= 2659,
    SUBR_FpI32m32	= 2660,
    SUBR_FpI32m64	= 2661,
    SUBR_FpI32m80	= 2662,
    SUBR_FrST0	= 2663,
    SUBSDrm	= 2664,
    SUBSDrm_Int	= 2665,
    SUBSDrr	= 2666,
    SUBSDrr_Int	= 2667,
    SUBSSrm	= 2668,
    SUBSSrm_Int	= 2669,
    SUBSSrr	= 2670,
    SUBSSrr_Int	= 2671,
    SUB_F32m	= 2672,
    SUB_F64m	= 2673,
    SUB_FI16m	= 2674,
    SUB_FI32m	= 2675,
    SUB_FPrST0	= 2676,
    SUB_FST0r	= 2677,
    SUB_Fp32	= 2678,
    SUB_Fp32m	= 2679,
    SUB_Fp64	= 2680,
    SUB_Fp64m	= 2681,
    SUB_Fp64m32	= 2682,
    SUB_Fp80	= 2683,
    SUB_Fp80m32	= 2684,
    SUB_Fp80m64	= 2685,
    SUB_FpI16m32	= 2686,
    SUB_FpI16m64	= 2687,
    SUB_FpI16m80	= 2688,
    SUB_FpI32m32	= 2689,
    SUB_FpI32m64	= 2690,
    SUB_FpI32m80	= 2691,
    SUB_FrST0	= 2692,
    SWAPGS	= 2693,
    SYSCALL	= 2694,
    SYSENTER	= 2695,
    SYSEXIT	= 2696,
    SYSEXIT64	= 2697,
    SYSRET	= 2698,
    SYSRET64	= 2699,
    TAILJMPd	= 2700,
    TAILJMPd64	= 2701,
    TAILJMPm	= 2702,
    TAILJMPm64	= 2703,
    TAILJMPr	= 2704,
    TAILJMPr64	= 2705,
    TCRETURNdi	= 2706,
    TCRETURNdi64	= 2707,
    TCRETURNmi	= 2708,
    TCRETURNmi64	= 2709,
    TCRETURNri	= 2710,
    TCRETURNri64	= 2711,
    TEST16i16	= 2712,
    TEST16mi	= 2713,
    TEST16ri	= 2714,
    TEST16rm	= 2715,
    TEST16rr	= 2716,
    TEST32i32	= 2717,
    TEST32mi	= 2718,
    TEST32ri	= 2719,
    TEST32rm	= 2720,
    TEST32rr	= 2721,
    TEST64i32	= 2722,
    TEST64mi32	= 2723,
    TEST64ri32	= 2724,
    TEST64rm	= 2725,
    TEST64rr	= 2726,
    TEST8i8	= 2727,
    TEST8mi	= 2728,
    TEST8ri	= 2729,
    TEST8ri_NOREX	= 2730,
    TEST8rm	= 2731,
    TEST8rr	= 2732,
    THREAD_POINTER_FROM_GS	= 2733,
    TLSCall_32	= 2734,
    TLSCall_64	= 2735,
    TLS_addr32	= 2736,
    TLS_addr64	= 2737,
    TLS_base_addr32	= 2738,
    TLS_base_addr64	= 2739,
    TRAP	= 2740,
    TST_F	= 2741,
    TST_Fp32	= 2742,
    TST_Fp64	= 2743,
    TST_Fp80	= 2744,
    TZCNT16rm	= 2745,
    TZCNT16rr	= 2746,
    TZCNT32rm	= 2747,
    TZCNT32rr	= 2748,
    TZCNT64rm	= 2749,
    TZCNT64rr	= 2750,
    UCOMISDrm	= 2751,
    UCOMISDrr	= 2752,
    UCOMISSrm	= 2753,
    UCOMISSrr	= 2754,
    UCOM_FIPr	= 2755,
    UCOM_FIr	= 2756,
    UCOM_FPPr	= 2757,
    UCOM_FPr	= 2758,
    UCOM_FpIr32	= 2759,
    UCOM_FpIr64	= 2760,
    UCOM_FpIr80	= 2761,
    UCOM_Fpr32	= 2762,
    UCOM_Fpr64	= 2763,
    UCOM_Fpr80	= 2764,
    UCOM_Fr	= 2765,
    UD2B	= 2766,
    UNPCKHPDrm	= 2767,
    UNPCKHPDrr	= 2768,
    UNPCKHPSrm	= 2769,
    UNPCKHPSrr	= 2770,
    UNPCKLPDrm	= 2771,
    UNPCKLPDrr	= 2772,
    UNPCKLPSrm	= 2773,
    UNPCKLPSrr	= 2774,
    VAARG_64	= 2775,
    VADDPDYrm	= 2776,
    VADDPDYrr	= 2777,
    VADDPDrm	= 2778,
    VADDPDrr	= 2779,
    VADDPSYrm	= 2780,
    VADDPSYrr	= 2781,
    VADDPSrm	= 2782,
    VADDPSrr	= 2783,
    VADDSDrm	= 2784,
    VADDSDrm_Int	= 2785,
    VADDSDrr	= 2786,
    VADDSDrr_Int	= 2787,
    VADDSSrm	= 2788,
    VADDSSrm_Int	= 2789,
    VADDSSrr	= 2790,
    VADDSSrr_Int	= 2791,
    VADDSUBPDYrm	= 2792,
    VADDSUBPDYrr	= 2793,
    VADDSUBPDrm	= 2794,
    VADDSUBPDrr	= 2795,
    VADDSUBPSYrm	= 2796,
    VADDSUBPSYrr	= 2797,
    VADDSUBPSrm	= 2798,
    VADDSUBPSrr	= 2799,
    VAESDECLASTrm	= 2800,
    VAESDECLASTrr	= 2801,
    VAESDECrm	= 2802,
    VAESDECrr	= 2803,
    VAESENCLASTrm	= 2804,
    VAESENCLASTrr	= 2805,
    VAESENCrm	= 2806,
    VAESENCrr	= 2807,
    VAESIMCrm	= 2808,
    VAESIMCrr	= 2809,
    VAESKEYGENASSIST128rm	= 2810,
    VAESKEYGENASSIST128rr	= 2811,
    VANDNPDYrm	= 2812,
    VANDNPDYrr	= 2813,
    VANDNPDrm	= 2814,
    VANDNPDrr	= 2815,
    VANDNPSYrm	= 2816,
    VANDNPSYrr	= 2817,
    VANDNPSrm	= 2818,
    VANDNPSrr	= 2819,
    VANDPDYrm	= 2820,
    VANDPDYrr	= 2821,
    VANDPDrm	= 2822,
    VANDPDrr	= 2823,
    VANDPSYrm	= 2824,
    VANDPSYrr	= 2825,
    VANDPSrm	= 2826,
    VANDPSrr	= 2827,
    VASTART_SAVE_XMM_REGS	= 2828,
    VBLENDPDYrmi	= 2829,
    VBLENDPDYrri	= 2830,
    VBLENDPDrmi	= 2831,
    VBLENDPDrri	= 2832,
    VBLENDPSYrmi	= 2833,
    VBLENDPSYrri	= 2834,
    VBLENDPSrmi	= 2835,
    VBLENDPSrri	= 2836,
    VBLENDVPDYrm	= 2837,
    VBLENDVPDYrr	= 2838,
    VBLENDVPDrm	= 2839,
    VBLENDVPDrr	= 2840,
    VBLENDVPSYrm	= 2841,
    VBLENDVPSYrr	= 2842,
    VBLENDVPSrm	= 2843,
    VBLENDVPSrr	= 2844,
    VBROADCASTF128	= 2845,
    VBROADCASTI128	= 2846,
    VBROADCASTSDYrm	= 2847,
    VBROADCASTSDYrr	= 2848,
    VBROADCASTSSYrm	= 2849,
    VBROADCASTSSYrr	= 2850,
    VBROADCASTSSrm	= 2851,
    VBROADCASTSSrr	= 2852,
    VCMPPDYrmi	= 2853,
    VCMPPDYrmi_alt	= 2854,
    VCMPPDYrri	= 2855,
    VCMPPDYrri_alt	= 2856,
    VCMPPDrmi	= 2857,
    VCMPPDrmi_alt	= 2858,
    VCMPPDrri	= 2859,
    VCMPPDrri_alt	= 2860,
    VCMPPSYrmi	= 2861,
    VCMPPSYrmi_alt	= 2862,
    VCMPPSYrri	= 2863,
    VCMPPSYrri_alt	= 2864,
    VCMPPSrmi	= 2865,
    VCMPPSrmi_alt	= 2866,
    VCMPPSrri	= 2867,
    VCMPPSrri_alt	= 2868,
    VCMPSDrm	= 2869,
    VCMPSDrm_alt	= 2870,
    VCMPSDrr	= 2871,
    VCMPSDrr_alt	= 2872,
    VCMPSSrm	= 2873,
    VCMPSSrm_alt	= 2874,
    VCMPSSrr	= 2875,
    VCMPSSrr_alt	= 2876,
    VCOMISDrm	= 2877,
    VCOMISDrr	= 2878,
    VCOMISSrm	= 2879,
    VCOMISSrr	= 2880,
    VCVTDQ2PDYrm	= 2881,
    VCVTDQ2PDYrr	= 2882,
    VCVTDQ2PDrm	= 2883,
    VCVTDQ2PDrr	= 2884,
    VCVTDQ2PSYrm	= 2885,
    VCVTDQ2PSYrr	= 2886,
    VCVTDQ2PSrm	= 2887,
    VCVTDQ2PSrr	= 2888,
    VCVTPD2DQXrm	= 2889,
    VCVTPD2DQYrm	= 2890,
    VCVTPD2DQYrr	= 2891,
    VCVTPD2DQrr	= 2892,
    VCVTPD2PSXrm	= 2893,
    VCVTPD2PSYrm	= 2894,
    VCVTPD2PSYrr	= 2895,
    VCVTPD2PSrr	= 2896,
    VCVTPH2PSYrm	= 2897,
    VCVTPH2PSYrr	= 2898,
    VCVTPH2PSrm	= 2899,
    VCVTPH2PSrr	= 2900,
    VCVTPS2DQYrm	= 2901,
    VCVTPS2DQYrr	= 2902,
    VCVTPS2DQrm	= 2903,
    VCVTPS2DQrr	= 2904,
    VCVTPS2PDYrm	= 2905,
    VCVTPS2PDYrr	= 2906,
    VCVTPS2PDrm	= 2907,
    VCVTPS2PDrr	= 2908,
    VCVTPS2PHYmr	= 2909,
    VCVTPS2PHYrr	= 2910,
    VCVTPS2PHmr	= 2911,
    VCVTPS2PHrr	= 2912,
    VCVTSD2SI64rm	= 2913,
    VCVTSD2SI64rr	= 2914,
    VCVTSD2SIrm	= 2915,
    VCVTSD2SIrr	= 2916,
    VCVTSD2SSrm	= 2917,
    VCVTSD2SSrr	= 2918,
    VCVTSI2SD64rm	= 2919,
    VCVTSI2SD64rr	= 2920,
    VCVTSI2SDrm	= 2921,
    VCVTSI2SDrr	= 2922,
    VCVTSI2SS64rm	= 2923,
    VCVTSI2SS64rr	= 2924,
    VCVTSI2SSrm	= 2925,
    VCVTSI2SSrr	= 2926,
    VCVTSS2SDrm	= 2927,
    VCVTSS2SDrr	= 2928,
    VCVTSS2SI64rm	= 2929,
    VCVTSS2SI64rr	= 2930,
    VCVTSS2SIrm	= 2931,
    VCVTSS2SIrr	= 2932,
    VCVTTPD2DQXrm	= 2933,
    VCVTTPD2DQYrm	= 2934,
    VCVTTPD2DQYrr	= 2935,
    VCVTTPD2DQrr	= 2936,
    VCVTTPS2DQYrm	= 2937,
    VCVTTPS2DQYrr	= 2938,
    VCVTTPS2DQrm	= 2939,
    VCVTTPS2DQrr	= 2940,
    VCVTTSD2SI64rm	= 2941,
    VCVTTSD2SI64rr	= 2942,
    VCVTTSD2SIrm	= 2943,
    VCVTTSD2SIrr	= 2944,
    VCVTTSS2SI64rm	= 2945,
    VCVTTSS2SI64rr	= 2946,
    VCVTTSS2SIrm	= 2947,
    VCVTTSS2SIrr	= 2948,
    VDIVPDYrm	= 2949,
    VDIVPDYrr	= 2950,
    VDIVPDrm	= 2951,
    VDIVPDrr	= 2952,
    VDIVPSYrm	= 2953,
    VDIVPSYrr	= 2954,
    VDIVPSrm	= 2955,
    VDIVPSrr	= 2956,
    VDIVSDrm	= 2957,
    VDIVSDrm_Int	= 2958,
    VDIVSDrr	= 2959,
    VDIVSDrr_Int	= 2960,
    VDIVSSrm	= 2961,
    VDIVSSrm_Int	= 2962,
    VDIVSSrr	= 2963,
    VDIVSSrr_Int	= 2964,
    VDPPDrmi	= 2965,
    VDPPDrri	= 2966,
    VDPPSYrmi	= 2967,
    VDPPSYrri	= 2968,
    VDPPSrmi	= 2969,
    VDPPSrri	= 2970,
    VERRm	= 2971,
    VERRr	= 2972,
    VERWm	= 2973,
    VERWr	= 2974,
    VEXTRACTF128mr	= 2975,
    VEXTRACTF128rr	= 2976,
    VEXTRACTI128mr	= 2977,
    VEXTRACTI128rr	= 2978,
    VEXTRACTPSmr	= 2979,
    VEXTRACTPSrr	= 2980,
    VEXTRACTPSrr64	= 2981,
    VFMADDPD4mr	= 2982,
    VFMADDPD4mrY	= 2983,
    VFMADDPD4rm	= 2984,
    VFMADDPD4rmY	= 2985,
    VFMADDPD4rr	= 2986,
    VFMADDPD4rrY	= 2987,
    VFMADDPD4rrY_REV	= 2988,
    VFMADDPD4rr_REV	= 2989,
    VFMADDPDr132m	= 2990,
    VFMADDPDr132mY	= 2991,
    VFMADDPDr132r	= 2992,
    VFMADDPDr132rY	= 2993,
    VFMADDPDr213m	= 2994,
    VFMADDPDr213mY	= 2995,
    VFMADDPDr213r	= 2996,
    VFMADDPDr213rY	= 2997,
    VFMADDPDr231m	= 2998,
    VFMADDPDr231mY	= 2999,
    VFMADDPDr231r	= 3000,
    VFMADDPDr231rY	= 3001,
    VFMADDPS4mr	= 3002,
    VFMADDPS4mrY	= 3003,
    VFMADDPS4rm	= 3004,
    VFMADDPS4rmY	= 3005,
    VFMADDPS4rr	= 3006,
    VFMADDPS4rrY	= 3007,
    VFMADDPS4rrY_REV	= 3008,
    VFMADDPS4rr_REV	= 3009,
    VFMADDPSr132m	= 3010,
    VFMADDPSr132mY	= 3011,
    VFMADDPSr132r	= 3012,
    VFMADDPSr132rY	= 3013,
    VFMADDPSr213m	= 3014,
    VFMADDPSr213mY	= 3015,
    VFMADDPSr213r	= 3016,
    VFMADDPSr213rY	= 3017,
    VFMADDPSr231m	= 3018,
    VFMADDPSr231mY	= 3019,
    VFMADDPSr231r	= 3020,
    VFMADDPSr231rY	= 3021,
    VFMADDSD4mr	= 3022,
    VFMADDSD4mr_Int	= 3023,
    VFMADDSD4rm	= 3024,
    VFMADDSD4rm_Int	= 3025,
    VFMADDSD4rr	= 3026,
    VFMADDSD4rr_Int	= 3027,
    VFMADDSD4rr_REV	= 3028,
    VFMADDSDr132m	= 3029,
    VFMADDSDr132r	= 3030,
    VFMADDSDr213m	= 3031,
    VFMADDSDr213m_Int	= 3032,
    VFMADDSDr213r	= 3033,
    VFMADDSDr213r_Int	= 3034,
    VFMADDSDr231m	= 3035,
    VFMADDSDr231r	= 3036,
    VFMADDSS4mr	= 3037,
    VFMADDSS4mr_Int	= 3038,
    VFMADDSS4rm	= 3039,
    VFMADDSS4rm_Int	= 3040,
    VFMADDSS4rr	= 3041,
    VFMADDSS4rr_Int	= 3042,
    VFMADDSS4rr_REV	= 3043,
    VFMADDSSr132m	= 3044,
    VFMADDSSr132r	= 3045,
    VFMADDSSr213m	= 3046,
    VFMADDSSr213m_Int	= 3047,
    VFMADDSSr213r	= 3048,
    VFMADDSSr213r_Int	= 3049,
    VFMADDSSr231m	= 3050,
    VFMADDSSr231r	= 3051,
    VFMADDSUBPD4mr	= 3052,
    VFMADDSUBPD4mrY	= 3053,
    VFMADDSUBPD4rm	= 3054,
    VFMADDSUBPD4rmY	= 3055,
    VFMADDSUBPD4rr	= 3056,
    VFMADDSUBPD4rrY	= 3057,
    VFMADDSUBPD4rrY_REV	= 3058,
    VFMADDSUBPD4rr_REV	= 3059,
    VFMADDSUBPDr132m	= 3060,
    VFMADDSUBPDr132mY	= 3061,
    VFMADDSUBPDr132r	= 3062,
    VFMADDSUBPDr132rY	= 3063,
    VFMADDSUBPDr213m	= 3064,
    VFMADDSUBPDr213mY	= 3065,
    VFMADDSUBPDr213r	= 3066,
    VFMADDSUBPDr213rY	= 3067,
    VFMADDSUBPDr231m	= 3068,
    VFMADDSUBPDr231mY	= 3069,
    VFMADDSUBPDr231r	= 3070,
    VFMADDSUBPDr231rY	= 3071,
    VFMADDSUBPS4mr	= 3072,
    VFMADDSUBPS4mrY	= 3073,
    VFMADDSUBPS4rm	= 3074,
    VFMADDSUBPS4rmY	= 3075,
    VFMADDSUBPS4rr	= 3076,
    VFMADDSUBPS4rrY	= 3077,
    VFMADDSUBPS4rrY_REV	= 3078,
    VFMADDSUBPS4rr_REV	= 3079,
    VFMADDSUBPSr132m	= 3080,
    VFMADDSUBPSr132mY	= 3081,
    VFMADDSUBPSr132r	= 3082,
    VFMADDSUBPSr132rY	= 3083,
    VFMADDSUBPSr213m	= 3084,
    VFMADDSUBPSr213mY	= 3085,
    VFMADDSUBPSr213r	= 3086,
    VFMADDSUBPSr213rY	= 3087,
    VFMADDSUBPSr231m	= 3088,
    VFMADDSUBPSr231mY	= 3089,
    VFMADDSUBPSr231r	= 3090,
    VFMADDSUBPSr231rY	= 3091,
    VFMSUBADDPD4mr	= 3092,
    VFMSUBADDPD4mrY	= 3093,
    VFMSUBADDPD4rm	= 3094,
    VFMSUBADDPD4rmY	= 3095,
    VFMSUBADDPD4rr	= 3096,
    VFMSUBADDPD4rrY	= 3097,
    VFMSUBADDPD4rrY_REV	= 3098,
    VFMSUBADDPD4rr_REV	= 3099,
    VFMSUBADDPDr132m	= 3100,
    VFMSUBADDPDr132mY	= 3101,
    VFMSUBADDPDr132r	= 3102,
    VFMSUBADDPDr132rY	= 3103,
    VFMSUBADDPDr213m	= 3104,
    VFMSUBADDPDr213mY	= 3105,
    VFMSUBADDPDr213r	= 3106,
    VFMSUBADDPDr213rY	= 3107,
    VFMSUBADDPDr231m	= 3108,
    VFMSUBADDPDr231mY	= 3109,
    VFMSUBADDPDr231r	= 3110,
    VFMSUBADDPDr231rY	= 3111,
    VFMSUBADDPS4mr	= 3112,
    VFMSUBADDPS4mrY	= 3113,
    VFMSUBADDPS4rm	= 3114,
    VFMSUBADDPS4rmY	= 3115,
    VFMSUBADDPS4rr	= 3116,
    VFMSUBADDPS4rrY	= 3117,
    VFMSUBADDPS4rrY_REV	= 3118,
    VFMSUBADDPS4rr_REV	= 3119,
    VFMSUBADDPSr132m	= 3120,
    VFMSUBADDPSr132mY	= 3121,
    VFMSUBADDPSr132r	= 3122,
    VFMSUBADDPSr132rY	= 3123,
    VFMSUBADDPSr213m	= 3124,
    VFMSUBADDPSr213mY	= 3125,
    VFMSUBADDPSr213r	= 3126,
    VFMSUBADDPSr213rY	= 3127,
    VFMSUBADDPSr231m	= 3128,
    VFMSUBADDPSr231mY	= 3129,
    VFMSUBADDPSr231r	= 3130,
    VFMSUBADDPSr231rY	= 3131,
    VFMSUBPD4mr	= 3132,
    VFMSUBPD4mrY	= 3133,
    VFMSUBPD4rm	= 3134,
    VFMSUBPD4rmY	= 3135,
    VFMSUBPD4rr	= 3136,
    VFMSUBPD4rrY	= 3137,
    VFMSUBPD4rrY_REV	= 3138,
    VFMSUBPD4rr_REV	= 3139,
    VFMSUBPDr132m	= 3140,
    VFMSUBPDr132mY	= 3141,
    VFMSUBPDr132r	= 3142,
    VFMSUBPDr132rY	= 3143,
    VFMSUBPDr213m	= 3144,
    VFMSUBPDr213mY	= 3145,
    VFMSUBPDr213r	= 3146,
    VFMSUBPDr213rY	= 3147,
    VFMSUBPDr231m	= 3148,
    VFMSUBPDr231mY	= 3149,
    VFMSUBPDr231r	= 3150,
    VFMSUBPDr231rY	= 3151,
    VFMSUBPS4mr	= 3152,
    VFMSUBPS4mrY	= 3153,
    VFMSUBPS4rm	= 3154,
    VFMSUBPS4rmY	= 3155,
    VFMSUBPS4rr	= 3156,
    VFMSUBPS4rrY	= 3157,
    VFMSUBPS4rrY_REV	= 3158,
    VFMSUBPS4rr_REV	= 3159,
    VFMSUBPSr132m	= 3160,
    VFMSUBPSr132mY	= 3161,
    VFMSUBPSr132r	= 3162,
    VFMSUBPSr132rY	= 3163,
    VFMSUBPSr213m	= 3164,
    VFMSUBPSr213mY	= 3165,
    VFMSUBPSr213r	= 3166,
    VFMSUBPSr213rY	= 3167,
    VFMSUBPSr231m	= 3168,
    VFMSUBPSr231mY	= 3169,
    VFMSUBPSr231r	= 3170,
    VFMSUBPSr231rY	= 3171,
    VFMSUBSD4mr	= 3172,
    VFMSUBSD4mr_Int	= 3173,
    VFMSUBSD4rm	= 3174,
    VFMSUBSD4rm_Int	= 3175,
    VFMSUBSD4rr	= 3176,
    VFMSUBSD4rr_Int	= 3177,
    VFMSUBSD4rr_REV	= 3178,
    VFMSUBSDr132m	= 3179,
    VFMSUBSDr132r	= 3180,
    VFMSUBSDr213m	= 3181,
    VFMSUBSDr213m_Int	= 3182,
    VFMSUBSDr213r	= 3183,
    VFMSUBSDr213r_Int	= 3184,
    VFMSUBSDr231m	= 3185,
    VFMSUBSDr231r	= 3186,
    VFMSUBSS4mr	= 3187,
    VFMSUBSS4mr_Int	= 3188,
    VFMSUBSS4rm	= 3189,
    VFMSUBSS4rm_Int	= 3190,
    VFMSUBSS4rr	= 3191,
    VFMSUBSS4rr_Int	= 3192,
    VFMSUBSS4rr_REV	= 3193,
    VFMSUBSSr132m	= 3194,
    VFMSUBSSr132r	= 3195,
    VFMSUBSSr213m	= 3196,
    VFMSUBSSr213m_Int	= 3197,
    VFMSUBSSr213r	= 3198,
    VFMSUBSSr213r_Int	= 3199,
    VFMSUBSSr231m	= 3200,
    VFMSUBSSr231r	= 3201,
    VFNMADDPD4mr	= 3202,
    VFNMADDPD4mrY	= 3203,
    VFNMADDPD4rm	= 3204,
    VFNMADDPD4rmY	= 3205,
    VFNMADDPD4rr	= 3206,
    VFNMADDPD4rrY	= 3207,
    VFNMADDPD4rrY_REV	= 3208,
    VFNMADDPD4rr_REV	= 3209,
    VFNMADDPDr132m	= 3210,
    VFNMADDPDr132mY	= 3211,
    VFNMADDPDr132r	= 3212,
    VFNMADDPDr132rY	= 3213,
    VFNMADDPDr213m	= 3214,
    VFNMADDPDr213mY	= 3215,
    VFNMADDPDr213r	= 3216,
    VFNMADDPDr213rY	= 3217,
    VFNMADDPDr231m	= 3218,
    VFNMADDPDr231mY	= 3219,
    VFNMADDPDr231r	= 3220,
    VFNMADDPDr231rY	= 3221,
    VFNMADDPS4mr	= 3222,
    VFNMADDPS4mrY	= 3223,
    VFNMADDPS4rm	= 3224,
    VFNMADDPS4rmY	= 3225,
    VFNMADDPS4rr	= 3226,
    VFNMADDPS4rrY	= 3227,
    VFNMADDPS4rrY_REV	= 3228,
    VFNMADDPS4rr_REV	= 3229,
    VFNMADDPSr132m	= 3230,
    VFNMADDPSr132mY	= 3231,
    VFNMADDPSr132r	= 3232,
    VFNMADDPSr132rY	= 3233,
    VFNMADDPSr213m	= 3234,
    VFNMADDPSr213mY	= 3235,
    VFNMADDPSr213r	= 3236,
    VFNMADDPSr213rY	= 3237,
    VFNMADDPSr231m	= 3238,
    VFNMADDPSr231mY	= 3239,
    VFNMADDPSr231r	= 3240,
    VFNMADDPSr231rY	= 3241,
    VFNMADDSD4mr	= 3242,
    VFNMADDSD4mr_Int	= 3243,
    VFNMADDSD4rm	= 3244,
    VFNMADDSD4rm_Int	= 3245,
    VFNMADDSD4rr	= 3246,
    VFNMADDSD4rr_Int	= 3247,
    VFNMADDSD4rr_REV	= 3248,
    VFNMADDSDr132m	= 3249,
    VFNMADDSDr132r	= 3250,
    VFNMADDSDr213m	= 3251,
    VFNMADDSDr213m_Int	= 3252,
    VFNMADDSDr213r	= 3253,
    VFNMADDSDr213r_Int	= 3254,
    VFNMADDSDr231m	= 3255,
    VFNMADDSDr231r	= 3256,
    VFNMADDSS4mr	= 3257,
    VFNMADDSS4mr_Int	= 3258,
    VFNMADDSS4rm	= 3259,
    VFNMADDSS4rm_Int	= 3260,
    VFNMADDSS4rr	= 3261,
    VFNMADDSS4rr_Int	= 3262,
    VFNMADDSS4rr_REV	= 3263,
    VFNMADDSSr132m	= 3264,
    VFNMADDSSr132r	= 3265,
    VFNMADDSSr213m	= 3266,
    VFNMADDSSr213m_Int	= 3267,
    VFNMADDSSr213r	= 3268,
    VFNMADDSSr213r_Int	= 3269,
    VFNMADDSSr231m	= 3270,
    VFNMADDSSr231r	= 3271,
    VFNMSUBPD4mr	= 3272,
    VFNMSUBPD4mrY	= 3273,
    VFNMSUBPD4rm	= 3274,
    VFNMSUBPD4rmY	= 3275,
    VFNMSUBPD4rr	= 3276,
    VFNMSUBPD4rrY	= 3277,
    VFNMSUBPD4rrY_REV	= 3278,
    VFNMSUBPD4rr_REV	= 3279,
    VFNMSUBPDr132m	= 3280,
    VFNMSUBPDr132mY	= 3281,
    VFNMSUBPDr132r	= 3282,
    VFNMSUBPDr132rY	= 3283,
    VFNMSUBPDr213m	= 3284,
    VFNMSUBPDr213mY	= 3285,
    VFNMSUBPDr213r	= 3286,
    VFNMSUBPDr213rY	= 3287,
    VFNMSUBPDr231m	= 3288,
    VFNMSUBPDr231mY	= 3289,
    VFNMSUBPDr231r	= 3290,
    VFNMSUBPDr231rY	= 3291,
    VFNMSUBPS4mr	= 3292,
    VFNMSUBPS4mrY	= 3293,
    VFNMSUBPS4rm	= 3294,
    VFNMSUBPS4rmY	= 3295,
    VFNMSUBPS4rr	= 3296,
    VFNMSUBPS4rrY	= 3297,
    VFNMSUBPS4rrY_REV	= 3298,
    VFNMSUBPS4rr_REV	= 3299,
    VFNMSUBPSr132m	= 3300,
    VFNMSUBPSr132mY	= 3301,
    VFNMSUBPSr132r	= 3302,
    VFNMSUBPSr132rY	= 3303,
    VFNMSUBPSr213m	= 3304,
    VFNMSUBPSr213mY	= 3305,
    VFNMSUBPSr213r	= 3306,
    VFNMSUBPSr213rY	= 3307,
    VFNMSUBPSr231m	= 3308,
    VFNMSUBPSr231mY	= 3309,
    VFNMSUBPSr231r	= 3310,
    VFNMSUBPSr231rY	= 3311,
    VFNMSUBSD4mr	= 3312,
    VFNMSUBSD4mr_Int	= 3313,
    VFNMSUBSD4rm	= 3314,
    VFNMSUBSD4rm_Int	= 3315,
    VFNMSUBSD4rr	= 3316,
    VFNMSUBSD4rr_Int	= 3317,
    VFNMSUBSD4rr_REV	= 3318,
    VFNMSUBSDr132m	= 3319,
    VFNMSUBSDr132r	= 3320,
    VFNMSUBSDr213m	= 3321,
    VFNMSUBSDr213m_Int	= 3322,
    VFNMSUBSDr213r	= 3323,
    VFNMSUBSDr213r_Int	= 3324,
    VFNMSUBSDr231m	= 3325,
    VFNMSUBSDr231r	= 3326,
    VFNMSUBSS4mr	= 3327,
    VFNMSUBSS4mr_Int	= 3328,
    VFNMSUBSS4rm	= 3329,
    VFNMSUBSS4rm_Int	= 3330,
    VFNMSUBSS4rr	= 3331,
    VFNMSUBSS4rr_Int	= 3332,
    VFNMSUBSS4rr_REV	= 3333,
    VFNMSUBSSr132m	= 3334,
    VFNMSUBSSr132r	= 3335,
    VFNMSUBSSr213m	= 3336,
    VFNMSUBSSr213m_Int	= 3337,
    VFNMSUBSSr213r	= 3338,
    VFNMSUBSSr213r_Int	= 3339,
    VFNMSUBSSr231m	= 3340,
    VFNMSUBSSr231r	= 3341,
    VFRCZPDrm	= 3342,
    VFRCZPDrmY	= 3343,
    VFRCZPDrr	= 3344,
    VFRCZPDrrY	= 3345,
    VFRCZPSrm	= 3346,
    VFRCZPSrmY	= 3347,
    VFRCZPSrr	= 3348,
    VFRCZPSrrY	= 3349,
    VFRCZSDrm	= 3350,
    VFRCZSDrr	= 3351,
    VFRCZSSrm	= 3352,
    VFRCZSSrr	= 3353,
    VFsANDNPDrm	= 3354,
    VFsANDNPDrr	= 3355,
    VFsANDNPSrm	= 3356,
    VFsANDNPSrr	= 3357,
    VFsANDPDrm	= 3358,
    VFsANDPDrr	= 3359,
    VFsANDPSrm	= 3360,
    VFsANDPSrr	= 3361,
    VFsORPDrm	= 3362,
    VFsORPDrr	= 3363,
    VFsORPSrm	= 3364,
    VFsORPSrr	= 3365,
    VFsXORPDrm	= 3366,
    VFsXORPDrr	= 3367,
    VFsXORPSrm	= 3368,
    VFsXORPSrr	= 3369,
    VGATHERDPDYrm	= 3370,
    VGATHERDPDrm	= 3371,
    VGATHERDPSYrm	= 3372,
    VGATHERDPSrm	= 3373,
    VGATHERQPDYrm	= 3374,
    VGATHERQPDrm	= 3375,
    VGATHERQPSYrm	= 3376,
    VGATHERQPSrm	= 3377,
    VHADDPDYrm	= 3378,
    VHADDPDYrr	= 3379,
    VHADDPDrm	= 3380,
    VHADDPDrr	= 3381,
    VHADDPSYrm	= 3382,
    VHADDPSYrr	= 3383,
    VHADDPSrm	= 3384,
    VHADDPSrr	= 3385,
    VHSUBPDYrm	= 3386,
    VHSUBPDYrr	= 3387,
    VHSUBPDrm	= 3388,
    VHSUBPDrr	= 3389,
    VHSUBPSYrm	= 3390,
    VHSUBPSYrr	= 3391,
    VHSUBPSrm	= 3392,
    VHSUBPSrr	= 3393,
    VINSERTF128rm	= 3394,
    VINSERTF128rr	= 3395,
    VINSERTI128rm	= 3396,
    VINSERTI128rr	= 3397,
    VINSERTPSrm	= 3398,
    VINSERTPSrr	= 3399,
    VLDDQUYrm	= 3400,
    VLDDQUrm	= 3401,
    VLDMXCSR	= 3402,
    VMASKMOVDQU	= 3403,
    VMASKMOVDQU64	= 3404,
    VMASKMOVPDYmr	= 3405,
    VMASKMOVPDYrm	= 3406,
    VMASKMOVPDmr	= 3407,
    VMASKMOVPDrm	= 3408,
    VMASKMOVPSYmr	= 3409,
    VMASKMOVPSYrm	= 3410,
    VMASKMOVPSmr	= 3411,
    VMASKMOVPSrm	= 3412,
    VMAXCPDYrm	= 3413,
    VMAXCPDYrr	= 3414,
    VMAXCPDrm	= 3415,
    VMAXCPDrr	= 3416,
    VMAXCPSYrm	= 3417,
    VMAXCPSYrr	= 3418,
    VMAXCPSrm	= 3419,
    VMAXCPSrr	= 3420,
    VMAXCSDrm	= 3421,
    VMAXCSDrr	= 3422,
    VMAXCSSrm	= 3423,
    VMAXCSSrr	= 3424,
    VMAXPDYrm	= 3425,
    VMAXPDYrr	= 3426,
    VMAXPDrm	= 3427,
    VMAXPDrr	= 3428,
    VMAXPSYrm	= 3429,
    VMAXPSYrr	= 3430,
    VMAXPSrm	= 3431,
    VMAXPSrr	= 3432,
    VMAXSDrm	= 3433,
    VMAXSDrm_Int	= 3434,
    VMAXSDrr	= 3435,
    VMAXSDrr_Int	= 3436,
    VMAXSSrm	= 3437,
    VMAXSSrm_Int	= 3438,
    VMAXSSrr	= 3439,
    VMAXSSrr_Int	= 3440,
    VMCALL	= 3441,
    VMCLEARm	= 3442,
    VMFUNC	= 3443,
    VMINCPDYrm	= 3444,
    VMINCPDYrr	= 3445,
    VMINCPDrm	= 3446,
    VMINCPDrr	= 3447,
    VMINCPSYrm	= 3448,
    VMINCPSYrr	= 3449,
    VMINCPSrm	= 3450,
    VMINCPSrr	= 3451,
    VMINCSDrm	= 3452,
    VMINCSDrr	= 3453,
    VMINCSSrm	= 3454,
    VMINCSSrr	= 3455,
    VMINPDYrm	= 3456,
    VMINPDYrr	= 3457,
    VMINPDrm	= 3458,
    VMINPDrr	= 3459,
    VMINPSYrm	= 3460,
    VMINPSYrr	= 3461,
    VMINPSrm	= 3462,
    VMINPSrr	= 3463,
    VMINSDrm	= 3464,
    VMINSDrm_Int	= 3465,
    VMINSDrr	= 3466,
    VMINSDrr_Int	= 3467,
    VMINSSrm	= 3468,
    VMINSSrm_Int	= 3469,
    VMINSSrr	= 3470,
    VMINSSrr_Int	= 3471,
    VMLAUNCH	= 3472,
    VMLOAD32	= 3473,
    VMLOAD64	= 3474,
    VMMCALL	= 3475,
    VMOV64toPQIrr	= 3476,
    VMOV64toSDrm	= 3477,
    VMOV64toSDrr	= 3478,
    VMOVAPDYmr	= 3479,
    VMOVAPDYrm	= 3480,
    VMOVAPDYrr	= 3481,
    VMOVAPDYrr_REV	= 3482,
    VMOVAPDmr	= 3483,
    VMOVAPDrm	= 3484,
    VMOVAPDrr	= 3485,
    VMOVAPDrr_REV	= 3486,
    VMOVAPSYmr	= 3487,
    VMOVAPSYrm	= 3488,
    VMOVAPSYrr	= 3489,
    VMOVAPSYrr_REV	= 3490,
    VMOVAPSmr	= 3491,
    VMOVAPSrm	= 3492,
    VMOVAPSrr	= 3493,
    VMOVAPSrr_REV	= 3494,
    VMOVDDUPYrm	= 3495,
    VMOVDDUPYrr	= 3496,
    VMOVDDUPrm	= 3497,
    VMOVDDUPrr	= 3498,
    VMOVDI2PDIrm	= 3499,
    VMOVDI2PDIrr	= 3500,
    VMOVDI2SSrm	= 3501,
    VMOVDI2SSrr	= 3502,
    VMOVDQAYmr	= 3503,
    VMOVDQAYrm	= 3504,
    VMOVDQAYrr	= 3505,
    VMOVDQAYrr_REV	= 3506,
    VMOVDQAmr	= 3507,
    VMOVDQArm	= 3508,
    VMOVDQArr	= 3509,
    VMOVDQArr_REV	= 3510,
    VMOVDQUYmr	= 3511,
    VMOVDQUYrm	= 3512,
    VMOVDQUYrr	= 3513,
    VMOVDQUYrr_REV	= 3514,
    VMOVDQUmr	= 3515,
    VMOVDQUrm	= 3516,
    VMOVDQUrr	= 3517,
    VMOVDQUrr_REV	= 3518,
    VMOVHLPSrr	= 3519,
    VMOVHPDmr	= 3520,
    VMOVHPDrm	= 3521,
    VMOVHPSmr	= 3522,
    VMOVHPSrm	= 3523,
    VMOVLHPSrr	= 3524,
    VMOVLPDmr	= 3525,
    VMOVLPDrm	= 3526,
    VMOVLPSmr	= 3527,
    VMOVLPSrm	= 3528,
    VMOVLQ128mr	= 3529,
    VMOVMSKPDYr64r	= 3530,
    VMOVMSKPDYrr32	= 3531,
    VMOVMSKPDYrr64	= 3532,
    VMOVMSKPDr64r	= 3533,
    VMOVMSKPDrr32	= 3534,
    VMOVMSKPDrr64	= 3535,
    VMOVMSKPSYr64r	= 3536,
    VMOVMSKPSYrr32	= 3537,
    VMOVMSKPSYrr64	= 3538,
    VMOVMSKPSr64r	= 3539,
    VMOVMSKPSrr32	= 3540,
    VMOVMSKPSrr64	= 3541,
    VMOVNTDQAYrm	= 3542,
    VMOVNTDQArm	= 3543,
    VMOVNTDQYmr	= 3544,
    VMOVNTDQmr	= 3545,
    VMOVNTPDYmr	= 3546,
    VMOVNTPDmr	= 3547,
    VMOVNTPSYmr	= 3548,
    VMOVNTPSmr	= 3549,
    VMOVPDI2DImr	= 3550,
    VMOVPDI2DIrr	= 3551,
    VMOVPQI2QImr	= 3552,
    VMOVPQIto64rr	= 3553,
    VMOVQI2PQIrm	= 3554,
    VMOVQd64rr	= 3555,
    VMOVQd64rr_alt	= 3556,
    VMOVQs64rr	= 3557,
    VMOVQxrxr	= 3558,
    VMOVSDmr	= 3559,
    VMOVSDrm	= 3560,
    VMOVSDrr	= 3561,
    VMOVSDrr_REV	= 3562,
    VMOVSDto64mr	= 3563,
    VMOVSDto64rr	= 3564,
    VMOVSHDUPYrm	= 3565,
    VMOVSHDUPYrr	= 3566,
    VMOVSHDUPrm	= 3567,
    VMOVSHDUPrr	= 3568,
    VMOVSLDUPYrm	= 3569,
    VMOVSLDUPYrr	= 3570,
    VMOVSLDUPrm	= 3571,
    VMOVSLDUPrr	= 3572,
    VMOVSS2DImr	= 3573,
    VMOVSS2DIrr	= 3574,
    VMOVSSmr	= 3575,
    VMOVSSrm	= 3576,
    VMOVSSrr	= 3577,
    VMOVSSrr_REV	= 3578,
    VMOVUPDYmr	= 3579,
    VMOVUPDYrm	= 3580,
    VMOVUPDYrr	= 3581,
    VMOVUPDYrr_REV	= 3582,
    VMOVUPDmr	= 3583,
    VMOVUPDrm	= 3584,
    VMOVUPDrr	= 3585,
    VMOVUPDrr_REV	= 3586,
    VMOVUPSYmr	= 3587,
    VMOVUPSYrm	= 3588,
    VMOVUPSYrr	= 3589,
    VMOVUPSYrr_REV	= 3590,
    VMOVUPSmr	= 3591,
    VMOVUPSrm	= 3592,
    VMOVUPSrr	= 3593,
    VMOVUPSrr_REV	= 3594,
    VMOVZDI2PDIrm	= 3595,
    VMOVZDI2PDIrr	= 3596,
    VMOVZPQILo2PQIrm	= 3597,
    VMOVZPQILo2PQIrr	= 3598,
    VMOVZQI2PQIrm	= 3599,
    VMOVZQI2PQIrr	= 3600,
    VMPSADBWYrmi	= 3601,
    VMPSADBWYrri	= 3602,
    VMPSADBWrmi	= 3603,
    VMPSADBWrri	= 3604,
    VMPTRLDm	= 3605,
    VMPTRSTm	= 3606,
    VMREAD32rm	= 3607,
    VMREAD32rr	= 3608,
    VMREAD64rm	= 3609,
    VMREAD64rr	= 3610,
    VMRESUME	= 3611,
    VMRUN32	= 3612,
    VMRUN64	= 3613,
    VMSAVE32	= 3614,
    VMSAVE64	= 3615,
    VMULPDYrm	= 3616,
    VMULPDYrr	= 3617,
    VMULPDrm	= 3618,
    VMULPDrr	= 3619,
    VMULPSYrm	= 3620,
    VMULPSYrr	= 3621,
    VMULPSrm	= 3622,
    VMULPSrr	= 3623,
    VMULSDrm	= 3624,
    VMULSDrm_Int	= 3625,
    VMULSDrr	= 3626,
    VMULSDrr_Int	= 3627,
    VMULSSrm	= 3628,
    VMULSSrm_Int	= 3629,
    VMULSSrr	= 3630,
    VMULSSrr_Int	= 3631,
    VMWRITE32rm	= 3632,
    VMWRITE32rr	= 3633,
    VMWRITE64rm	= 3634,
    VMWRITE64rr	= 3635,
    VMXOFF	= 3636,
    VMXON	= 3637,
    VORPDYrm	= 3638,
    VORPDYrr	= 3639,
    VORPDrm	= 3640,
    VORPDrr	= 3641,
    VORPSYrm	= 3642,
    VORPSYrr	= 3643,
    VORPSrm	= 3644,
    VORPSrr	= 3645,
    VPABSBrm128	= 3646,
    VPABSBrm256	= 3647,
    VPABSBrr128	= 3648,
    VPABSBrr256	= 3649,
    VPABSDrm128	= 3650,
    VPABSDrm256	= 3651,
    VPABSDrr128	= 3652,
    VPABSDrr256	= 3653,
    VPABSWrm128	= 3654,
    VPABSWrm256	= 3655,
    VPABSWrr128	= 3656,
    VPABSWrr256	= 3657,
    VPACKSSDWYrm	= 3658,
    VPACKSSDWYrr	= 3659,
    VPACKSSDWrm	= 3660,
    VPACKSSDWrr	= 3661,
    VPACKSSWBYrm	= 3662,
    VPACKSSWBYrr	= 3663,
    VPACKSSWBrm	= 3664,
    VPACKSSWBrr	= 3665,
    VPACKUSDWYrm	= 3666,
    VPACKUSDWYrr	= 3667,
    VPACKUSDWrm	= 3668,
    VPACKUSDWrr	= 3669,
    VPACKUSWBYrm	= 3670,
    VPACKUSWBYrr	= 3671,
    VPACKUSWBrm	= 3672,
    VPACKUSWBrr	= 3673,
    VPADDBYrm	= 3674,
    VPADDBYrr	= 3675,
    VPADDBrm	= 3676,
    VPADDBrr	= 3677,
    VPADDDYrm	= 3678,
    VPADDDYrr	= 3679,
    VPADDDrm	= 3680,
    VPADDDrr	= 3681,
    VPADDQYrm	= 3682,
    VPADDQYrr	= 3683,
    VPADDQrm	= 3684,
    VPADDQrr	= 3685,
    VPADDSBYrm	= 3686,
    VPADDSBYrr	= 3687,
    VPADDSBrm	= 3688,
    VPADDSBrr	= 3689,
    VPADDSWYrm	= 3690,
    VPADDSWYrr	= 3691,
    VPADDSWrm	= 3692,
    VPADDSWrr	= 3693,
    VPADDUSBYrm	= 3694,
    VPADDUSBYrr	= 3695,
    VPADDUSBrm	= 3696,
    VPADDUSBrr	= 3697,
    VPADDUSWYrm	= 3698,
    VPADDUSWYrr	= 3699,
    VPADDUSWrm	= 3700,
    VPADDUSWrr	= 3701,
    VPADDWYrm	= 3702,
    VPADDWYrr	= 3703,
    VPADDWrm	= 3704,
    VPADDWrr	= 3705,
    VPALIGNR128rm	= 3706,
    VPALIGNR128rr	= 3707,
    VPALIGNR256rm	= 3708,
    VPALIGNR256rr	= 3709,
    VPANDNYrm	= 3710,
    VPANDNYrr	= 3711,
    VPANDNrm	= 3712,
    VPANDNrr	= 3713,
    VPANDYrm	= 3714,
    VPANDYrr	= 3715,
    VPANDrm	= 3716,
    VPANDrr	= 3717,
    VPAVGBYrm	= 3718,
    VPAVGBYrr	= 3719,
    VPAVGBrm	= 3720,
    VPAVGBrr	= 3721,
    VPAVGWYrm	= 3722,
    VPAVGWYrr	= 3723,
    VPAVGWrm	= 3724,
    VPAVGWrr	= 3725,
    VPBLENDDYrmi	= 3726,
    VPBLENDDYrri	= 3727,
    VPBLENDDrmi	= 3728,
    VPBLENDDrri	= 3729,
    VPBLENDVBYrm	= 3730,
    VPBLENDVBYrr	= 3731,
    VPBLENDVBrm	= 3732,
    VPBLENDVBrr	= 3733,
    VPBLENDWYrmi	= 3734,
    VPBLENDWYrri	= 3735,
    VPBLENDWrmi	= 3736,
    VPBLENDWrri	= 3737,
    VPBROADCASTBYrm	= 3738,
    VPBROADCASTBYrr	= 3739,
    VPBROADCASTBrm	= 3740,
    VPBROADCASTBrr	= 3741,
    VPBROADCASTDYrm	= 3742,
    VPBROADCASTDYrr	= 3743,
    VPBROADCASTDrm	= 3744,
    VPBROADCASTDrr	= 3745,
    VPBROADCASTQYrm	= 3746,
    VPBROADCASTQYrr	= 3747,
    VPBROADCASTQrm	= 3748,
    VPBROADCASTQrr	= 3749,
    VPBROADCASTWYrm	= 3750,
    VPBROADCASTWYrr	= 3751,
    VPBROADCASTWrm	= 3752,
    VPBROADCASTWrr	= 3753,
    VPCLMULQDQrm	= 3754,
    VPCLMULQDQrr	= 3755,
    VPCMOVmr	= 3756,
    VPCMOVmrY	= 3757,
    VPCMOVrm	= 3758,
    VPCMOVrmY	= 3759,
    VPCMOVrr	= 3760,
    VPCMOVrrY	= 3761,
    VPCMPEQBYrm	= 3762,
    VPCMPEQBYrr	= 3763,
    VPCMPEQBrm	= 3764,
    VPCMPEQBrr	= 3765,
    VPCMPEQDYrm	= 3766,
    VPCMPEQDYrr	= 3767,
    VPCMPEQDrm	= 3768,
    VPCMPEQDrr	= 3769,
    VPCMPEQQYrm	= 3770,
    VPCMPEQQYrr	= 3771,
    VPCMPEQQrm	= 3772,
    VPCMPEQQrr	= 3773,
    VPCMPEQWYrm	= 3774,
    VPCMPEQWYrr	= 3775,
    VPCMPEQWrm	= 3776,
    VPCMPEQWrr	= 3777,
    VPCMPESTRIMEM	= 3778,
    VPCMPESTRIREG	= 3779,
    VPCMPESTRIrm	= 3780,
    VPCMPESTRIrr	= 3781,
    VPCMPESTRM128MEM	= 3782,
    VPCMPESTRM128REG	= 3783,
    VPCMPESTRM128rm	= 3784,
    VPCMPESTRM128rr	= 3785,
    VPCMPGTBYrm	= 3786,
    VPCMPGTBYrr	= 3787,
    VPCMPGTBrm	= 3788,
    VPCMPGTBrr	= 3789,
    VPCMPGTDYrm	= 3790,
    VPCMPGTDYrr	= 3791,
    VPCMPGTDrm	= 3792,
    VPCMPGTDrr	= 3793,
    VPCMPGTQYrm	= 3794,
    VPCMPGTQYrr	= 3795,
    VPCMPGTQrm	= 3796,
    VPCMPGTQrr	= 3797,
    VPCMPGTWYrm	= 3798,
    VPCMPGTWYrr	= 3799,
    VPCMPGTWrm	= 3800,
    VPCMPGTWrr	= 3801,
    VPCMPISTRIMEM	= 3802,
    VPCMPISTRIREG	= 3803,
    VPCMPISTRIrm	= 3804,
    VPCMPISTRIrr	= 3805,
    VPCMPISTRM128MEM	= 3806,
    VPCMPISTRM128REG	= 3807,
    VPCMPISTRM128rm	= 3808,
    VPCMPISTRM128rr	= 3809,
    VPCOMBmi	= 3810,
    VPCOMBri	= 3811,
    VPCOMDmi	= 3812,
    VPCOMDri	= 3813,
    VPCOMQmi	= 3814,
    VPCOMQri	= 3815,
    VPCOMUBmi	= 3816,
    VPCOMUBri	= 3817,
    VPCOMUDmi	= 3818,
    VPCOMUDri	= 3819,
    VPCOMUQmi	= 3820,
    VPCOMUQri	= 3821,
    VPCOMUWmi	= 3822,
    VPCOMUWri	= 3823,
    VPCOMWmi	= 3824,
    VPCOMWri	= 3825,
    VPERM2F128rm	= 3826,
    VPERM2F128rr	= 3827,
    VPERM2I128rm	= 3828,
    VPERM2I128rr	= 3829,
    VPERMDYrm	= 3830,
    VPERMDYrr	= 3831,
    VPERMIL2PDmr	= 3832,
    VPERMIL2PDmrY	= 3833,
    VPERMIL2PDrm	= 3834,
    VPERMIL2PDrmY	= 3835,
    VPERMIL2PDrr	= 3836,
    VPERMIL2PDrrY	= 3837,
    VPERMIL2PSmr	= 3838,
    VPERMIL2PSmrY	= 3839,
    VPERMIL2PSrm	= 3840,
    VPERMIL2PSrmY	= 3841,
    VPERMIL2PSrr	= 3842,
    VPERMIL2PSrrY	= 3843,
    VPERMILPDYmi	= 3844,
    VPERMILPDYri	= 3845,
    VPERMILPDYrm	= 3846,
    VPERMILPDYrr	= 3847,
    VPERMILPDmi	= 3848,
    VPERMILPDri	= 3849,
    VPERMILPDrm	= 3850,
    VPERMILPDrr	= 3851,
    VPERMILPSYmi	= 3852,
    VPERMILPSYri	= 3853,
    VPERMILPSYrm	= 3854,
    VPERMILPSYrr	= 3855,
    VPERMILPSmi	= 3856,
    VPERMILPSri	= 3857,
    VPERMILPSrm	= 3858,
    VPERMILPSrr	= 3859,
    VPERMPDYmi	= 3860,
    VPERMPDYri	= 3861,
    VPERMPSYrm	= 3862,
    VPERMPSYrr	= 3863,
    VPERMQYmi	= 3864,
    VPERMQYri	= 3865,
    VPEXTRBmr	= 3866,
    VPEXTRBrr	= 3867,
    VPEXTRBrr64	= 3868,
    VPEXTRDmr	= 3869,
    VPEXTRDrr	= 3870,
    VPEXTRQmr	= 3871,
    VPEXTRQrr	= 3872,
    VPEXTRWmr	= 3873,
    VPEXTRWri	= 3874,
    VPGATHERDDYrm	= 3875,
    VPGATHERDDrm	= 3876,
    VPGATHERDQYrm	= 3877,
    VPGATHERDQrm	= 3878,
    VPGATHERQDYrm	= 3879,
    VPGATHERQDrm	= 3880,
    VPGATHERQQYrm	= 3881,
    VPGATHERQQrm	= 3882,
    VPHADDBDrm	= 3883,
    VPHADDBDrr	= 3884,
    VPHADDBQrm	= 3885,
    VPHADDBQrr	= 3886,
    VPHADDBWrm	= 3887,
    VPHADDBWrr	= 3888,
    VPHADDDQrm	= 3889,
    VPHADDDQrr	= 3890,
    VPHADDDYrm	= 3891,
    VPHADDDYrr	= 3892,
    VPHADDDrm	= 3893,
    VPHADDDrr	= 3894,
    VPHADDSWrm128	= 3895,
    VPHADDSWrm256	= 3896,
    VPHADDSWrr128	= 3897,
    VPHADDSWrr256	= 3898,
    VPHADDUBDrm	= 3899,
    VPHADDUBDrr	= 3900,
    VPHADDUBQrm	= 3901,
    VPHADDUBQrr	= 3902,
    VPHADDUBWrm	= 3903,
    VPHADDUBWrr	= 3904,
    VPHADDUDQrm	= 3905,
    VPHADDUDQrr	= 3906,
    VPHADDUWDrm	= 3907,
    VPHADDUWDrr	= 3908,
    VPHADDUWQrm	= 3909,
    VPHADDUWQrr	= 3910,
    VPHADDWDrm	= 3911,
    VPHADDWDrr	= 3912,
    VPHADDWQrm	= 3913,
    VPHADDWQrr	= 3914,
    VPHADDWYrm	= 3915,
    VPHADDWYrr	= 3916,
    VPHADDWrm	= 3917,
    VPHADDWrr	= 3918,
    VPHMINPOSUWrm128	= 3919,
    VPHMINPOSUWrr128	= 3920,
    VPHSUBBWrm	= 3921,
    VPHSUBBWrr	= 3922,
    VPHSUBDQrm	= 3923,
    VPHSUBDQrr	= 3924,
    VPHSUBDYrm	= 3925,
    VPHSUBDYrr	= 3926,
    VPHSUBDrm	= 3927,
    VPHSUBDrr	= 3928,
    VPHSUBSWrm128	= 3929,
    VPHSUBSWrm256	= 3930,
    VPHSUBSWrr128	= 3931,
    VPHSUBSWrr256	= 3932,
    VPHSUBWDrm	= 3933,
    VPHSUBWDrr	= 3934,
    VPHSUBWYrm	= 3935,
    VPHSUBWYrr	= 3936,
    VPHSUBWrm	= 3937,
    VPHSUBWrr	= 3938,
    VPINSRBrm	= 3939,
    VPINSRBrr	= 3940,
    VPINSRDrm	= 3941,
    VPINSRDrr	= 3942,
    VPINSRQrm	= 3943,
    VPINSRQrr	= 3944,
    VPINSRWrmi	= 3945,
    VPINSRWrr64i	= 3946,
    VPINSRWrri	= 3947,
    VPMACSDDrm	= 3948,
    VPMACSDDrr	= 3949,
    VPMACSDQHrm	= 3950,
    VPMACSDQHrr	= 3951,
    VPMACSDQLrm	= 3952,
    VPMACSDQLrr	= 3953,
    VPMACSSDDrm	= 3954,
    VPMACSSDDrr	= 3955,
    VPMACSSDQHrm	= 3956,
    VPMACSSDQHrr	= 3957,
    VPMACSSDQLrm	= 3958,
    VPMACSSDQLrr	= 3959,
    VPMACSSWDrm	= 3960,
    VPMACSSWDrr	= 3961,
    VPMACSSWWrm	= 3962,
    VPMACSSWWrr	= 3963,
    VPMACSWDrm	= 3964,
    VPMACSWDrr	= 3965,
    VPMACSWWrm	= 3966,
    VPMACSWWrr	= 3967,
    VPMADCSSWDrm	= 3968,
    VPMADCSSWDrr	= 3969,
    VPMADCSWDrm	= 3970,
    VPMADCSWDrr	= 3971,
    VPMADDUBSWrm128	= 3972,
    VPMADDUBSWrm256	= 3973,
    VPMADDUBSWrr128	= 3974,
    VPMADDUBSWrr256	= 3975,
    VPMADDWDYrm	= 3976,
    VPMADDWDYrr	= 3977,
    VPMADDWDrm	= 3978,
    VPMADDWDrr	= 3979,
    VPMASKMOVDYmr	= 3980,
    VPMASKMOVDYrm	= 3981,
    VPMASKMOVDmr	= 3982,
    VPMASKMOVDrm	= 3983,
    VPMASKMOVQYmr	= 3984,
    VPMASKMOVQYrm	= 3985,
    VPMASKMOVQmr	= 3986,
    VPMASKMOVQrm	= 3987,
    VPMAXSBYrm	= 3988,
    VPMAXSBYrr	= 3989,
    VPMAXSBrm	= 3990,
    VPMAXSBrr	= 3991,
    VPMAXSDYrm	= 3992,
    VPMAXSDYrr	= 3993,
    VPMAXSDrm	= 3994,
    VPMAXSDrr	= 3995,
    VPMAXSWYrm	= 3996,
    VPMAXSWYrr	= 3997,
    VPMAXSWrm	= 3998,
    VPMAXSWrr	= 3999,
    VPMAXUBYrm	= 4000,
    VPMAXUBYrr	= 4001,
    VPMAXUBrm	= 4002,
    VPMAXUBrr	= 4003,
    VPMAXUDYrm	= 4004,
    VPMAXUDYrr	= 4005,
    VPMAXUDrm	= 4006,
    VPMAXUDrr	= 4007,
    VPMAXUWYrm	= 4008,
    VPMAXUWYrr	= 4009,
    VPMAXUWrm	= 4010,
    VPMAXUWrr	= 4011,
    VPMINSBYrm	= 4012,
    VPMINSBYrr	= 4013,
    VPMINSBrm	= 4014,
    VPMINSBrr	= 4015,
    VPMINSDYrm	= 4016,
    VPMINSDYrr	= 4017,
    VPMINSDrm	= 4018,
    VPMINSDrr	= 4019,
    VPMINSWYrm	= 4020,
    VPMINSWYrr	= 4021,
    VPMINSWrm	= 4022,
    VPMINSWrr	= 4023,
    VPMINUBYrm	= 4024,
    VPMINUBYrr	= 4025,
    VPMINUBrm	= 4026,
    VPMINUBrr	= 4027,
    VPMINUDYrm	= 4028,
    VPMINUDYrr	= 4029,
    VPMINUDrm	= 4030,
    VPMINUDrr	= 4031,
    VPMINUWYrm	= 4032,
    VPMINUWYrr	= 4033,
    VPMINUWrm	= 4034,
    VPMINUWrr	= 4035,
    VPMOVMSKBYr64r	= 4036,
    VPMOVMSKBYrr	= 4037,
    VPMOVMSKBr64r	= 4038,
    VPMOVMSKBrr	= 4039,
    VPMOVSXBDYrm	= 4040,
    VPMOVSXBDYrr	= 4041,
    VPMOVSXBDrm	= 4042,
    VPMOVSXBDrr	= 4043,
    VPMOVSXBQYrm	= 4044,
    VPMOVSXBQYrr	= 4045,
    VPMOVSXBQrm	= 4046,
    VPMOVSXBQrr	= 4047,
    VPMOVSXBWYrm	= 4048,
    VPMOVSXBWYrr	= 4049,
    VPMOVSXBWrm	= 4050,
    VPMOVSXBWrr	= 4051,
    VPMOVSXDQYrm	= 4052,
    VPMOVSXDQYrr	= 4053,
    VPMOVSXDQrm	= 4054,
    VPMOVSXDQrr	= 4055,
    VPMOVSXWDYrm	= 4056,
    VPMOVSXWDYrr	= 4057,
    VPMOVSXWDrm	= 4058,
    VPMOVSXWDrr	= 4059,
    VPMOVSXWQYrm	= 4060,
    VPMOVSXWQYrr	= 4061,
    VPMOVSXWQrm	= 4062,
    VPMOVSXWQrr	= 4063,
    VPMOVZXBDYrm	= 4064,
    VPMOVZXBDYrr	= 4065,
    VPMOVZXBDrm	= 4066,
    VPMOVZXBDrr	= 4067,
    VPMOVZXBQYrm	= 4068,
    VPMOVZXBQYrr	= 4069,
    VPMOVZXBQrm	= 4070,
    VPMOVZXBQrr	= 4071,
    VPMOVZXBWYrm	= 4072,
    VPMOVZXBWYrr	= 4073,
    VPMOVZXBWrm	= 4074,
    VPMOVZXBWrr	= 4075,
    VPMOVZXDQYrm	= 4076,
    VPMOVZXDQYrr	= 4077,
    VPMOVZXDQrm	= 4078,
    VPMOVZXDQrr	= 4079,
    VPMOVZXWDYrm	= 4080,
    VPMOVZXWDYrr	= 4081,
    VPMOVZXWDrm	= 4082,
    VPMOVZXWDrr	= 4083,
    VPMOVZXWQYrm	= 4084,
    VPMOVZXWQYrr	= 4085,
    VPMOVZXWQrm	= 4086,
    VPMOVZXWQrr	= 4087,
    VPMULDQYrm	= 4088,
    VPMULDQYrr	= 4089,
    VPMULDQrm	= 4090,
    VPMULDQrr	= 4091,
    VPMULHRSWrm128	= 4092,
    VPMULHRSWrm256	= 4093,
    VPMULHRSWrr128	= 4094,
    VPMULHRSWrr256	= 4095,
    VPMULHUWYrm	= 4096,
    VPMULHUWYrr	= 4097,
    VPMULHUWrm	= 4098,
    VPMULHUWrr	= 4099,
    VPMULHWYrm	= 4100,
    VPMULHWYrr	= 4101,
    VPMULHWrm	= 4102,
    VPMULHWrr	= 4103,
    VPMULLDYrm	= 4104,
    VPMULLDYrr	= 4105,
    VPMULLDrm	= 4106,
    VPMULLDrr	= 4107,
    VPMULLWYrm	= 4108,
    VPMULLWYrr	= 4109,
    VPMULLWrm	= 4110,
    VPMULLWrr	= 4111,
    VPMULUDQYrm	= 4112,
    VPMULUDQYrr	= 4113,
    VPMULUDQrm	= 4114,
    VPMULUDQrr	= 4115,
    VPORYrm	= 4116,
    VPORYrr	= 4117,
    VPORrm	= 4118,
    VPORrr	= 4119,
    VPPERMmr	= 4120,
    VPPERMrm	= 4121,
    VPPERMrr	= 4122,
    VPROTBmi	= 4123,
    VPROTBmr	= 4124,
    VPROTBri	= 4125,
    VPROTBrm	= 4126,
    VPROTBrr	= 4127,
    VPROTDmi	= 4128,
    VPROTDmr	= 4129,
    VPROTDri	= 4130,
    VPROTDrm	= 4131,
    VPROTDrr	= 4132,
    VPROTQmi	= 4133,
    VPROTQmr	= 4134,
    VPROTQri	= 4135,
    VPROTQrm	= 4136,
    VPROTQrr	= 4137,
    VPROTWmi	= 4138,
    VPROTWmr	= 4139,
    VPROTWri	= 4140,
    VPROTWrm	= 4141,
    VPROTWrr	= 4142,
    VPSADBWYrm	= 4143,
    VPSADBWYrr	= 4144,
    VPSADBWrm	= 4145,
    VPSADBWrr	= 4146,
    VPSHABmr	= 4147,
    VPSHABrm	= 4148,
    VPSHABrr	= 4149,
    VPSHADmr	= 4150,
    VPSHADrm	= 4151,
    VPSHADrr	= 4152,
    VPSHAQmr	= 4153,
    VPSHAQrm	= 4154,
    VPSHAQrr	= 4155,
    VPSHAWmr	= 4156,
    VPSHAWrm	= 4157,
    VPSHAWrr	= 4158,
    VPSHLBmr	= 4159,
    VPSHLBrm	= 4160,
    VPSHLBrr	= 4161,
    VPSHLDmr	= 4162,
    VPSHLDrm	= 4163,
    VPSHLDrr	= 4164,
    VPSHLQmr	= 4165,
    VPSHLQrm	= 4166,
    VPSHLQrr	= 4167,
    VPSHLWmr	= 4168,
    VPSHLWrm	= 4169,
    VPSHLWrr	= 4170,
    VPSHUFBYrm	= 4171,
    VPSHUFBYrr	= 4172,
    VPSHUFBrm	= 4173,
    VPSHUFBrr	= 4174,
    VPSHUFDYmi	= 4175,
    VPSHUFDYri	= 4176,
    VPSHUFDmi	= 4177,
    VPSHUFDri	= 4178,
    VPSHUFHWYmi	= 4179,
    VPSHUFHWYri	= 4180,
    VPSHUFHWmi	= 4181,
    VPSHUFHWri	= 4182,
    VPSHUFLWYmi	= 4183,
    VPSHUFLWYri	= 4184,
    VPSHUFLWmi	= 4185,
    VPSHUFLWri	= 4186,
    VPSIGNBYrm	= 4187,
    VPSIGNBYrr	= 4188,
    VPSIGNBrm	= 4189,
    VPSIGNBrr	= 4190,
    VPSIGNDYrm	= 4191,
    VPSIGNDYrr	= 4192,
    VPSIGNDrm	= 4193,
    VPSIGNDrr	= 4194,
    VPSIGNWYrm	= 4195,
    VPSIGNWYrr	= 4196,
    VPSIGNWrm	= 4197,
    VPSIGNWrr	= 4198,
    VPSLLDQYri	= 4199,
    VPSLLDQri	= 4200,
    VPSLLDYri	= 4201,
    VPSLLDYrm	= 4202,
    VPSLLDYrr	= 4203,
    VPSLLDri	= 4204,
    VPSLLDrm	= 4205,
    VPSLLDrr	= 4206,
    VPSLLQYri	= 4207,
    VPSLLQYrm	= 4208,
    VPSLLQYrr	= 4209,
    VPSLLQri	= 4210,
    VPSLLQrm	= 4211,
    VPSLLQrr	= 4212,
    VPSLLVDYrm	= 4213,
    VPSLLVDYrr	= 4214,
    VPSLLVDrm	= 4215,
    VPSLLVDrr	= 4216,
    VPSLLVQYrm	= 4217,
    VPSLLVQYrr	= 4218,
    VPSLLVQrm	= 4219,
    VPSLLVQrr	= 4220,
    VPSLLWYri	= 4221,
    VPSLLWYrm	= 4222,
    VPSLLWYrr	= 4223,
    VPSLLWri	= 4224,
    VPSLLWrm	= 4225,
    VPSLLWrr	= 4226,
    VPSRADYri	= 4227,
    VPSRADYrm	= 4228,
    VPSRADYrr	= 4229,
    VPSRADri	= 4230,
    VPSRADrm	= 4231,
    VPSRADrr	= 4232,
    VPSRAVDYrm	= 4233,
    VPSRAVDYrr	= 4234,
    VPSRAVDrm	= 4235,
    VPSRAVDrr	= 4236,
    VPSRAWYri	= 4237,
    VPSRAWYrm	= 4238,
    VPSRAWYrr	= 4239,
    VPSRAWri	= 4240,
    VPSRAWrm	= 4241,
    VPSRAWrr	= 4242,
    VPSRLDQYri	= 4243,
    VPSRLDQri	= 4244,
    VPSRLDYri	= 4245,
    VPSRLDYrm	= 4246,
    VPSRLDYrr	= 4247,
    VPSRLDri	= 4248,
    VPSRLDrm	= 4249,
    VPSRLDrr	= 4250,
    VPSRLQYri	= 4251,
    VPSRLQYrm	= 4252,
    VPSRLQYrr	= 4253,
    VPSRLQri	= 4254,
    VPSRLQrm	= 4255,
    VPSRLQrr	= 4256,
    VPSRLVDYrm	= 4257,
    VPSRLVDYrr	= 4258,
    VPSRLVDrm	= 4259,
    VPSRLVDrr	= 4260,
    VPSRLVQYrm	= 4261,
    VPSRLVQYrr	= 4262,
    VPSRLVQrm	= 4263,
    VPSRLVQrr	= 4264,
    VPSRLWYri	= 4265,
    VPSRLWYrm	= 4266,
    VPSRLWYrr	= 4267,
    VPSRLWri	= 4268,
    VPSRLWrm	= 4269,
    VPSRLWrr	= 4270,
    VPSUBBYrm	= 4271,
    VPSUBBYrr	= 4272,
    VPSUBBrm	= 4273,
    VPSUBBrr	= 4274,
    VPSUBDYrm	= 4275,
    VPSUBDYrr	= 4276,
    VPSUBDrm	= 4277,
    VPSUBDrr	= 4278,
    VPSUBQYrm	= 4279,
    VPSUBQYrr	= 4280,
    VPSUBQrm	= 4281,
    VPSUBQrr	= 4282,
    VPSUBSBYrm	= 4283,
    VPSUBSBYrr	= 4284,
    VPSUBSBrm	= 4285,
    VPSUBSBrr	= 4286,
    VPSUBSWYrm	= 4287,
    VPSUBSWYrr	= 4288,
    VPSUBSWrm	= 4289,
    VPSUBSWrr	= 4290,
    VPSUBUSBYrm	= 4291,
    VPSUBUSBYrr	= 4292,
    VPSUBUSBrm	= 4293,
    VPSUBUSBrr	= 4294,
    VPSUBUSWYrm	= 4295,
    VPSUBUSWYrr	= 4296,
    VPSUBUSWrm	= 4297,
    VPSUBUSWrr	= 4298,
    VPSUBWYrm	= 4299,
    VPSUBWYrr	= 4300,
    VPSUBWrm	= 4301,
    VPSUBWrr	= 4302,
    VPTESTYrm	= 4303,
    VPTESTYrr	= 4304,
    VPTESTrm	= 4305,
    VPTESTrr	= 4306,
    VPUNPCKHBWYrm	= 4307,
    VPUNPCKHBWYrr	= 4308,
    VPUNPCKHBWrm	= 4309,
    VPUNPCKHBWrr	= 4310,
    VPUNPCKHDQYrm	= 4311,
    VPUNPCKHDQYrr	= 4312,
    VPUNPCKHDQrm	= 4313,
    VPUNPCKHDQrr	= 4314,
    VPUNPCKHQDQYrm	= 4315,
    VPUNPCKHQDQYrr	= 4316,
    VPUNPCKHQDQrm	= 4317,
    VPUNPCKHQDQrr	= 4318,
    VPUNPCKHWDYrm	= 4319,
    VPUNPCKHWDYrr	= 4320,
    VPUNPCKHWDrm	= 4321,
    VPUNPCKHWDrr	= 4322,
    VPUNPCKLBWYrm	= 4323,
    VPUNPCKLBWYrr	= 4324,
    VPUNPCKLBWrm	= 4325,
    VPUNPCKLBWrr	= 4326,
    VPUNPCKLDQYrm	= 4327,
    VPUNPCKLDQYrr	= 4328,
    VPUNPCKLDQrm	= 4329,
    VPUNPCKLDQrr	= 4330,
    VPUNPCKLQDQYrm	= 4331,
    VPUNPCKLQDQYrr	= 4332,
    VPUNPCKLQDQrm	= 4333,
    VPUNPCKLQDQrr	= 4334,
    VPUNPCKLWDYrm	= 4335,
    VPUNPCKLWDYrr	= 4336,
    VPUNPCKLWDrm	= 4337,
    VPUNPCKLWDrr	= 4338,
    VPXORYrm	= 4339,
    VPXORYrr	= 4340,
    VPXORrm	= 4341,
    VPXORrr	= 4342,
    VRCPPSYm	= 4343,
    VRCPPSYm_Int	= 4344,
    VRCPPSYr	= 4345,
    VRCPPSYr_Int	= 4346,
    VRCPPSm	= 4347,
    VRCPPSm_Int	= 4348,
    VRCPPSr	= 4349,
    VRCPPSr_Int	= 4350,
    VRCPSSm	= 4351,
    VRCPSSm_Int	= 4352,
    VRCPSSr	= 4353,
    VROUNDPDm	= 4354,
    VROUNDPDr	= 4355,
    VROUNDPSm	= 4356,
    VROUNDPSr	= 4357,
    VROUNDSDm	= 4358,
    VROUNDSDr	= 4359,
    VROUNDSDr_Int	= 4360,
    VROUNDSSm	= 4361,
    VROUNDSSr	= 4362,
    VROUNDSSr_Int	= 4363,
    VROUNDYPDm	= 4364,
    VROUNDYPDr	= 4365,
    VROUNDYPSm	= 4366,
    VROUNDYPSr	= 4367,
    VRSQRTPSYm	= 4368,
    VRSQRTPSYm_Int	= 4369,
    VRSQRTPSYr	= 4370,
    VRSQRTPSYr_Int	= 4371,
    VRSQRTPSm	= 4372,
    VRSQRTPSm_Int	= 4373,
    VRSQRTPSr	= 4374,
    VRSQRTPSr_Int	= 4375,
    VRSQRTSSm	= 4376,
    VRSQRTSSm_Int	= 4377,
    VRSQRTSSr	= 4378,
    VSHUFPDYrmi	= 4379,
    VSHUFPDYrri	= 4380,
    VSHUFPDrmi	= 4381,
    VSHUFPDrri	= 4382,
    VSHUFPSYrmi	= 4383,
    VSHUFPSYrri	= 4384,
    VSHUFPSrmi	= 4385,
    VSHUFPSrri	= 4386,
    VSQRTPDYm	= 4387,
    VSQRTPDYr	= 4388,
    VSQRTPDm	= 4389,
    VSQRTPDr	= 4390,
    VSQRTPSYm	= 4391,
    VSQRTPSYr	= 4392,
    VSQRTPSm	= 4393,
    VSQRTPSr	= 4394,
    VSQRTSDm	= 4395,
    VSQRTSDm_Int	= 4396,
    VSQRTSDr	= 4397,
    VSQRTSSm	= 4398,
    VSQRTSSm_Int	= 4399,
    VSQRTSSr	= 4400,
    VSTMXCSR	= 4401,
    VSUBPDYrm	= 4402,
    VSUBPDYrr	= 4403,
    VSUBPDrm	= 4404,
    VSUBPDrr	= 4405,
    VSUBPSYrm	= 4406,
    VSUBPSYrr	= 4407,
    VSUBPSrm	= 4408,
    VSUBPSrr	= 4409,
    VSUBSDrm	= 4410,
    VSUBSDrm_Int	= 4411,
    VSUBSDrr	= 4412,
    VSUBSDrr_Int	= 4413,
    VSUBSSrm	= 4414,
    VSUBSSrm_Int	= 4415,
    VSUBSSrr	= 4416,
    VSUBSSrr_Int	= 4417,
    VTESTPDYrm	= 4418,
    VTESTPDYrr	= 4419,
    VTESTPDrm	= 4420,
    VTESTPDrr	= 4421,
    VTESTPSYrm	= 4422,
    VTESTPSYrr	= 4423,
    VTESTPSrm	= 4424,
    VTESTPSrr	= 4425,
    VUCOMISDrm	= 4426,
    VUCOMISDrr	= 4427,
    VUCOMISSrm	= 4428,
    VUCOMISSrr	= 4429,
    VUNPCKHPDYrm	= 4430,
    VUNPCKHPDYrr	= 4431,
    VUNPCKHPDrm	= 4432,
    VUNPCKHPDrr	= 4433,
    VUNPCKHPSYrm	= 4434,
    VUNPCKHPSYrr	= 4435,
    VUNPCKHPSrm	= 4436,
    VUNPCKHPSrr	= 4437,
    VUNPCKLPDYrm	= 4438,
    VUNPCKLPDYrr	= 4439,
    VUNPCKLPDrm	= 4440,
    VUNPCKLPDrr	= 4441,
    VUNPCKLPSYrm	= 4442,
    VUNPCKLPSYrr	= 4443,
    VUNPCKLPSrm	= 4444,
    VUNPCKLPSrr	= 4445,
    VXORPDYrm	= 4446,
    VXORPDYrr	= 4447,
    VXORPDrm	= 4448,
    VXORPDrr	= 4449,
    VXORPSYrm	= 4450,
    VXORPSYrr	= 4451,
    VXORPSrm	= 4452,
    VXORPSrr	= 4453,
    VZEROALL	= 4454,
    VZEROUPPER	= 4455,
    V_SET0	= 4456,
    V_SETALLONES	= 4457,
    W64ALLOCA	= 4458,
    WAIT	= 4459,
    WBINVD	= 4460,
    WIN_ALLOCA	= 4461,
    WIN_FTOL_32	= 4462,
    WIN_FTOL_64	= 4463,
    WRFSBASE	= 4464,
    WRFSBASE64	= 4465,
    WRGSBASE	= 4466,
    WRGSBASE64	= 4467,
    WRMSR	= 4468,
    XABORT	= 4469,
    XADD16rm	= 4470,
    XADD16rr	= 4471,
    XADD32rm	= 4472,
    XADD32rr	= 4473,
    XADD64rm	= 4474,
    XADD64rr	= 4475,
    XADD8rm	= 4476,
    XADD8rr	= 4477,
    XBEGIN	= 4478,
    XBEGIN_4	= 4479,
    XCHG16ar	= 4480,
    XCHG16rm	= 4481,
    XCHG16rr	= 4482,
    XCHG32ar	= 4483,
    XCHG32ar64	= 4484,
    XCHG32rm	= 4485,
    XCHG32rr	= 4486,
    XCHG64ar	= 4487,
    XCHG64rm	= 4488,
    XCHG64rr	= 4489,
    XCHG8rm	= 4490,
    XCHG8rr	= 4491,
    XCH_F	= 4492,
    XCRYPTCBC	= 4493,
    XCRYPTCFB	= 4494,
    XCRYPTCTR	= 4495,
    XCRYPTECB	= 4496,
    XCRYPTOFB	= 4497,
    XEND	= 4498,
    XGETBV	= 4499,
    XLAT	= 4500,
    XOR16i16	= 4501,
    XOR16mi	= 4502,
    XOR16mi8	= 4503,
    XOR16mr	= 4504,
    XOR16ri	= 4505,
    XOR16ri8	= 4506,
    XOR16rm	= 4507,
    XOR16rr	= 4508,
    XOR16rr_REV	= 4509,
    XOR32i32	= 4510,
    XOR32mi	= 4511,
    XOR32mi8	= 4512,
    XOR32mr	= 4513,
    XOR32ri	= 4514,
    XOR32ri8	= 4515,
    XOR32rm	= 4516,
    XOR32rr	= 4517,
    XOR32rr_REV	= 4518,
    XOR64i32	= 4519,
    XOR64mi32	= 4520,
    XOR64mi8	= 4521,
    XOR64mr	= 4522,
    XOR64ri32	= 4523,
    XOR64ri8	= 4524,
    XOR64rm	= 4525,
    XOR64rr	= 4526,
    XOR64rr_REV	= 4527,
    XOR8i8	= 4528,
    XOR8mi	= 4529,
    XOR8mr	= 4530,
    XOR8ri	= 4531,
    XOR8rm	= 4532,
    XOR8rr	= 4533,
    XOR8rr_REV	= 4534,
    XORPDrm	= 4535,
    XORPDrr	= 4536,
    XORPSrm	= 4537,
    XORPSrr	= 4538,
    XRSTOR	= 4539,
    XRSTOR64	= 4540,
    XSAVE	= 4541,
    XSAVE64	= 4542,
    XSAVEOPT	= 4543,
    XSAVEOPT64	= 4544,
    XSETBV	= 4545,
    XSHA1	= 4546,
    XSHA256	= 4547,
    XSTORE	= 4548,
    XTEST	= 4549,
    INSTRUCTION_LIST_END = 4550
  };
}
} // End llvm namespace 
#endif // GET_INSTRINFO_ENUM

/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|*Target Instruction Descriptors                                              *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const uint16_t ImplicitList1[] = { X86::FPSW, 0 };
static const uint16_t ImplicitList2[] = { X86::EFLAGS, 0 };
static const uint16_t ImplicitList3[] = { X86::AX, 0 };
static const uint16_t ImplicitList4[] = { X86::EAX, 0 };
static const uint16_t ImplicitList5[] = { X86::RAX, 0 };
static const uint16_t ImplicitList6[] = { X86::AL, 0 };
static const uint16_t ImplicitList7[] = { X86::ESP, 0 };
static const uint16_t ImplicitList8[] = { X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList9[] = { X86::RSP, 0 };
static const uint16_t ImplicitList10[] = { X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList11[] = { X86::EFLAGS, X86::EAX, X86::EDX, 0 };
static const uint16_t ImplicitList12[] = { X86::EFLAGS, X86::AX, 0 };
static const uint16_t ImplicitList13[] = { X86::EFLAGS, X86::EAX, 0 };
static const uint16_t ImplicitList14[] = { X86::EFLAGS, X86::RAX, 0 };
static const uint16_t ImplicitList15[] = { X86::EFLAGS, X86::AL, 0 };
static const uint16_t ImplicitList16[] = { X86::XMM0, 0 };
static const uint16_t ImplicitList17[] = { X86::EAX, X86::EDX, 0 };
static const uint16_t ImplicitList18[] = { X86::RAX, X86::RBX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList19[] = { X86::RAX, X86::RDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList20[] = { X86::EAX, X86::EBX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList21[] = { X86::EAX, X86::EDX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList22[] = { X86::EFLAGS, X86::FPSW, 0 };
static const uint16_t ImplicitList23[] = { X86::RAX, X86::RDX, 0 };
static const uint16_t ImplicitList24[] = { X86::AX, X86::DX, 0 };
static const uint16_t ImplicitList25[] = { X86::AX, X86::DX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList26[] = { X86::AL, X86::EFLAGS, X86::AX, 0 };
static const uint16_t ImplicitList27[] = { X86::DX, 0 };
static const uint16_t ImplicitList28[] = { X86::EAX, X86::ECX, 0 };
static const uint16_t ImplicitList29[] = { X86::RAX, X86::ECX, 0 };
static const uint16_t ImplicitList30[] = { X86::CX, 0 };
static const uint16_t ImplicitList31[] = { X86::ECX, 0 };
static const uint16_t ImplicitList32[] = { X86::RCX, 0 };
static const uint16_t ImplicitList33[] = { X86::AH, 0 };
static const uint16_t ImplicitList34[] = { X86::AX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList35[] = { X86::EAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList36[] = { X86::RAX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList37[] = { X86::AL, X86::EFLAGS, 0 };
static const uint16_t ImplicitList38[] = { X86::EBP, X86::ESP, 0 };
static const uint16_t ImplicitList39[] = { X86::RBP, X86::RSP, 0 };
static const uint16_t ImplicitList40[] = { X86::EDI, 0 };
static const uint16_t ImplicitList41[] = { X86::RDI, 0 };
static const uint16_t ImplicitList42[] = { X86::EAX, X86::ECX, X86::EDX, 0 };
static const uint16_t ImplicitList43[] = { X86::RAX, X86::RSI, 0 };
static const uint16_t ImplicitList44[] = { X86::RAX, X86::RDX, X86::RSI, 0 };
static const uint16_t ImplicitList45[] = { X86::EDI, X86::ESI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList46[] = { X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList47[] = { X86::EDX, 0 };
static const uint16_t ImplicitList48[] = { X86::RDX, 0 };
static const uint16_t ImplicitList49[] = { X86::ECX, X86::EAX, 0 };
static const uint16_t ImplicitList50[] = { X86::EAX, X86::ECX, X86::EDX, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList51[] = { X86::RAX, X86::RCX, X86::RDX, X86::RSI, X86::RDI, X86::R8, X86::R9, X86::R10, X86::R11, X86::FP0, X86::FP1, X86::FP2, X86::FP3, X86::FP4, X86::FP5, X86::FP6, X86::ST0, X86::ST1, X86::MM0, X86::MM1, X86::MM2, X86::MM3, X86::MM4, X86::MM5, X86::MM6, X86::MM7, X86::XMM0, X86::XMM1, X86::XMM2, X86::XMM3, X86::XMM4, X86::XMM5, X86::XMM6, X86::XMM7, X86::XMM8, X86::XMM9, X86::XMM10, X86::XMM11, X86::XMM12, X86::XMM13, X86::XMM14, X86::XMM15, X86::EFLAGS, 0 };
static const uint16_t ImplicitList52[] = { X86::RBP, 0 };
static const uint16_t ImplicitList53[] = { X86::DX, X86::AX, 0 };
static const uint16_t ImplicitList54[] = { X86::DX, X86::EAX, 0 };
static const uint16_t ImplicitList55[] = { X86::DX, X86::AL, 0 };
static const uint16_t ImplicitList56[] = { X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList57[] = { X86::XMM0, X86::EFLAGS, 0 };
static const uint16_t ImplicitList58[] = { X86::EDI, X86::ESI, X86::EBP, X86::EBX, X86::EDX, X86::ECX, X86::EAX, X86::ESP, 0 };
static const uint16_t ImplicitList59[] = { X86::CL, 0 };
static const uint16_t ImplicitList60[] = { X86::RAX, X86::RCX, X86::RDX, 0 };
static const uint16_t ImplicitList61[] = { X86::ECX, X86::EDI, X86::ESI, 0 };
static const uint16_t ImplicitList62[] = { X86::RCX, X86::RDI, X86::RSI, 0 };
static const uint16_t ImplicitList63[] = { X86::AL, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList64[] = { X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList65[] = { X86::AL, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList66[] = { X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList67[] = { X86::EAX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList68[] = { X86::RAX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList69[] = { X86::AX, X86::ECX, X86::EDI, 0 };
static const uint16_t ImplicitList70[] = { X86::AX, X86::RCX, X86::RDI, 0 };
static const uint16_t ImplicitList71[] = { X86::EAX, X86::ESP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList72[] = { X86::RAX, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList73[] = { X86::AL, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList74[] = { X86::EAX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList75[] = { X86::RAX, X86::RCX, X86::RDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList76[] = { X86::AX, X86::EDI, X86::EFLAGS, 0 };
static const uint16_t ImplicitList77[] = { X86::EAX, X86::ECX, X86::EFLAGS, 0 };
static const uint16_t ImplicitList78[] = { X86::RSP, X86::RDI, 0 };
static const uint16_t ImplicitList79[] = { X86::ST0, 0 };
static const uint16_t ImplicitList80[] = { X86::YMM0, X86::YMM1, X86::YMM2, X86::YMM3, X86::YMM4, X86::YMM5, X86::YMM6, X86::YMM7, X86::YMM8, X86::YMM9, X86::YMM10, X86::YMM11, X86::YMM12, X86::YMM13, X86::YMM14, X86::YMM15, 0 };
static const uint16_t ImplicitList81[] = { X86::RAX, X86::R10, X86::R11, X86::RSP, X86::EFLAGS, 0 };
static const uint16_t ImplicitList82[] = { X86::RBX, X86::RDX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList83[] = { X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList84[] = { X86::RDX, X86::RAX, 0 };
static const uint16_t ImplicitList85[] = { X86::RDX, X86::RAX, X86::RCX, 0 };
static const uint16_t ImplicitList86[] = { X86::RAX, X86::RSI, X86::RDI, 0 };
static const uint16_t ImplicitList87[] = { X86::RDX, X86::RDI, 0 };
static const uint16_t ImplicitList88[] = { X86::RAX, X86::RDI, 0 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo10[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { X86::RSTRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo67[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo68[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo111[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo112[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { X86::RFP80RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { X86::RFP32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { X86::RFP64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { X86::GR32_NOSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { X86::GR64_NOSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::CONTROL_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::DEBUG_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { X86::SEGMENT_REGRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64_NOREXRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64_NOREX_NOSPRegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { X86::GR32_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { X86::GR32_TC_64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { X86::GR32_TC_64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { X86::GR8_NOREXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { X86::GR8RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo244[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo263[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo271[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo272[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo273[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((0 << 16) | (1 << MCOI::TIED_TO)) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, ((1 << 16) | (1 << MCOI::TIED_TO)) }, };
static const MCOperandInfo OperandInfo274[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::FR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo284[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::GR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo293[] = { { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR256RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { X86::VR128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo295[] = { { X86::GR32_NOAXRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc X86Insts[] = {
  { 0,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #0 = PHI
  { 1,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #1 = INLINEASM
  { 2,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #2 = PROLOG_LABEL
  { 3,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #3 = EH_LABEL
  { 4,	1,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #4 = GC_LABEL
  { 5,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #5 = KILL
  { 6,	3,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #6 = EXTRACT_SUBREG
  { 7,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo4 },  // Inst #7 = INSERT_SUBREG
  { 8,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #8 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo6 },  // Inst #9 = SUBREG_TO_REG
  { 10,	3,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo3 },  // Inst #10 = COPY_TO_REGCLASS
  { 11,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, 0 },  // Inst #11 = DBG_VALUE
  { 12,	1,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo5 },  // Inst #12 = REG_SEQUENCE
  { 13,	2,	1,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo7 },  // Inst #13 = COPY
  { 14,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Variadic)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #14 = BUNDLE
  { 15,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #15 = LIFETIME_START
  { 16,	1,	0,	0,	0,	0|(1<<MCID::Pseudo), 0x0ULL, NULL, NULL, OperandInfo2 },  // Inst #16 = LIFETIME_END
  { 17,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, 0 },  // Inst #17 = BUNDLE_ALIGN_START
  { 18,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, 0 },  // Inst #18 = BUNDLE_ALIGN_END
  { 19,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, 0 },  // Inst #19 = BUNDLE_LOCK
  { 20,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::NotDuplicable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, 0 },  // Inst #20 = BUNDLE_UNLOCK
  { 21,	0,	0,	1,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6e000001ULL, NULL, NULL, 0 },  // Inst #21 = AAA
  { 22,	1,	0,	2,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1aa004001ULL, NULL, NULL, OperandInfo2 },  // Inst #22 = AAD8i8
  { 23,	1,	0,	3,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a8004001ULL, NULL, NULL, OperandInfo2 },  // Inst #23 = AAM8i8
  { 24,	0,	0,	4,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7e000001ULL, NULL, NULL, 0 },  // Inst #24 = AAS
  { 25,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2000401ULL, NULL, ImplicitList1, 0 },  // Inst #25 = ABS_F
  { 26,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #26 = ABS_Fp32
  { 27,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #27 = ABS_Fp64
  { 28,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #28 = ABS_Fp80
  { 29,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo11 },  // Inst #29 = ACQUIRE_MOV16rm
  { 30,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #30 = ACQUIRE_MOV32rm
  { 31,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo13 },  // Inst #31 = ACQUIRE_MOV64rm
  { 32,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x0ULL, NULL, NULL, OperandInfo14 },  // Inst #32 = ACQUIRE_MOV8rm
  { 33,	1,	0,	5,	0,	0, 0x2a00c041ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #33 = ADC16i16
  { 34,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #34 = ADC16mi
  { 35,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #35 = ADC16mi8
  { 36,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000044ULL, ImplicitList2, ImplicitList2, OperandInfo16 },  // Inst #36 = ADC16mr
  { 37,	3,	1,	5,	0,	0, 0x10200c052ULL, ImplicitList2, ImplicitList2, OperandInfo17 },  // Inst #37 = ADC16ri
  { 38,	3,	1,	5,	0,	0, 0x106004052ULL, ImplicitList2, ImplicitList2, OperandInfo17 },  // Inst #38 = ADC16ri8
  { 39,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26000046ULL, ImplicitList2, ImplicitList2, OperandInfo18 },  // Inst #39 = ADC16rm
  { 40,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22000043ULL, ImplicitList2, ImplicitList2, OperandInfo19 },  // Inst #40 = ADC16rr
  { 41,	3,	1,	5,	0,	0, 0x26000045ULL, ImplicitList2, ImplicitList2, OperandInfo19 },  // Inst #41 = ADC16rr_REV
  { 42,	1,	0,	5,	0,	0, 0x2a014001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #42 = ADC32i32
  { 43,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #43 = ADC32mi
  { 44,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #44 = ADC32mi8
  { 45,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22000004ULL, ImplicitList2, ImplicitList2, OperandInfo20 },  // Inst #45 = ADC32mr
  { 46,	3,	1,	5,	0,	0, 0x102014012ULL, ImplicitList2, ImplicitList2, OperandInfo21 },  // Inst #46 = ADC32ri
  { 47,	3,	1,	5,	0,	0, 0x106004012ULL, ImplicitList2, ImplicitList2, OperandInfo21 },  // Inst #47 = ADC32ri8
  { 48,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26000006ULL, ImplicitList2, ImplicitList2, OperandInfo22 },  // Inst #48 = ADC32rm
  { 49,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22000003ULL, ImplicitList2, ImplicitList2, OperandInfo23 },  // Inst #49 = ADC32rr
  { 50,	3,	1,	5,	0,	0, 0x26000005ULL, ImplicitList2, ImplicitList2, OperandInfo23 },  // Inst #50 = ADC32rr_REV
  { 51,	1,	0,	5,	0,	0, 0x2a016001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #51 = ADC64i32
  { 52,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #52 = ADC64mi32
  { 53,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #53 = ADC64mi8
  { 54,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x22002004ULL, ImplicitList2, ImplicitList2, OperandInfo24 },  // Inst #54 = ADC64mr
  { 55,	3,	1,	5,	0,	0, 0x102016012ULL, ImplicitList2, ImplicitList2, OperandInfo25 },  // Inst #55 = ADC64ri32
  { 56,	3,	1,	5,	0,	0, 0x106006012ULL, ImplicitList2, ImplicitList2, OperandInfo25 },  // Inst #56 = ADC64ri8
  { 57,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x26002006ULL, ImplicitList2, ImplicitList2, OperandInfo26 },  // Inst #57 = ADC64rm
  { 58,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x22002003ULL, ImplicitList2, ImplicitList2, OperandInfo27 },  // Inst #58 = ADC64rr
  { 59,	3,	1,	5,	0,	0, 0x26002005ULL, ImplicitList2, ImplicitList2, OperandInfo27 },  // Inst #59 = ADC64rr_REV
  { 60,	1,	0,	5,	0,	0, 0x28004001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #60 = ADC8i8
  { 61,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401aULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #61 = ADC8mi
  { 62,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x20000004ULL, ImplicitList2, ImplicitList2, OperandInfo28 },  // Inst #62 = ADC8mr
  { 63,	3,	1,	5,	0,	0, 0x100004012ULL, ImplicitList2, ImplicitList2, OperandInfo29 },  // Inst #63 = ADC8ri
  { 64,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x24000006ULL, ImplicitList2, ImplicitList2, OperandInfo30 },  // Inst #64 = ADC8rm
  { 65,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x20000003ULL, ImplicitList2, ImplicitList2, OperandInfo31 },  // Inst #65 = ADC8rr
  { 66,	3,	1,	5,	0,	0, 0x24000005ULL, ImplicitList2, ImplicitList2, OperandInfo31 },  // Inst #66 = ADC8rr_REV
  { 67,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec000d46ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #67 = ADCX32rm
  { 68,	2,	1,	5,	0,	0, 0x1ec000d45ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #68 = ADCX32rr
  { 69,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec002d46ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #69 = ADCX64rm
  { 70,	2,	1,	5,	0,	0, 0x1ec002d45ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #70 = ADCX64rr
  { 71,	1,	0,	5,	0,	0, 0xa00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #71 = ADD16i16
  { 72,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #72 = ADD16mi
  { 73,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #73 = ADD16mi8
  { 74,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #74 = ADD16mr
  { 75,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x10200c050ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #75 = ADD16ri
  { 76,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004050ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #76 = ADD16ri8
  { 77,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #77 = ADD16ri8_DB
  { 78,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #78 = ADD16ri_DB
  { 79,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6000046ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #79 = ADD16rm
  { 80,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000043ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #80 = ADD16rr
  { 81,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #81 = ADD16rr_DB
  { 82,	3,	1,	5,	0,	0, 0x6000045ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #82 = ADD16rr_REV
  { 83,	1,	0,	5,	0,	0, 0xa014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #83 = ADD32i32
  { 84,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #84 = ADD32mi
  { 85,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #85 = ADD32mi8
  { 86,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #86 = ADD32mr
  { 87,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102014010ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #87 = ADD32ri
  { 88,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106004010ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #88 = ADD32ri8
  { 89,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #89 = ADD32ri8_DB
  { 90,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #90 = ADD32ri_DB
  { 91,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6000006ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #91 = ADD32rm
  { 92,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2000003ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #92 = ADD32rr
  { 93,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #93 = ADD32rr_DB
  { 94,	3,	1,	5,	0,	0, 0x6000005ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #94 = ADD32rr_REV
  { 95,	1,	0,	5,	0,	0, 0xa016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #95 = ADD64i32
  { 96,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #96 = ADD64mi32
  { 97,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #97 = ADD64mi8
  { 98,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #98 = ADD64mr
  { 99,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x102016010ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #99 = ADD64ri32
  { 100,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #100 = ADD64ri32_DB
  { 101,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x106006010ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #101 = ADD64ri8
  { 102,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x0ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #102 = ADD64ri8_DB
  { 103,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x6002006ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #103 = ADD64rm
  { 104,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x2002003ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #104 = ADD64rr
  { 105,	3,	1,	9,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x0ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #105 = ADD64rr_DB
  { 106,	3,	1,	5,	0,	0, 0x6002005ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #106 = ADD64rr_REV
  { 107,	1,	0,	5,	0,	0, 0x8004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #107 = ADD8i8
  { 108,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #108 = ADD8mi
  { 109,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #109 = ADD8mr
  { 110,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x100004010ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #110 = ADD8ri
  { 111,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x4000006ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #111 = ADD8rm
  { 112,	3,	1,	5,	0,	0|(1<<MCID::ConvertibleTo3Addr)|(1<<MCID::Commutable), 0x3ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #112 = ADD8rr
  { 113,	3,	1,	5,	0,	0, 0x4000005ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #113 = ADD8rr_REV
  { 114,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xb1000146ULL, NULL, NULL, OperandInfo34 },  // Inst #114 = ADDPDrm
  { 115,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xb1000145ULL, NULL, NULL, OperandInfo35 },  // Inst #115 = ADDPDrr
  { 116,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xb0800106ULL, NULL, NULL, OperandInfo34 },  // Inst #116 = ADDPSrm
  { 117,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xb0800105ULL, NULL, NULL, OperandInfo35 },  // Inst #117 = ADDPSrr
  { 118,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #118 = ADDSDrm
  { 119,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb0000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #119 = ADDSDrm_Int
  { 120,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xb0000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #120 = ADDSDrr
  { 121,	3,	1,	15,	0,	0, 0xb0000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #121 = ADDSDrr_Int
  { 122,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #122 = ADDSSrm
  { 123,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb0000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #123 = ADDSSrm_Int
  { 124,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xb0000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #124 = ADDSSrr
  { 125,	3,	1,	17,	0,	0, 0xb0000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #125 = ADDSSrr_Int
  { 126,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x1a1000146ULL, NULL, NULL, OperandInfo34 },  // Inst #126 = ADDSUBPDrm
  { 127,	3,	1,	11,	0,	0, 0x1a1000145ULL, NULL, NULL, OperandInfo35 },  // Inst #127 = ADDSUBPDrr
  { 128,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0x1a0800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #128 = ADDSUBPSrm
  { 129,	3,	1,	13,	0,	0, 0x1a0800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #129 = ADDSUBPSrr
  { 130,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #130 = ADD_F32m
  { 131,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #131 = ADD_F64m
  { 132,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #132 = ADD_FI16m
  { 133,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #133 = ADD_FI32m
  { 134,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000902ULL, NULL, NULL, OperandInfo41 },  // Inst #134 = ADD_FPrST0
  { 135,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000302ULL, NULL, NULL, OperandInfo41 },  // Inst #135 = ADD_FST0r
  { 136,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #136 = ADD_Fp32
  { 137,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #137 = ADD_Fp32m
  { 138,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #138 = ADD_Fp64
  { 139,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #139 = ADD_Fp64m
  { 140,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #140 = ADD_Fp64m32
  { 141,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #141 = ADD_Fp80
  { 142,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #142 = ADD_Fp80m32
  { 143,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #143 = ADD_Fp80m64
  { 144,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #144 = ADD_FpI16m32
  { 145,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #145 = ADD_FpI16m64
  { 146,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #146 = ADD_FpI16m80
  { 147,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #147 = ADD_FpI32m32
  { 148,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #148 = ADD_FpI32m64
  { 149,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #149 = ADD_FpI32m80
  { 150,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000702ULL, NULL, NULL, OperandInfo41 },  // Inst #150 = ADD_FrST0
  { 151,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList7, ImplicitList8, OperandInfo2 },  // Inst #151 = ADJCALLSTACKDOWN32
  { 152,	1,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList10, OperandInfo2 },  // Inst #152 = ADJCALLSTACKDOWN64
  { 153,	2,	0,	0,	0,	0, 0x0ULL, ImplicitList7, ImplicitList8, OperandInfo48 },  // Inst #153 = ADJCALLSTACKUP32
  { 154,	2,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList10, OperandInfo48 },  // Inst #154 = ADJCALLSTACKUP64
  { 155,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec001206ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #155 = ADOX32rm
  { 156,	2,	1,	5,	0,	0, 0x1ec001205ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #156 = ADOX32rr
  { 157,	6,	1,	8,	0,	0|(1<<MCID::MayLoad), 0x1ec003206ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #157 = ADOX64rm
  { 158,	2,	1,	5,	0,	0, 0x1ec003205ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #158 = ADOX64rr
  { 159,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bf800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #159 = AESDECLASTrm
  { 160,	3,	1,	0,	0,	0, 0x1bf800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #160 = AESDECLASTrr
  { 161,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bd800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #161 = AESDECrm
  { 162,	3,	1,	0,	0,	0, 0x1bd800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #162 = AESDECrr
  { 163,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bb800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #163 = AESENCLASTrm
  { 164,	3,	1,	0,	0,	0, 0x1bb800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #164 = AESENCLASTrr
  { 165,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b9800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #165 = AESENCrm
  { 166,	3,	1,	0,	0,	0, 0x1b9800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #166 = AESENCrr
  { 167,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b7800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #167 = AESIMCrm
  { 168,	2,	1,	0,	0,	0, 0x1b7800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #168 = AESIMCrr
  { 169,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1bf804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #169 = AESKEYGENASSIST128rm
  { 170,	3,	1,	0,	0,	0, 0x1bf804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #170 = AESKEYGENASSIST128rr
  { 171,	1,	0,	5,	0,	0, 0x4a00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #171 = AND16i16
  { 172,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #172 = AND16mi
  { 173,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #173 = AND16mi8
  { 174,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #174 = AND16mr
  { 175,	3,	1,	5,	0,	0, 0x10200c054ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #175 = AND16ri
  { 176,	3,	1,	5,	0,	0, 0x106004054ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #176 = AND16ri8
  { 177,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46000046ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #177 = AND16rm
  { 178,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42000043ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #178 = AND16rr
  { 179,	3,	1,	5,	0,	0, 0x46000045ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #179 = AND16rr_REV
  { 180,	1,	0,	5,	0,	0, 0x4a014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #180 = AND32i32
  { 181,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #181 = AND32mi
  { 182,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #182 = AND32mi8
  { 183,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #183 = AND32mr
  { 184,	3,	1,	5,	0,	0, 0x102014014ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #184 = AND32ri
  { 185,	3,	1,	5,	0,	0, 0x106004014ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #185 = AND32ri8
  { 186,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46000006ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #186 = AND32rm
  { 187,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42000003ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #187 = AND32rr
  { 188,	3,	1,	5,	0,	0, 0x46000005ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #188 = AND32rr_REV
  { 189,	1,	0,	5,	0,	0, 0x4a016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #189 = AND64i32
  { 190,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #190 = AND64mi32
  { 191,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #191 = AND64mi8
  { 192,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #192 = AND64mr
  { 193,	3,	1,	5,	0,	0, 0x102016014ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #193 = AND64ri32
  { 194,	3,	1,	5,	0,	0, 0x106006014ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #194 = AND64ri8
  { 195,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x46002006ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #195 = AND64rm
  { 196,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x42002003ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #196 = AND64rr
  { 197,	3,	1,	5,	0,	0, 0x46002005ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #197 = AND64rr_REV
  { 198,	1,	0,	5,	0,	0, 0x48004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #198 = AND8i8
  { 199,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #199 = AND8mi
  { 200,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x40000004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #200 = AND8mr
  { 201,	3,	1,	5,	0,	0, 0x100004014ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #201 = AND8ri
  { 202,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x44000006ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #202 = AND8rm
  { 203,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x40000003ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #203 = AND8rr
  { 204,	3,	1,	5,	0,	0, 0x44000005ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #204 = AND8rr_REV
  { 205,	7,	1,	20,	0,	0|(1<<MCID::MayLoad), 0xbe4000d06ULL, NULL, ImplicitList2, OperandInfo53 },  // Inst #205 = ANDN32rm
  { 206,	3,	1,	5,	0,	0, 0xbe4000d05ULL, NULL, ImplicitList2, OperandInfo54 },  // Inst #206 = ANDN32rr
  { 207,	7,	1,	20,	0,	0|(1<<MCID::MayLoad), 0xfe4000d06ULL, NULL, ImplicitList2, OperandInfo55 },  // Inst #207 = ANDN64rm
  { 208,	3,	1,	5,	0,	0, 0xfe4000d05ULL, NULL, ImplicitList2, OperandInfo56 },  // Inst #208 = ANDN64rr
  { 209,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo34 },  // Inst #209 = ANDNPDrm
  { 210,	3,	1,	22,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo35 },  // Inst #210 = ANDNPDrr
  { 211,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo34 },  // Inst #211 = ANDNPSrm
  { 212,	3,	1,	22,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo35 },  // Inst #212 = ANDNPSrr
  { 213,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #213 = ANDPDrm
  { 214,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #214 = ANDPDrr
  { 215,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo34 },  // Inst #215 = ANDPSrm
  { 216,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo35 },  // Inst #216 = ANDPSrr
  { 217,	6,	0,	23,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000004ULL, NULL, NULL, OperandInfo16 },  // Inst #217 = ARPL16mr
  { 218,	2,	1,	24,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc6000003ULL, NULL, NULL, OperandInfo57 },  // Inst #218 = ARPL16rr
  { 219,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #219 = ATOMADD6432
  { 220,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #220 = ATOMAND16
  { 221,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #221 = ATOMAND32
  { 222,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #222 = ATOMAND64
  { 223,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #223 = ATOMAND6432
  { 224,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #224 = ATOMAND8
  { 225,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #225 = ATOMMAX16
  { 226,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #226 = ATOMMAX32
  { 227,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #227 = ATOMMAX64
  { 228,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #228 = ATOMMAX6432
  { 229,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #229 = ATOMMAX8
  { 230,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #230 = ATOMMIN16
  { 231,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #231 = ATOMMIN32
  { 232,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #232 = ATOMMIN64
  { 233,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #233 = ATOMMIN6432
  { 234,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #234 = ATOMMIN8
  { 235,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #235 = ATOMNAND16
  { 236,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #236 = ATOMNAND32
  { 237,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #237 = ATOMNAND64
  { 238,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #238 = ATOMNAND6432
  { 239,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #239 = ATOMNAND8
  { 240,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #240 = ATOMOR16
  { 241,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #241 = ATOMOR32
  { 242,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #242 = ATOMOR64
  { 243,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #243 = ATOMOR6432
  { 244,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #244 = ATOMOR8
  { 245,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #245 = ATOMSUB6432
  { 246,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #246 = ATOMSWAP6432
  { 247,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #247 = ATOMUMAX16
  { 248,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #248 = ATOMUMAX32
  { 249,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #249 = ATOMUMAX64
  { 250,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #250 = ATOMUMAX6432
  { 251,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #251 = ATOMUMAX8
  { 252,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #252 = ATOMUMIN16
  { 253,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #253 = ATOMUMIN32
  { 254,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #254 = ATOMUMIN64
  { 255,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #255 = ATOMUMIN6432
  { 256,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #256 = ATOMUMIN8
  { 257,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList12, OperandInfo59 },  // Inst #257 = ATOMXOR16
  { 258,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList13, OperandInfo60 },  // Inst #258 = ATOMXOR32
  { 259,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList14, OperandInfo61 },  // Inst #259 = ATOMXOR64
  { 260,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList11, OperandInfo58 },  // Inst #260 = ATOMXOR6432
  { 261,	7,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList15, OperandInfo62 },  // Inst #261 = ATOMXOR8
  { 262,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #262 = AVX2_SETALLONES
  { 263,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo63 },  // Inst #263 = AVX_SET0
  { 264,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13ee000d06ULL, NULL, ImplicitList2, OperandInfo60 },  // Inst #264 = BEXTR32rm
  { 265,	3,	1,	0,	0,	0, 0x13ee000d05ULL, NULL, ImplicitList2, OperandInfo54 },  // Inst #265 = BEXTR32rr
  { 266,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17ee000d06ULL, NULL, ImplicitList2, OperandInfo61 },  // Inst #266 = BEXTR64rm
  { 267,	3,	1,	0,	0,	0, 0x17ee000d05ULL, NULL, ImplicitList2, OperandInfo56 },  // Inst #267 = BEXTR64rr
  { 268,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1b004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #268 = BLENDPDrmi
  { 269,	4,	1,	0,	0,	0, 0x1b004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #269 = BLENDPDrri
  { 270,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x18804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #270 = BLENDPSrmi
  { 271,	4,	1,	0,	0,	0, 0x18804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #271 = BLENDPSrri
  { 272,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b000d46ULL, ImplicitList16, NULL, OperandInfo34 },  // Inst #272 = BLENDVPDrm0
  { 273,	3,	1,	0,	0,	0, 0x2b000d45ULL, ImplicitList16, NULL, OperandInfo35 },  // Inst #273 = BLENDVPDrr0
  { 274,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x28800d46ULL, ImplicitList16, NULL, OperandInfo34 },  // Inst #274 = BLENDVPSrm0
  { 275,	3,	1,	0,	0,	0, 0x28800d45ULL, ImplicitList16, NULL, OperandInfo35 },  // Inst #275 = BLENDVPSrr0
  { 276,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1bULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #276 = BLSI32rm
  { 277,	2,	1,	0,	0,	0, 0xbe6000d13ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #277 = BLSI32rr
  { 278,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1bULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #278 = BLSI64rm
  { 279,	2,	1,	0,	0,	0, 0xfe6000d13ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #279 = BLSI64rr
  { 280,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d1aULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #280 = BLSMSK32rm
  { 281,	2,	1,	0,	0,	0, 0xbe6000d12ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #281 = BLSMSK32rr
  { 282,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d1aULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #282 = BLSMSK64rm
  { 283,	2,	1,	0,	0,	0, 0xfe6000d12ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #283 = BLSMSK64rr
  { 284,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbe6000d19ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #284 = BLSR32rm
  { 285,	2,	1,	0,	0,	0, 0xbe6000d11ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #285 = BLSR32rr
  { 286,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfe6000d19ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #286 = BLSR64rm
  { 287,	2,	1,	0,	0,	0, 0xfe6000d11ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #287 = BLSR64rr
  { 288,	6,	1,	26,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000046ULL, NULL, NULL, OperandInfo11 },  // Inst #288 = BOUNDS16rm
  { 289,	6,	1,	26,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc4000006ULL, NULL, NULL, OperandInfo12 },  // Inst #289 = BOUNDS32rm
  { 290,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178000146ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #290 = BSF16rm
  { 291,	2,	1,	28,	0,	0, 0x178000145ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #291 = BSF16rr
  { 292,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178000106ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #292 = BSF32rm
  { 293,	2,	1,	28,	0,	0, 0x178000105ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #293 = BSF32rr
  { 294,	6,	1,	27,	0,	0|(1<<MCID::MayLoad), 0x178002106ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #294 = BSF64rm
  { 295,	2,	1,	28,	0,	0, 0x178002105ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #295 = BSF64rr
  { 296,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a000146ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #296 = BSR16rm
  { 297,	2,	1,	30,	0,	0, 0x17a000145ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #297 = BSR16rr
  { 298,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a000106ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #298 = BSR32rm
  { 299,	2,	1,	30,	0,	0, 0x17a000105ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #299 = BSR32rr
  { 300,	6,	1,	29,	0,	0|(1<<MCID::MayLoad), 0x17a002106ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #300 = BSR64rm
  { 301,	2,	1,	30,	0,	0, 0x17a002105ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #301 = BSR64rr
  { 302,	2,	1,	31,	0,	0, 0x190000102ULL, NULL, NULL, OperandInfo66 },  // Inst #302 = BSWAP32r
  { 303,	2,	1,	31,	0,	0, 0x190002102ULL, NULL, NULL, OperandInfo67 },  // Inst #303 = BSWAP64r
  { 304,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400415cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #304 = BT16mi8
  { 305,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146000144ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #305 = BT16mr
  { 306,	2,	0,	34,	0,	0, 0x174004154ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #306 = BT16ri8
  { 307,	2,	0,	35,	0,	0, 0x146000143ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #307 = BT16rr
  { 308,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400411cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #308 = BT32mi8
  { 309,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146000104ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #309 = BT32mr
  { 310,	2,	0,	34,	0,	0, 0x174004114ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #310 = BT32ri8
  { 311,	2,	0,	35,	0,	0, 0x146000103ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #311 = BT32rr
  { 312,	6,	0,	32,	0,	0|(1<<MCID::MayLoad), 0x17400611cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #312 = BT64mi8
  { 313,	6,	0,	33,	0,	0|(1<<MCID::MayLoad), 0x146002104ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #313 = BT64mr
  { 314,	2,	0,	34,	0,	0, 0x174006114ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #314 = BT64ri8
  { 315,	2,	0,	35,	0,	0, 0x146002103ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #315 = BT64rr
  { 316,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #316 = BTC16mi8
  { 317,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176000144ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #317 = BTC16mr
  { 318,	2,	0,	38,	0,	0, 0x174004157ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #318 = BTC16ri8
  { 319,	2,	0,	39,	0,	0, 0x176000143ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #319 = BTC16rr
  { 320,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #320 = BTC32mi8
  { 321,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176000104ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #321 = BTC32mr
  { 322,	2,	0,	38,	0,	0, 0x174004117ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #322 = BTC32ri8
  { 323,	2,	0,	39,	0,	0, 0x176000103ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #323 = BTC32rr
  { 324,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #324 = BTC64mi8
  { 325,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x176002104ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #325 = BTC64mr
  { 326,	2,	0,	38,	0,	0, 0x174006117ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #326 = BTC64ri8
  { 327,	2,	0,	39,	0,	0, 0x176002103ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #327 = BTC64rr
  { 328,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #328 = BTR16mi8
  { 329,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166000144ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #329 = BTR16mr
  { 330,	2,	0,	38,	0,	0, 0x174004156ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #330 = BTR16ri8
  { 331,	2,	0,	39,	0,	0, 0x166000143ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #331 = BTR16rr
  { 332,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #332 = BTR32mi8
  { 333,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166000104ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #333 = BTR32mr
  { 334,	2,	0,	38,	0,	0, 0x174004116ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #334 = BTR32ri8
  { 335,	2,	0,	39,	0,	0, 0x166000103ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #335 = BTR32rr
  { 336,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #336 = BTR64mi8
  { 337,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x166002104ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #337 = BTR64mr
  { 338,	2,	0,	38,	0,	0, 0x174006116ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #338 = BTR64ri8
  { 339,	2,	0,	9,	0,	0, 0x166002103ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #339 = BTR64rr
  { 340,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400415dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #340 = BTS16mi8
  { 341,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156000144ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #341 = BTS16mr
  { 342,	2,	0,	38,	0,	0, 0x174004155ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #342 = BTS16ri8
  { 343,	2,	0,	39,	0,	0, 0x156000143ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #343 = BTS16rr
  { 344,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400411dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #344 = BTS32mi8
  { 345,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156000104ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #345 = BTS32mr
  { 346,	2,	0,	38,	0,	0, 0x174004115ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #346 = BTS32ri8
  { 347,	2,	0,	39,	0,	0, 0x156000103ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #347 = BTS32rr
  { 348,	6,	0,	36,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x17400611dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #348 = BTS64mi8
  { 349,	6,	0,	37,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x156002104ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #349 = BTS64mr
  { 350,	2,	0,	38,	0,	0, 0x174006115ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #350 = BTS64ri8
  { 351,	2,	0,	39,	0,	0, 0x156002103ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #351 = BTS64rr
  { 352,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13ea000d06ULL, NULL, ImplicitList2, OperandInfo60 },  // Inst #352 = BZHI32rm
  { 353,	3,	1,	0,	0,	0, 0x13ea000d05ULL, NULL, ImplicitList2, OperandInfo54 },  // Inst #353 = BZHI32rr
  { 354,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17ea000d06ULL, NULL, ImplicitList2, OperandInfo61 },  // Inst #354 = BZHI64rm
  { 355,	3,	1,	0,	0,	0, 0x17ea000d05ULL, NULL, ImplicitList2, OperandInfo56 },  // Inst #355 = BZHI64rr
  { 356,	5,	0,	40,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad), 0x1fe00001aULL, ImplicitList7, NULL, OperandInfo40 },  // Inst #356 = CALL32m
  { 357,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1fe000012ULL, ImplicitList7, NULL, OperandInfo71 },  // Inst #357 = CALL32r
  { 358,	5,	0,	42,	0,	0|(1<<MCID::Call)|(1<<MCID::MayLoad), 0x1fe00001aULL, ImplicitList9, NULL, OperandInfo40 },  // Inst #358 = CALL64m
  { 359,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1d0018001ULL, ImplicitList9, NULL, OperandInfo72 },  // Inst #359 = CALL64pcrel32
  { 360,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1fe000012ULL, ImplicitList9, NULL, OperandInfo73 },  // Inst #360 = CALL64r
  { 361,	1,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1d0010041ULL, ImplicitList7, NULL, OperandInfo72 },  // Inst #361 = CALLpcrel16
  { 362,	1,	0,	41,	0,	0|(1<<MCID::Call), 0x1d0018001ULL, ImplicitList7, NULL, OperandInfo72 },  // Inst #362 = CALLpcrel32
  { 363,	0,	0,	0,	0,	0, 0x130000041ULL, ImplicitList6, ImplicitList3, 0 },  // Inst #363 = CBW
  { 364,	0,	0,	0,	0,	0, 0x132000001ULL, ImplicitList4, ImplicitList17, 0 },  // Inst #364 = CDQ
  { 365,	0,	0,	0,	0,	0, 0x130002001ULL, ImplicitList4, ImplicitList5, 0 },  // Inst #365 = CDQE
  { 366,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000401ULL, NULL, ImplicitList1, 0 },  // Inst #366 = CHS_F
  { 367,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #367 = CHS_Fp32
  { 368,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #368 = CHS_Fp64
  { 369,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #369 = CHS_Fp80
  { 370,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000127ULL, ImplicitList2, ImplicitList2, 0 },  // Inst #370 = CLAC
  { 371,	0,	0,	43,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000001ULL, NULL, NULL, 0 },  // Inst #371 = CLC
  { 372,	0,	0,	44,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000001ULL, NULL, NULL, 0 },  // Inst #372 = CLD
  { 373,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00011fULL, NULL, NULL, OperandInfo40 },  // Inst #373 = CLFLUSH
  { 374,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000139ULL, NULL, NULL, 0 },  // Inst #374 = CLGI
  { 375,	0,	0,	46,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000001ULL, NULL, NULL, 0 },  // Inst #375 = CLI
  { 376,	0,	0,	47,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000101ULL, NULL, NULL, 0 },  // Inst #376 = CLTS
  { 377,	0,	0,	48,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000001ULL, NULL, NULL, 0 },  // Inst #377 = CMC
  { 378,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8e000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #378 = CMOVA16rm
  { 379,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8e000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #379 = CMOVA16rr
  { 380,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8e000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #380 = CMOVA32rm
  { 381,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8e000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #381 = CMOVA32rr
  { 382,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8e002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #382 = CMOVA64rm
  { 383,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8e002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #383 = CMOVA64rr
  { 384,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x86000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #384 = CMOVAE16rm
  { 385,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x86000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #385 = CMOVAE16rr
  { 386,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x86000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #386 = CMOVAE32rm
  { 387,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x86000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #387 = CMOVAE32rr
  { 388,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x86002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #388 = CMOVAE64rm
  { 389,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x86002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #389 = CMOVAE64rr
  { 390,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x84000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #390 = CMOVB16rm
  { 391,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x84000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #391 = CMOVB16rr
  { 392,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x84000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #392 = CMOVB32rm
  { 393,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x84000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #393 = CMOVB32rr
  { 394,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x84002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #394 = CMOVB64rm
  { 395,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x84002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #395 = CMOVB64rr
  { 396,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8c000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #396 = CMOVBE16rm
  { 397,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8c000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #397 = CMOVBE16rr
  { 398,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8c000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #398 = CMOVBE32rm
  { 399,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8c000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #399 = CMOVBE32rr
  { 400,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8c002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #400 = CMOVBE64rm
  { 401,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8c002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #401 = CMOVBE64rr
  { 402,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #402 = CMOVBE_F
  { 403,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #403 = CMOVBE_Fp32
  { 404,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #404 = CMOVBE_Fp64
  { 405,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #405 = CMOVBE_Fp80
  { 406,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #406 = CMOVB_F
  { 407,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #407 = CMOVB_Fp32
  { 408,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #408 = CMOVB_Fp64
  { 409,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #409 = CMOVB_Fp80
  { 410,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x88000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #410 = CMOVE16rm
  { 411,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x88000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #411 = CMOVE16rr
  { 412,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x88000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #412 = CMOVE32rm
  { 413,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x88000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #413 = CMOVE32rr
  { 414,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x88002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #414 = CMOVE64rm
  { 415,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x88002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #415 = CMOVE64rr
  { 416,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #416 = CMOVE_F
  { 417,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #417 = CMOVE_Fp32
  { 418,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #418 = CMOVE_Fp64
  { 419,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #419 = CMOVE_Fp80
  { 420,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9e000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #420 = CMOVG16rm
  { 421,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9e000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #421 = CMOVG16rr
  { 422,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9e000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #422 = CMOVG32rm
  { 423,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9e000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #423 = CMOVG32rr
  { 424,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9e002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #424 = CMOVG64rm
  { 425,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9e002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #425 = CMOVG64rr
  { 426,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9a000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #426 = CMOVGE16rm
  { 427,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9a000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #427 = CMOVGE16rr
  { 428,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9a000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #428 = CMOVGE32rm
  { 429,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9a000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #429 = CMOVGE32rr
  { 430,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9a002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #430 = CMOVGE64rm
  { 431,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9a002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #431 = CMOVGE64rr
  { 432,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x98000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #432 = CMOVL16rm
  { 433,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x98000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #433 = CMOVL16rr
  { 434,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x98000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #434 = CMOVL32rm
  { 435,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x98000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #435 = CMOVL32rr
  { 436,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x98002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #436 = CMOVL64rm
  { 437,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x98002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #437 = CMOVL64rr
  { 438,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x9c000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #438 = CMOVLE16rm
  { 439,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x9c000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #439 = CMOVLE16rr
  { 440,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9c000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #440 = CMOVLE32rm
  { 441,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9c000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #441 = CMOVLE32rr
  { 442,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x9c002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #442 = CMOVLE64rm
  { 443,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x9c002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #443 = CMOVLE64rr
  { 444,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #444 = CMOVNBE_F
  { 445,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #445 = CMOVNBE_Fp32
  { 446,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #446 = CMOVNBE_Fp64
  { 447,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #447 = CMOVNBE_Fp80
  { 448,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #448 = CMOVNB_F
  { 449,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #449 = CMOVNB_Fp32
  { 450,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #450 = CMOVNB_Fp64
  { 451,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #451 = CMOVNB_Fp80
  { 452,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x8a000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #452 = CMOVNE16rm
  { 453,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x8a000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #453 = CMOVNE16rr
  { 454,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8a000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #454 = CMOVNE32rm
  { 455,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8a000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #455 = CMOVNE32rr
  { 456,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x8a002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #456 = CMOVNE64rm
  { 457,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x8a002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #457 = CMOVNE64rr
  { 458,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #458 = CMOVNE_F
  { 459,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #459 = CMOVNE_Fp32
  { 460,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #460 = CMOVNE_Fp64
  { 461,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #461 = CMOVNE_Fp80
  { 462,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x82000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #462 = CMOVNO16rm
  { 463,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x82000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #463 = CMOVNO16rr
  { 464,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x82000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #464 = CMOVNO32rm
  { 465,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x82000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #465 = CMOVNO32rr
  { 466,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x82002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #466 = CMOVNO64rm
  { 467,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x82002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #467 = CMOVNO64rr
  { 468,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x96000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #468 = CMOVNP16rm
  { 469,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x96000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #469 = CMOVNP16rr
  { 470,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x96000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #470 = CMOVNP32rm
  { 471,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x96000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #471 = CMOVNP32rr
  { 472,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x96002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #472 = CMOVNP64rm
  { 473,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x96002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #473 = CMOVNP64rr
  { 474,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000602ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #474 = CMOVNP_F
  { 475,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #475 = CMOVNP_Fp32
  { 476,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #476 = CMOVNP_Fp64
  { 477,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #477 = CMOVNP_Fp80
  { 478,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x92000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #478 = CMOVNS16rm
  { 479,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x92000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #479 = CMOVNS16rr
  { 480,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x92000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #480 = CMOVNS32rm
  { 481,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x92000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #481 = CMOVNS32rr
  { 482,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x92002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #482 = CMOVNS64rm
  { 483,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x92002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #483 = CMOVNS64rr
  { 484,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x80000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #484 = CMOVO16rm
  { 485,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x80000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #485 = CMOVO16rr
  { 486,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x80000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #486 = CMOVO32rm
  { 487,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x80000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #487 = CMOVO32rr
  { 488,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x80002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #488 = CMOVO64rm
  { 489,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x80002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #489 = CMOVO64rr
  { 490,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x94000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #490 = CMOVP16rm
  { 491,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x94000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #491 = CMOVP16rr
  { 492,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x94000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #492 = CMOVP32rm
  { 493,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x94000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #493 = CMOVP32rr
  { 494,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x94002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #494 = CMOVP64rm
  { 495,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x94002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #495 = CMOVP64rr
  { 496,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000502ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #496 = CMOVP_F
  { 497,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo74 },  // Inst #497 = CMOVP_Fp32
  { 498,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo75 },  // Inst #498 = CMOVP_Fp64
  { 499,	3,	1,	0,	0,	0, 0xc0000ULL, ImplicitList2, ImplicitList1, OperandInfo76 },  // Inst #499 = CMOVP_Fp80
  { 500,	7,	1,	49,	0,	0|(1<<MCID::MayLoad), 0x90000146ULL, ImplicitList2, NULL, OperandInfo18 },  // Inst #500 = CMOVS16rm
  { 501,	3,	1,	50,	0,	0|(1<<MCID::Commutable), 0x90000145ULL, ImplicitList2, NULL, OperandInfo19 },  // Inst #501 = CMOVS16rr
  { 502,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x90000106ULL, ImplicitList2, NULL, OperandInfo22 },  // Inst #502 = CMOVS32rm
  { 503,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x90000105ULL, ImplicitList2, NULL, OperandInfo23 },  // Inst #503 = CMOVS32rr
  { 504,	7,	1,	51,	0,	0|(1<<MCID::MayLoad), 0x90002106ULL, ImplicitList2, NULL, OperandInfo26 },  // Inst #504 = CMOVS64rm
  { 505,	3,	1,	52,	0,	0|(1<<MCID::Commutable), 0x90002105ULL, ImplicitList2, NULL, OperandInfo27 },  // Inst #505 = CMOVS64rr
  { 506,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo77 },  // Inst #506 = CMOV_FR32
  { 507,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo78 },  // Inst #507 = CMOV_FR64
  { 508,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo79 },  // Inst #508 = CMOV_GR16
  { 509,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo80 },  // Inst #509 = CMOV_GR32
  { 510,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo81 },  // Inst #510 = CMOV_GR8
  { 511,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo82 },  // Inst #511 = CMOV_RFP32
  { 512,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo83 },  // Inst #512 = CMOV_RFP64
  { 513,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo84 },  // Inst #513 = CMOV_RFP80
  { 514,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo85 },  // Inst #514 = CMOV_V2F64
  { 515,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo85 },  // Inst #515 = CMOV_V2I64
  { 516,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo85 },  // Inst #516 = CMOV_V4F32
  { 517,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo86 },  // Inst #517 = CMOV_V4F64
  { 518,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo86 },  // Inst #518 = CMOV_V4I64
  { 519,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList2, NULL, OperandInfo86 },  // Inst #519 = CMOV_V8F32
  { 520,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #520 = CMP16i16
  { 521,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10200c05fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #521 = CMP16mi
  { 522,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600405fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #522 = CMP16mi8
  { 523,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #523 = CMP16mr
  { 524,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x10200c057ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #524 = CMP16ri
  { 525,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106004057ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #525 = CMP16ri8
  { 526,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76000046ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #526 = CMP16rm
  { 527,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72000043ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #527 = CMP16rr
  { 528,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76000045ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #528 = CMP16rr_REV
  { 529,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #529 = CMP32i32
  { 530,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10201401fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #530 = CMP32mi
  { 531,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600401fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #531 = CMP32mi8
  { 532,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #532 = CMP32mr
  { 533,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x102014017ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #533 = CMP32ri
  { 534,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106004017ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #534 = CMP32ri8
  { 535,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76000006ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #535 = CMP32rm
  { 536,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72000003ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #536 = CMP32rr
  { 537,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76000005ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #537 = CMP32rr_REV
  { 538,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x7a016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #538 = CMP64i32
  { 539,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10201601fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #539 = CMP64mi32
  { 540,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10600601fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #540 = CMP64mi8
  { 541,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x72002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #541 = CMP64mr
  { 542,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x102016017ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #542 = CMP64ri32
  { 543,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x106006017ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #543 = CMP64ri8
  { 544,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x76002006ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #544 = CMP64rm
  { 545,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x72002003ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #545 = CMP64rr
  { 546,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x76002005ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #546 = CMP64rr_REV
  { 547,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x78004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #547 = CMP8i8
  { 548,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10000401fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #548 = CMP8mi
  { 549,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x70000004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #549 = CMP8mr
  { 550,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x100004017ULL, NULL, ImplicitList2, OperandInfo87 },  // Inst #550 = CMP8ri
  { 551,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x74000006ULL, NULL, ImplicitList2, OperandInfo14 },  // Inst #551 = CMP8rm
  { 552,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x70000003ULL, NULL, ImplicitList2, OperandInfo88 },  // Inst #552 = CMP8rr
  { 553,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x74000005ULL, NULL, ImplicitList2, OperandInfo88 },  // Inst #553 = CMP8rr_REV
  { 554,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x185004146ULL, NULL, NULL, OperandInfo64 },  // Inst #554 = CMPPDrmi
  { 555,	8,	1,	53,	0,	0, 0x185004146ULL, NULL, NULL, OperandInfo64 },  // Inst #555 = CMPPDrmi_alt
  { 556,	4,	1,	54,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo65 },  // Inst #556 = CMPPDrri
  { 557,	4,	1,	54,	0,	0, 0x185004145ULL, NULL, NULL, OperandInfo65 },  // Inst #557 = CMPPDrri_alt
  { 558,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x184804106ULL, NULL, NULL, OperandInfo64 },  // Inst #558 = CMPPSrmi
  { 559,	8,	1,	53,	0,	0, 0x184804106ULL, NULL, NULL, OperandInfo64 },  // Inst #559 = CMPPSrmi_alt
  { 560,	4,	1,	54,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo65 },  // Inst #560 = CMPPSrri
  { 561,	4,	1,	54,	0,	0, 0x184804105ULL, NULL, NULL, OperandInfo65 },  // Inst #561 = CMPPSrri_alt
  { 562,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000041ULL, NULL, NULL, 0 },  // Inst #562 = CMPS16
  { 563,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e000001ULL, NULL, NULL, 0 },  // Inst #563 = CMPS32
  { 564,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14e002001ULL, NULL, NULL, 0 },  // Inst #564 = CMPS64
  { 565,	0,	0,	55,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14c000001ULL, NULL, NULL, 0 },  // Inst #565 = CMPS8
  { 566,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo89 },  // Inst #566 = CMPSDrm
  { 567,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo89 },  // Inst #567 = CMPSDrm_alt
  { 568,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo90 },  // Inst #568 = CMPSDrr
  { 569,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo90 },  // Inst #569 = CMPSDrr_alt
  { 570,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo91 },  // Inst #570 = CMPSSrm
  { 571,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo91 },  // Inst #571 = CMPSSrm_alt
  { 572,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo92 },  // Inst #572 = CMPSSrr
  { 573,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo92 },  // Inst #573 = CMPSSrr_alt
  { 574,	5,	0,	56,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002119ULL, ImplicitList18, ImplicitList19, OperandInfo40 },  // Inst #574 = CMPXCHG16B
  { 575,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000144ULL, NULL, NULL, OperandInfo16 },  // Inst #575 = CMPXCHG16rm
  { 576,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000143ULL, NULL, NULL, OperandInfo57 },  // Inst #576 = CMPXCHG16rr
  { 577,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162000104ULL, NULL, NULL, OperandInfo20 },  // Inst #577 = CMPXCHG32rm
  { 578,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162000103ULL, NULL, NULL, OperandInfo32 },  // Inst #578 = CMPXCHG32rr
  { 579,	6,	0,	57,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x162002104ULL, NULL, NULL, OperandInfo24 },  // Inst #579 = CMPXCHG64rm
  { 580,	2,	1,	58,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x162002103ULL, NULL, NULL, OperandInfo33 },  // Inst #580 = CMPXCHG64rr
  { 581,	5,	0,	59,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000119ULL, ImplicitList20, ImplicitList21, OperandInfo40 },  // Inst #581 = CMPXCHG8B
  { 582,	6,	0,	60,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x160000104ULL, NULL, NULL, OperandInfo28 },  // Inst #582 = CMPXCHG8rm
  { 583,	2,	1,	61,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x160000103ULL, NULL, NULL, OperandInfo88 },  // Inst #583 = CMPXCHG8rr
  { 584,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5f000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #584 = COMISDrm
  { 585,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5f000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #585 = COMISDrr
  { 586,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #586 = COMISSrm
  { 587,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #587 = COMISSrr
  { 588,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #588 = COMP_FST0r
  { 589,	1,	0,	64,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000a02ULL, NULL, ImplicitList22, OperandInfo41 },  // Inst #589 = COM_FIPr
  { 590,	1,	0,	64,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000602ULL, NULL, ImplicitList22, OperandInfo41 },  // Inst #590 = COM_FIr
  { 591,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #591 = COM_FST0r
  { 592,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fe000401ULL, NULL, ImplicitList1, 0 },  // Inst #592 = COS_F
  { 593,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #593 = COS_Fp32
  { 594,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #594 = COS_Fp64
  { 595,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #595 = COS_Fp80
  { 596,	0,	0,	65,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144000101ULL, NULL, NULL, 0 },  // Inst #596 = CPUID
  { 597,	0,	0,	0,	0,	0, 0x132002001ULL, ImplicitList5, ImplicitList23, 0 },  // Inst #597 = CQO
  { 598,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2001146ULL, NULL, NULL, OperandInfo22 },  // Inst #598 = CRC32r32m16
  { 599,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2001106ULL, NULL, NULL, OperandInfo22 },  // Inst #599 = CRC32r32m32
  { 600,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e0001106ULL, NULL, NULL, OperandInfo22 },  // Inst #600 = CRC32r32m8
  { 601,	3,	1,	0,	0,	0, 0x1e2001145ULL, NULL, NULL, OperandInfo93 },  // Inst #601 = CRC32r32r16
  { 602,	3,	1,	0,	0,	0, 0x1e2001105ULL, NULL, NULL, OperandInfo23 },  // Inst #602 = CRC32r32r32
  { 603,	3,	1,	0,	0,	0, 0x1e0001105ULL, NULL, NULL, OperandInfo94 },  // Inst #603 = CRC32r32r8
  { 604,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e2003106ULL, NULL, NULL, OperandInfo26 },  // Inst #604 = CRC32r64m64
  { 605,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1e0003106ULL, NULL, NULL, OperandInfo26 },  // Inst #605 = CRC32r64m8
  { 606,	3,	1,	0,	0,	0, 0x1e2003105ULL, NULL, NULL, OperandInfo27 },  // Inst #606 = CRC32r64r64
  { 607,	3,	1,	0,	0,	0, 0x1e0003105ULL, NULL, NULL, OperandInfo95 },  // Inst #607 = CRC32r64r8
  { 608,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5c000001ULL, NULL, NULL, 0 },  // Inst #608 = CS_PREFIX
  { 609,	6,	1,	66,	0,	0|(1<<MCID::MayLoad), 0x1cc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #609 = CVTDQ2PDrm
  { 610,	2,	1,	67,	0,	0, 0x1cc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #610 = CVTDQ2PDrr
  { 611,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0xb6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #611 = CVTDQ2PSrm
  { 612,	2,	1,	69,	0,	0, 0xb6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #612 = CVTDQ2PSrr
  { 613,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x1cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #613 = CVTPD2DQrm
  { 614,	2,	1,	71,	0,	0, 0x1cc000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #614 = CVTPD2DQrr
  { 615,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0xb5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #615 = CVTPD2PSrm
  { 616,	2,	1,	73,	0,	0, 0xb5000145ULL, NULL, NULL, OperandInfo50 },  // Inst #616 = CVTPD2PSrr
  { 617,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0xb7000146ULL, NULL, NULL, OperandInfo49 },  // Inst #617 = CVTPS2DQrm
  { 618,	2,	1,	75,	0,	0, 0xb7000145ULL, NULL, NULL, OperandInfo50 },  // Inst #618 = CVTPS2DQrr
  { 619,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0xb4000106ULL, NULL, NULL, OperandInfo49 },  // Inst #619 = CVTPS2PDrm
  { 620,	2,	1,	73,	0,	0, 0xb4000105ULL, NULL, NULL, OperandInfo50 },  // Inst #620 = CVTPS2PDrr
  { 621,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x5a002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #621 = CVTSD2SI64rm
  { 622,	2,	1,	77,	0,	0, 0x5a002b05ULL, NULL, NULL, OperandInfo96 },  // Inst #622 = CVTSD2SI64rr
  { 623,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x5a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #623 = CVTSD2SIrm
  { 624,	2,	1,	77,	0,	0, 0x5a000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #624 = CVTSD2SIrr
  { 625,	6,	1,	78,	0,	0|(1<<MCID::MayLoad), 0xb4000b06ULL, NULL, NULL, OperandInfo98 },  // Inst #625 = CVTSD2SSrm
  { 626,	2,	1,	79,	0,	0, 0xb4000b05ULL, NULL, NULL, OperandInfo99 },  // Inst #626 = CVTSD2SSrr
  { 627,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo100 },  // Inst #627 = CVTSI2SD64rm
  { 628,	2,	1,	81,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo101 },  // Inst #628 = CVTSI2SD64rr
  { 629,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #629 = CVTSI2SDrm
  { 630,	2,	1,	81,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo102 },  // Inst #630 = CVTSI2SDrr
  { 631,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo98 },  // Inst #631 = CVTSI2SS64rm
  { 632,	2,	1,	81,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo103 },  // Inst #632 = CVTSI2SS64rr
  { 633,	6,	1,	80,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #633 = CVTSI2SSrm
  { 634,	2,	1,	81,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo104 },  // Inst #634 = CVTSI2SSrr
  { 635,	6,	1,	78,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #635 = CVTSS2SDrm
  { 636,	2,	1,	79,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo105 },  // Inst #636 = CVTSS2SDrr
  { 637,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x5a002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #637 = CVTSS2SI64rm
  { 638,	2,	1,	83,	0,	0, 0x5a002c05ULL, NULL, NULL, OperandInfo96 },  // Inst #638 = CVTSS2SI64rr
  { 639,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x5a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #639 = CVTSS2SIrm
  { 640,	2,	1,	85,	0,	0, 0x5a000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #640 = CVTSS2SIrr
  { 641,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x1cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #641 = CVTTPD2DQrm
  { 642,	2,	1,	71,	0,	0, 0x1cd000145ULL, NULL, NULL, OperandInfo50 },  // Inst #642 = CVTTPD2DQrr
  { 643,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0xb6000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #643 = CVTTPS2DQrm
  { 644,	2,	1,	75,	0,	0, 0xb6000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #644 = CVTTPS2DQrr
  { 645,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #645 = CVTTSD2SI64rm
  { 646,	2,	1,	77,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo106 },  // Inst #646 = CVTTSD2SI64rr
  { 647,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #647 = CVTTSD2SIrm
  { 648,	2,	1,	77,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo107 },  // Inst #648 = CVTTSD2SIrr
  { 649,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #649 = CVTTSS2SI64rm
  { 650,	2,	1,	83,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo108 },  // Inst #650 = CVTTSS2SI64rr
  { 651,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #651 = CVTTSS2SIrm
  { 652,	2,	1,	85,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #652 = CVTTSS2SIrr
  { 653,	0,	0,	0,	0,	0, 0x132000041ULL, ImplicitList3, ImplicitList24, 0 },  // Inst #653 = CWD
  { 654,	0,	0,	0,	0,	0, 0x130000001ULL, ImplicitList3, ImplicitList4, 0 },  // Inst #654 = CWDE
  { 655,	0,	0,	86,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4e000001ULL, NULL, NULL, 0 },  // Inst #655 = DAA
  { 656,	0,	0,	87,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x5e000001ULL, NULL, NULL, 0 },  // Inst #656 = DAS
  { 657,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xcc000001ULL, NULL, NULL, 0 },  // Inst #657 = DATA16_PREFIX
  { 658,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #658 = DEC16m
  { 659,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000042ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #659 = DEC16r
  { 660,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #660 = DEC32m
  { 661,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x90000002ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #661 = DEC32r
  { 662,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000059ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #662 = DEC64_16m
  { 663,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000051ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #663 = DEC64_16r
  { 664,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #664 = DEC64_32m
  { 665,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000011ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #665 = DEC64_32r
  { 666,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #666 = DEC64m
  { 667,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002011ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #667 = DEC64r
  { 668,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #668 = DEC8m
  { 669,	2,	1,	89,	0,	0, 0x1fc000011ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #669 = DEC8r
  { 670,	5,	0,	90,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005eULL, ImplicitList24, ImplicitList25, OperandInfo40 },  // Inst #670 = DIV16m
  { 671,	1,	0,	91,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000056ULL, ImplicitList24, ImplicitList25, OperandInfo112 },  // Inst #671 = DIV16r
  { 672,	5,	0,	92,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001eULL, ImplicitList17, ImplicitList21, OperandInfo40 },  // Inst #672 = DIV32m
  { 673,	1,	0,	93,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000016ULL, ImplicitList17, ImplicitList21, OperandInfo71 },  // Inst #673 = DIV32r
  { 674,	5,	0,	94,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201eULL, ImplicitList23, ImplicitList19, OperandInfo40 },  // Inst #674 = DIV64m
  { 675,	1,	0,	95,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002016ULL, ImplicitList23, ImplicitList19, OperandInfo73 },  // Inst #675 = DIV64r
  { 676,	5,	0,	96,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001eULL, ImplicitList3, ImplicitList26, OperandInfo40 },  // Inst #676 = DIV8m
  { 677,	1,	0,	97,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000016ULL, ImplicitList3, ImplicitList26, OperandInfo113 },  // Inst #677 = DIV8r
  { 678,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xbd000146ULL, NULL, NULL, OperandInfo34 },  // Inst #678 = DIVPDrm
  { 679,	3,	1,	99,	0,	0, 0xbd000145ULL, NULL, NULL, OperandInfo35 },  // Inst #679 = DIVPDrr
  { 680,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xbc800106ULL, NULL, NULL, OperandInfo34 },  // Inst #680 = DIVPSrm
  { 681,	3,	1,	100,	0,	0, 0xbc800105ULL, NULL, NULL, OperandInfo35 },  // Inst #681 = DIVPSrr
  { 682,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #682 = DIVR_F32m
  { 683,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #683 = DIVR_F64m
  { 684,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #684 = DIVR_FI16m
  { 685,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #685 = DIVR_FI32m
  { 686,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #686 = DIVR_FPrST0
  { 687,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #687 = DIVR_FST0r
  { 688,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #688 = DIVR_Fp32m
  { 689,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #689 = DIVR_Fp64m
  { 690,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #690 = DIVR_Fp64m32
  { 691,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #691 = DIVR_Fp80m32
  { 692,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #692 = DIVR_Fp80m64
  { 693,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #693 = DIVR_FpI16m32
  { 694,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #694 = DIVR_FpI16m64
  { 695,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #695 = DIVR_FpI16m80
  { 696,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #696 = DIVR_FpI32m32
  { 697,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #697 = DIVR_FpI32m64
  { 698,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #698 = DIVR_FpI32m80
  { 699,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #699 = DIVR_FrST0
  { 700,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #700 = DIVSDrm
  { 701,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #701 = DIVSDrm_Int
  { 702,	3,	1,	102,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #702 = DIVSDrr
  { 703,	3,	1,	102,	0,	0, 0xbc000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #703 = DIVSDrr_Int
  { 704,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #704 = DIVSSrm
  { 705,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0xbc000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #705 = DIVSSrm_Int
  { 706,	3,	1,	103,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #706 = DIVSSrr
  { 707,	3,	1,	103,	0,	0, 0xbc000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #707 = DIVSSrr_Int
  { 708,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #708 = DIV_F32m
  { 709,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #709 = DIV_F64m
  { 710,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #710 = DIV_FI16m
  { 711,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001eULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #711 = DIV_FI32m
  { 712,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #712 = DIV_FPrST0
  { 713,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #713 = DIV_FST0r
  { 714,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #714 = DIV_Fp32
  { 715,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #715 = DIV_Fp32m
  { 716,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #716 = DIV_Fp64
  { 717,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #717 = DIV_Fp64m
  { 718,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #718 = DIV_Fp64m32
  { 719,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #719 = DIV_Fp80
  { 720,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #720 = DIV_Fp80m32
  { 721,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #721 = DIV_Fp80m64
  { 722,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #722 = DIV_FpI16m32
  { 723,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #723 = DIV_FpI16m64
  { 724,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #724 = DIV_FpI16m80
  { 725,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #725 = DIV_FpI32m32
  { 726,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #726 = DIV_FpI32m64
  { 727,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #727 = DIV_FpI32m80
  { 728,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #728 = DIV_FrST0
  { 729,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x83004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #729 = DPPDrmi
  { 730,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x83004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #730 = DPPDrri
  { 731,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x80804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #731 = DPPSrmi
  { 732,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x80804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #732 = DPPSrri
  { 733,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x7c000001ULL, NULL, NULL, 0 },  // Inst #733 = DS_PREFIX
  { 734,	1,	0,	104,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo71 },  // Inst #734 = EH_RETURN
  { 735,	1,	0,	104,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x186000001ULL, NULL, NULL, OperandInfo73 },  // Inst #735 = EH_RETURN64
  { 736,	5,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #736 = EH_SjLj_LongJmp32
  { 737,	5,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo40 },  // Inst #737 = EH_SjLj_LongJmp64
  { 738,	6,	1,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #738 = EH_SjLj_SetJmp32
  { 739,	6,	1,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo12 },  // Inst #739 = EH_SjLj_SetJmp64
  { 740,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo72 },  // Inst #740 = EH_SjLj_Setup
  { 741,	2,	0,	106,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19000c02bULL, NULL, NULL, OperandInfo48 },  // Inst #741 = ENTER
  { 742,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4c000001ULL, NULL, NULL, 0 },  // Inst #742 = ES_PREFIX
  { 743,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2e804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #743 = EXTRACTPSmr
  { 744,	3,	1,	0,	0,	0, 0x2e804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #744 = EXTRACTPSrr
  { 745,	3,	1,	0,	0,	0, 0xf2000145ULL, NULL, NULL, OperandInfo35 },  // Inst #745 = EXTRQ
  { 746,	4,	1,	0,	0,	0, 0xf0004150ULL, NULL, NULL, OperandInfo116 },  // Inst #746 = EXTRQI
  { 747,	0,	0,	107,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000401ULL, NULL, NULL, 0 },  // Inst #747 = F2XM1
  { 748,	2,	0,	108,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13400c06cULL, ImplicitList7, NULL, OperandInfo48 },  // Inst #748 = FARCALL16i
  { 749,	5,	0,	109,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005bULL, ImplicitList7, NULL, OperandInfo40 },  // Inst #749 = FARCALL16m
  { 750,	2,	0,	108,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x13401402cULL, ImplicitList7, NULL, OperandInfo48 },  // Inst #750 = FARCALL32i
  { 751,	5,	0,	109,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001bULL, ImplicitList7, NULL, OperandInfo40 },  // Inst #751 = FARCALL32m
  { 752,	5,	0,	110,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201bULL, ImplicitList9, NULL, OperandInfo40 },  // Inst #752 = FARCALL64
  { 753,	2,	0,	111,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d400c06cULL, NULL, NULL, OperandInfo48 },  // Inst #753 = FARJMP16i
  { 754,	5,	0,	112,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00005dULL, NULL, NULL, OperandInfo40 },  // Inst #754 = FARJMP16m
  { 755,	2,	0,	111,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d401402cULL, NULL, NULL, OperandInfo48 },  // Inst #755 = FARJMP32i
  { 756,	5,	0,	112,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001dULL, NULL, NULL, OperandInfo40 },  // Inst #756 = FARJMP32m
  { 757,	5,	0,	113,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00201dULL, NULL, NULL, OperandInfo40 },  // Inst #757 = FARJMP64
  { 758,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001cULL, NULL, NULL, OperandInfo40 },  // Inst #758 = FBLDm
  { 759,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1be00001eULL, NULL, NULL, OperandInfo40 },  // Inst #759 = FBSTPm
  { 760,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001aULL, NULL, NULL, OperandInfo40 },  // Inst #760 = FCOM32m
  { 761,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001aULL, NULL, NULL, OperandInfo40 },  // Inst #761 = FCOM64m
  { 762,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b000001bULL, NULL, NULL, OperandInfo40 },  // Inst #762 = FCOMP32m
  { 763,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b800001bULL, NULL, NULL, OperandInfo40 },  // Inst #763 = FCOMP64m
  { 764,	0,	0,	114,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b2000901ULL, NULL, NULL, 0 },  // Inst #764 = FCOMPP
  { 765,	0,	0,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000401ULL, NULL, NULL, 0 },  // Inst #765 = FDECSTP
  { 766,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1c000101ULL, NULL, NULL, 0 },  // Inst #766 = FEMMS
  { 767,	1,	0,	116,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000802ULL, NULL, NULL, OperandInfo41 },  // Inst #767 = FFREE
  { 768,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001aULL, NULL, NULL, OperandInfo40 },  // Inst #768 = FICOM16m
  { 769,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001aULL, NULL, NULL, OperandInfo40 },  // Inst #769 = FICOM32m
  { 770,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1bc00001bULL, NULL, NULL, OperandInfo40 },  // Inst #770 = FICOMP16m
  { 771,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b400001bULL, NULL, NULL, OperandInfo40 },  // Inst #771 = FICOMP32m
  { 772,	0,	0,	115,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000401ULL, NULL, NULL, 0 },  // Inst #772 = FINCSTP
  { 773,	5,	0,	117,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b200001dULL, NULL, NULL, OperandInfo40 },  // Inst #773 = FLDCW16m
  { 774,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001cULL, NULL, NULL, OperandInfo40 },  // Inst #774 = FLDENVm
  { 775,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d4000401ULL, NULL, NULL, 0 },  // Inst #775 = FLDL2E
  { 776,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000401ULL, NULL, NULL, 0 },  // Inst #776 = FLDL2T
  { 777,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000401ULL, NULL, NULL, 0 },  // Inst #777 = FLDLG2
  { 778,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000401ULL, NULL, NULL, 0 },  // Inst #778 = FLDLN2
  { 779,	0,	0,	118,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d6000401ULL, NULL, NULL, 0 },  // Inst #779 = FLDPI
  { 780,	0,	0,	119,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4000601ULL, NULL, ImplicitList1, 0 },  // Inst #780 = FNCLEX
  { 781,	0,	0,	120,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c6000601ULL, NULL, ImplicitList1, 0 },  // Inst #781 = FNINIT
  { 782,	0,	0,	121,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000401ULL, NULL, NULL, 0 },  // Inst #782 = FNOP
  { 783,	5,	0,	122,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001fULL, NULL, NULL, OperandInfo40 },  // Inst #783 = FNSTCW16m
  { 784,	0,	0,	123,	0,	0, 0x1c0000a01ULL, ImplicitList1, ImplicitList3, 0 },  // Inst #784 = FNSTSW16r
  { 785,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001fULL, NULL, NULL, OperandInfo40 },  // Inst #785 = FNSTSWm
  { 786,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #786 = FP32_TO_INT16_IN_MEM
  { 787,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #787 = FP32_TO_INT32_IN_MEM
  { 788,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo117 },  // Inst #788 = FP32_TO_INT64_IN_MEM
  { 789,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #789 = FP64_TO_INT16_IN_MEM
  { 790,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #790 = FP64_TO_INT32_IN_MEM
  { 791,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo118 },  // Inst #791 = FP64_TO_INT64_IN_MEM
  { 792,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #792 = FP80_TO_INT16_IN_MEM
  { 793,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #793 = FP80_TO_INT32_IN_MEM
  { 794,	6,	0,	0,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo119 },  // Inst #794 = FP80_TO_INT64_IN_MEM
  { 795,	0,	0,	124,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000401ULL, NULL, NULL, 0 },  // Inst #795 = FPATAN
  { 796,	0,	0,	125,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f0000401ULL, NULL, NULL, 0 },  // Inst #796 = FPREM
  { 797,	0,	0,	126,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ea000401ULL, NULL, NULL, 0 },  // Inst #797 = FPREM1
  { 798,	0,	0,	127,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000401ULL, NULL, NULL, 0 },  // Inst #798 = FPTAN
  { 799,	0,	0,	128,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f8000401ULL, NULL, NULL, 0 },  // Inst #799 = FRNDINT
  { 800,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001cULL, NULL, NULL, OperandInfo40 },  // Inst #800 = FRSTORm
  { 801,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ba00001eULL, NULL, NULL, OperandInfo40 },  // Inst #801 = FSAVEm
  { 802,	0,	0,	129,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000401ULL, NULL, NULL, 0 },  // Inst #802 = FSCALE
  { 803,	0,	0,	130,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000401ULL, NULL, NULL, 0 },  // Inst #803 = FSINCOS
  { 804,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b200001eULL, NULL, NULL, OperandInfo40 },  // Inst #804 = FSTENVm
  { 805,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc8000001ULL, NULL, NULL, 0 },  // Inst #805 = FS_PREFIX
  { 806,	0,	0,	131,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca000401ULL, NULL, NULL, 0 },  // Inst #806 = FXAM
  { 807,	5,	0,	132,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000119ULL, NULL, NULL, OperandInfo40 },  // Inst #807 = FXRSTOR
  { 808,	5,	0,	132,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002119ULL, NULL, NULL, OperandInfo40 },  // Inst #808 = FXRSTOR64
  { 809,	5,	1,	133,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000118ULL, NULL, NULL, OperandInfo40 },  // Inst #809 = FXSAVE
  { 810,	5,	1,	133,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c002118ULL, NULL, NULL, OperandInfo40 },  // Inst #810 = FXSAVE64
  { 811,	0,	0,	134,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000401ULL, NULL, NULL, 0 },  // Inst #811 = FXTRACT
  { 812,	0,	0,	135,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e2000401ULL, NULL, NULL, 0 },  // Inst #812 = FYL2X
  { 813,	0,	0,	136,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000401ULL, NULL, NULL, 0 },  // Inst #813 = FYL2XP1
  { 814,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe0000ULL, NULL, NULL, OperandInfo120 },  // Inst #814 = FpPOP_RETVAL
  { 815,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xab000146ULL, NULL, NULL, OperandInfo36 },  // Inst #815 = FsANDNPDrm
  { 816,	3,	1,	138,	0,	0, 0xab000145ULL, NULL, NULL, OperandInfo37 },  // Inst #816 = FsANDNPDrr
  { 817,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa800106ULL, NULL, NULL, OperandInfo38 },  // Inst #817 = FsANDNPSrm
  { 818,	3,	1,	138,	0,	0, 0xaa800105ULL, NULL, NULL, OperandInfo39 },  // Inst #818 = FsANDNPSrr
  { 819,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xa9000146ULL, NULL, NULL, OperandInfo36 },  // Inst #819 = FsANDPDrm
  { 820,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xa9000145ULL, NULL, NULL, OperandInfo37 },  // Inst #820 = FsANDPDrr
  { 821,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xa8800106ULL, NULL, NULL, OperandInfo38 },  // Inst #821 = FsANDPSrm
  { 822,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xa8800105ULL, NULL, NULL, OperandInfo39 },  // Inst #822 = FsANDPSrr
  { 823,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo121 },  // Inst #823 = FsFLD0SD
  { 824,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo122 },  // Inst #824 = FsFLD0SS
  { 825,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo100 },  // Inst #825 = FsMOVAPDrm
  { 826,	2,	1,	140,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo123 },  // Inst #826 = FsMOVAPDrr
  { 827,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo98 },  // Inst #827 = FsMOVAPSrm
  { 828,	2,	1,	140,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo124 },  // Inst #828 = FsMOVAPSrr
  { 829,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo36 },  // Inst #829 = FsORPDrm
  { 830,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo37 },  // Inst #830 = FsORPDrr
  { 831,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo38 },  // Inst #831 = FsORPSrm
  { 832,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo39 },  // Inst #832 = FsORPSrr
  { 833,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo100 },  // Inst #833 = FsVMOVAPDrm
  { 834,	2,	1,	140,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo123 },  // Inst #834 = FsVMOVAPDrr
  { 835,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo98 },  // Inst #835 = FsVMOVAPSrm
  { 836,	2,	1,	140,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo124 },  // Inst #836 = FsVMOVAPSrr
  { 837,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo36 },  // Inst #837 = FsXORPDrm
  { 838,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo37 },  // Inst #838 = FsXORPDrr
  { 839,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo38 },  // Inst #839 = FsXORPSrm
  { 840,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo39 },  // Inst #840 = FsXORPSrr
  { 841,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xca000001ULL, NULL, NULL, 0 },  // Inst #841 = GS_PREFIX
  { 842,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xf9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #842 = HADDPDrm
  { 843,	3,	1,	142,	0,	0, 0xf9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #843 = HADDPDrr
  { 844,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xf8800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #844 = HADDPSrm
  { 845,	3,	1,	142,	0,	0, 0xf8800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #845 = HADDPSrr
  { 846,	0,	0,	143,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e8000001ULL, NULL, NULL, 0 },  // Inst #846 = HLT
  { 847,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xfb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #847 = HSUBPDrm
  { 848,	3,	1,	142,	0,	0, 0xfb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #848 = HSUBPDrr
  { 849,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xfa800b06ULL, NULL, NULL, OperandInfo34 },  // Inst #849 = HSUBPSrm
  { 850,	3,	1,	142,	0,	0, 0xfa800b05ULL, NULL, NULL, OperandInfo35 },  // Inst #850 = HSUBPSrr
  { 851,	5,	0,	144,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00005fULL, ImplicitList24, ImplicitList25, OperandInfo40 },  // Inst #851 = IDIV16m
  { 852,	1,	0,	145,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000057ULL, ImplicitList24, ImplicitList25, OperandInfo112 },  // Inst #852 = IDIV16r
  { 853,	5,	0,	146,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00001fULL, ImplicitList17, ImplicitList21, OperandInfo40 },  // Inst #853 = IDIV32m
  { 854,	1,	0,	147,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee000017ULL, ImplicitList17, ImplicitList21, OperandInfo71 },  // Inst #854 = IDIV32r
  { 855,	5,	0,	148,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ee00201fULL, ImplicitList23, ImplicitList19, OperandInfo40 },  // Inst #855 = IDIV64m
  { 856,	1,	0,	149,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ee002017ULL, ImplicitList23, ImplicitList19, OperandInfo73 },  // Inst #856 = IDIV64r
  { 857,	5,	0,	150,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ec00001fULL, ImplicitList3, ImplicitList26, OperandInfo40 },  // Inst #857 = IDIV8m
  { 858,	1,	0,	151,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ec000017ULL, ImplicitList3, ImplicitList26, OperandInfo113 },  // Inst #858 = IDIV8r
  { 859,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #859 = ILD_F16m
  { 860,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b6000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #860 = ILD_F32m
  { 861,	5,	0,	152,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1be00001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #861 = ILD_F64m
  { 862,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #862 = ILD_Fp16m32
  { 863,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #863 = ILD_Fp16m64
  { 864,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #864 = ILD_Fp16m80
  { 865,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #865 = ILD_Fp32m32
  { 866,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #866 = ILD_Fp32m64
  { 867,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #867 = ILD_Fp32m80
  { 868,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #868 = ILD_Fp64m32
  { 869,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #869 = ILD_Fp64m64
  { 870,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #870 = ILD_Fp64m80
  { 871,	5,	0,	153,	0,	0|(1<<MCID::MayLoad), 0x1ee00005dULL, ImplicitList3, ImplicitList25, OperandInfo40 },  // Inst #871 = IMUL16m
  { 872,	1,	0,	154,	0,	0, 0x1ee000055ULL, ImplicitList3, ImplicitList25, OperandInfo112 },  // Inst #872 = IMUL16r
  { 873,	7,	1,	155,	0,	0|(1<<MCID::MayLoad), 0x15e000146ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #873 = IMUL16rm
  { 874,	7,	1,	156,	0,	0|(1<<MCID::MayLoad), 0xd200c046ULL, NULL, ImplicitList2, OperandInfo128 },  // Inst #874 = IMUL16rmi
  { 875,	7,	1,	156,	0,	0|(1<<MCID::MayLoad), 0xd6004046ULL, NULL, ImplicitList2, OperandInfo128 },  // Inst #875 = IMUL16rmi8
  { 876,	3,	1,	154,	0,	0|(1<<MCID::Commutable), 0x15e000145ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #876 = IMUL16rr
  { 877,	3,	1,	157,	0,	0, 0xd200c045ULL, NULL, ImplicitList2, OperandInfo129 },  // Inst #877 = IMUL16rri
  { 878,	3,	1,	157,	0,	0, 0xd6004045ULL, NULL, ImplicitList2, OperandInfo129 },  // Inst #878 = IMUL16rri8
  { 879,	5,	0,	158,	0,	0|(1<<MCID::MayLoad), 0x1ee00001dULL, ImplicitList4, ImplicitList21, OperandInfo40 },  // Inst #879 = IMUL32m
  { 880,	1,	0,	159,	0,	0, 0x1ee000015ULL, ImplicitList4, ImplicitList21, OperandInfo71 },  // Inst #880 = IMUL32r
  { 881,	7,	1,	160,	0,	0|(1<<MCID::MayLoad), 0x15e000106ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #881 = IMUL32rm
  { 882,	7,	1,	161,	0,	0|(1<<MCID::MayLoad), 0xd2014006ULL, NULL, ImplicitList2, OperandInfo130 },  // Inst #882 = IMUL32rmi
  { 883,	7,	1,	161,	0,	0|(1<<MCID::MayLoad), 0xd6004006ULL, NULL, ImplicitList2, OperandInfo130 },  // Inst #883 = IMUL32rmi8
  { 884,	3,	1,	159,	0,	0|(1<<MCID::Commutable), 0x15e000105ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #884 = IMUL32rr
  { 885,	3,	1,	162,	0,	0, 0xd2014005ULL, NULL, ImplicitList2, OperandInfo131 },  // Inst #885 = IMUL32rri
  { 886,	3,	1,	162,	0,	0, 0xd6004005ULL, NULL, ImplicitList2, OperandInfo131 },  // Inst #886 = IMUL32rri8
  { 887,	5,	0,	163,	0,	0|(1<<MCID::MayLoad), 0x1ee00201dULL, ImplicitList5, ImplicitList19, OperandInfo40 },  // Inst #887 = IMUL64m
  { 888,	1,	0,	164,	0,	0, 0x1ee002015ULL, ImplicitList5, ImplicitList19, OperandInfo73 },  // Inst #888 = IMUL64r
  { 889,	7,	1,	165,	0,	0|(1<<MCID::MayLoad), 0x15e002106ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #889 = IMUL64rm
  { 890,	7,	1,	166,	0,	0|(1<<MCID::MayLoad), 0xd2016006ULL, NULL, ImplicitList2, OperandInfo132 },  // Inst #890 = IMUL64rmi32
  { 891,	7,	1,	166,	0,	0|(1<<MCID::MayLoad), 0xd6006006ULL, NULL, ImplicitList2, OperandInfo132 },  // Inst #891 = IMUL64rmi8
  { 892,	3,	1,	164,	0,	0|(1<<MCID::Commutable), 0x15e002105ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #892 = IMUL64rr
  { 893,	3,	1,	167,	0,	0, 0xd2016005ULL, NULL, ImplicitList2, OperandInfo133 },  // Inst #893 = IMUL64rri32
  { 894,	3,	1,	167,	0,	0, 0xd6006005ULL, NULL, ImplicitList2, OperandInfo133 },  // Inst #894 = IMUL64rri8
  { 895,	5,	0,	168,	0,	0|(1<<MCID::MayLoad), 0x1ec00001dULL, ImplicitList6, ImplicitList26, OperandInfo40 },  // Inst #895 = IMUL8m
  { 896,	1,	0,	169,	0,	0, 0x1ec000015ULL, ImplicitList6, ImplicitList26, OperandInfo113 },  // Inst #896 = IMUL8r
  { 897,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000041ULL, NULL, NULL, 0 },  // Inst #897 = IN16
  { 898,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004041ULL, NULL, ImplicitList3, OperandInfo2 },  // Inst #898 = IN16ri
  { 899,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000041ULL, ImplicitList27, ImplicitList3, 0 },  // Inst #899 = IN16rr
  { 900,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xda000001ULL, NULL, NULL, 0 },  // Inst #900 = IN32
  { 901,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ca004001ULL, NULL, ImplicitList4, OperandInfo2 },  // Inst #901 = IN32ri
  { 902,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1da000001ULL, ImplicitList27, ImplicitList4, 0 },  // Inst #902 = IN32rr
  { 903,	0,	0,	170,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xd8000001ULL, NULL, NULL, 0 },  // Inst #903 = IN8
  { 904,	1,	0,	171,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8004001ULL, NULL, ImplicitList6, OperandInfo2 },  // Inst #904 = IN8ri
  { 905,	0,	0,	172,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d8000001ULL, ImplicitList27, ImplicitList6, 0 },  // Inst #905 = IN8rr
  { 906,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #906 = INC16m
  { 907,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000042ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #907 = INC16r
  { 908,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #908 = INC32m
  { 909,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x80000002ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #909 = INC32r
  { 910,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000058ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #910 = INC64_16m
  { 911,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000050ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #911 = INC64_16r
  { 912,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe000018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #912 = INC64_32m
  { 913,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe000010ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #913 = INC64_32r
  { 914,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fe002018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #914 = INC64m
  { 915,	2,	1,	89,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1fe002010ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #915 = INC64r
  { 916,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1fc000018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #916 = INC8m
  { 917,	2,	1,	89,	0,	0, 0x1fc000010ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #917 = INC8r
  { 918,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #918 = INSERTPSrm
  { 919,	4,	1,	0,	0,	0, 0x42804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #919 = INSERTPSrr
  { 920,	3,	1,	0,	0,	0, 0xf2000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #920 = INSERTQ
  { 921,	5,	1,	0,	0,	0, 0xf0004b05ULL, NULL, NULL, OperandInfo134 },  // Inst #921 = INSERTQI
  { 922,	1,	0,	173,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x19a004001ULL, NULL, NULL, OperandInfo2 },  // Inst #922 = INT
  { 923,	0,	0,	174,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x198000001ULL, NULL, NULL, 0 },  // Inst #923 = INT3
  { 924,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19c000001ULL, ImplicitList2, NULL, 0 },  // Inst #924 = INTO
  { 925,	0,	0,	175,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10000101ULL, NULL, NULL, 0 },  // Inst #925 = INVD
  { 926,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #926 = INVEPT32
  { 927,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x100000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #927 = INVEPT64
  { 928,	5,	0,	176,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011fULL, NULL, NULL, OperandInfo40 },  // Inst #928 = INVLPG
  { 929,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013bULL, ImplicitList28, NULL, 0 },  // Inst #929 = INVLPGA32
  { 930,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013bULL, ImplicitList29, NULL, 0 },  // Inst #930 = INVLPGA64
  { 931,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #931 = INVPCID32
  { 932,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x104000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #932 = INVPCID64
  { 933,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo12 },  // Inst #933 = INVVPID32
  { 934,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x102000d46ULL, NULL, NULL, OperandInfo13 },  // Inst #934 = INVVPID64
  { 935,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000041ULL, NULL, NULL, 0 },  // Inst #935 = IRET16
  { 936,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e000001ULL, NULL, NULL, 0 },  // Inst #936 = IRET32
  { 937,	0,	0,	177,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x19e002001ULL, NULL, NULL, 0 },  // Inst #937 = IRET64
  { 938,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #938 = ISTT_FP16m
  { 939,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b6000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #939 = ISTT_FP32m
  { 940,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #940 = ISTT_FP64m
  { 941,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #941 = ISTT_Fp16m32
  { 942,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #942 = ISTT_Fp16m64
  { 943,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #943 = ISTT_Fp16m80
  { 944,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #944 = ISTT_Fp32m32
  { 945,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #945 = ISTT_Fp32m64
  { 946,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #946 = ISTT_Fp32m80
  { 947,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #947 = ISTT_Fp64m32
  { 948,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #948 = ISTT_Fp64m64
  { 949,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #949 = ISTT_Fp64m80
  { 950,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #950 = IST_F16m
  { 951,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #951 = IST_F32m
  { 952,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #952 = IST_FP16m
  { 953,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #953 = IST_FP32m
  { 954,	5,	0,	179,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1be00001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #954 = IST_FP64m
  { 955,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #955 = IST_Fp16m32
  { 956,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #956 = IST_Fp16m64
  { 957,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #957 = IST_Fp16m80
  { 958,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #958 = IST_Fp32m32
  { 959,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #959 = IST_Fp32m64
  { 960,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #960 = IST_Fp32m80
  { 961,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #961 = IST_Fp64m32
  { 962,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #962 = IST_Fp64m64
  { 963,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #963 = IST_Fp64m80
  { 964,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004b06ULL, NULL, NULL, OperandInfo64 },  // Inst #964 = Int_CMPSDrm
  { 965,	4,	1,	17,	0,	0, 0x184004b05ULL, NULL, NULL, OperandInfo65 },  // Inst #965 = Int_CMPSDrr
  { 966,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x184004c06ULL, NULL, NULL, OperandInfo64 },  // Inst #966 = Int_CMPSSrm
  { 967,	4,	1,	17,	0,	0, 0x184004c05ULL, NULL, NULL, OperandInfo65 },  // Inst #967 = Int_CMPSSrr
  { 968,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5f000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #968 = Int_COMISDrm
  { 969,	2,	0,	63,	0,	0, 0x5f000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #969 = Int_COMISDrr
  { 970,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5e800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #970 = Int_COMISSrm
  { 971,	2,	0,	63,	0,	0, 0x5e800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #971 = Int_COMISSrr
  { 972,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xb4000b05ULL, NULL, NULL, OperandInfo34 },  // Inst #972 = Int_CVTSD2SSrm
  { 973,	3,	1,	79,	0,	0, 0xb4000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #973 = Int_CVTSD2SSrr
  { 974,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54002b06ULL, NULL, NULL, OperandInfo34 },  // Inst #974 = Int_CVTSI2SD64rm
  { 975,	3,	1,	81,	0,	0, 0x54002b05ULL, NULL, NULL, OperandInfo135 },  // Inst #975 = Int_CVTSI2SD64rr
  { 976,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #976 = Int_CVTSI2SDrm
  { 977,	3,	1,	81,	0,	0, 0x54000b05ULL, NULL, NULL, OperandInfo136 },  // Inst #977 = Int_CVTSI2SDrr
  { 978,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54002c06ULL, NULL, NULL, OperandInfo34 },  // Inst #978 = Int_CVTSI2SS64rm
  { 979,	3,	1,	81,	0,	0, 0x54002c05ULL, NULL, NULL, OperandInfo135 },  // Inst #979 = Int_CVTSI2SS64rr
  { 980,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0x54000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #980 = Int_CVTSI2SSrm
  { 981,	3,	1,	81,	0,	0, 0x54000c05ULL, NULL, NULL, OperandInfo136 },  // Inst #981 = Int_CVTSI2SSrr
  { 982,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xb4000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #982 = Int_CVTSS2SDrm
  { 983,	3,	1,	79,	0,	0, 0xb4000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #983 = Int_CVTSS2SDrr
  { 984,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58002b06ULL, NULL, NULL, OperandInfo13 },  // Inst #984 = Int_CVTTSD2SI64rm
  { 985,	2,	1,	77,	0,	0, 0x58002b05ULL, NULL, NULL, OperandInfo96 },  // Inst #985 = Int_CVTTSD2SI64rr
  { 986,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x58000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #986 = Int_CVTTSD2SIrm
  { 987,	2,	1,	77,	0,	0, 0x58000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #987 = Int_CVTTSD2SIrr
  { 988,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x58002c06ULL, NULL, NULL, OperandInfo13 },  // Inst #988 = Int_CVTTSS2SI64rm
  { 989,	2,	1,	83,	0,	0, 0x58002c05ULL, NULL, NULL, OperandInfo96 },  // Inst #989 = Int_CVTTSS2SI64rr
  { 990,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x58000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #990 = Int_CVTTSS2SIrm
  { 991,	2,	1,	85,	0,	0, 0x58000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #991 = Int_CVTTSS2SIrr
  { 992,	0,	0,	182,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #992 = Int_MemBarrier
  { 993,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5d000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #993 = Int_UCOMISDrm
  { 994,	2,	0,	63,	0,	0, 0x5d000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #994 = Int_UCOMISDrr
  { 995,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #995 = Int_UCOMISSrm
  { 996,	2,	0,	63,	0,	0, 0x5c800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #996 = Int_UCOMISSrr
  { 997,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb84004b06ULL, NULL, NULL, OperandInfo137 },  // Inst #997 = Int_VCMPSDrm
  { 998,	4,	1,	17,	0,	0, 0xb84004b05ULL, NULL, NULL, OperandInfo85 },  // Inst #998 = Int_VCMPSDrr
  { 999,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb84004c06ULL, NULL, NULL, OperandInfo137 },  // Inst #999 = Int_VCMPSSrm
  { 1000,	4,	1,	17,	0,	0, 0xb84004c05ULL, NULL, NULL, OperandInfo85 },  // Inst #1000 = Int_VCMPSSrr
  { 1001,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25f000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #1001 = Int_VCOMISDrm
  { 1002,	2,	0,	63,	0,	0, 0x25f000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #1002 = Int_VCOMISDrr
  { 1003,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25e800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #1003 = Int_VCOMISSrm
  { 1004,	2,	0,	63,	0,	0, 0x25e800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #1004 = Int_VCOMISSrr
  { 1005,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xab4000b05ULL, NULL, NULL, OperandInfo138 },  // Inst #1005 = Int_VCVTSD2SSrm
  { 1006,	3,	1,	79,	0,	0, 0xab4000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #1006 = Int_VCVTSD2SSrr
  { 1007,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xe54000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #1007 = Int_VCVTSI2SD64rm
  { 1008,	3,	1,	81,	0,	0, 0xe54000b05ULL, NULL, NULL, OperandInfo140 },  // Inst #1008 = Int_VCVTSI2SD64rr
  { 1009,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xa54000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #1009 = Int_VCVTSI2SDrm
  { 1010,	3,	1,	81,	0,	0, 0xa54000b05ULL, NULL, NULL, OperandInfo141 },  // Inst #1010 = Int_VCVTSI2SDrr
  { 1011,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xe54000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1011 = Int_VCVTSI2SS64rm
  { 1012,	3,	1,	81,	0,	0, 0xe54000c05ULL, NULL, NULL, OperandInfo140 },  // Inst #1012 = Int_VCVTSI2SS64rr
  { 1013,	7,	1,	181,	0,	0|(1<<MCID::MayLoad), 0xa54000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1013 = Int_VCVTSI2SSrm
  { 1014,	3,	1,	81,	0,	0, 0xa54000c05ULL, NULL, NULL, OperandInfo141 },  // Inst #1014 = Int_VCVTSI2SSrr
  { 1015,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0xab4000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #1015 = Int_VCVTSS2SDrm
  { 1016,	3,	1,	79,	0,	0, 0xab4000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #1016 = Int_VCVTSS2SDrr
  { 1017,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #1017 = Int_VCVTTSD2SI64rm
  { 1018,	2,	1,	77,	0,	0, 0x658000b05ULL, NULL, NULL, OperandInfo96 },  // Inst #1018 = Int_VCVTTSD2SI64rr
  { 1019,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #1019 = Int_VCVTTSD2SIrm
  { 1020,	2,	1,	77,	0,	0, 0x258000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #1020 = Int_VCVTTSD2SIrr
  { 1021,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #1021 = Int_VCVTTSS2SI64rm
  { 1022,	2,	1,	83,	0,	0, 0x658000c05ULL, NULL, NULL, OperandInfo96 },  // Inst #1022 = Int_VCVTTSS2SI64rr
  { 1023,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #1023 = Int_VCVTTSS2SIrm
  { 1024,	2,	1,	85,	0,	0, 0x258000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #1024 = Int_VCVTTSS2SIrr
  { 1025,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25d000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #1025 = Int_VUCOMISDrm
  { 1026,	2,	0,	63,	0,	0, 0x25d000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #1026 = Int_VUCOMISDrr
  { 1027,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x25c800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #1027 = Int_VUCOMISSrm
  { 1028,	2,	0,	63,	0,	0, 0x25c800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #1028 = Int_VUCOMISSrr
  { 1029,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe6008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1029 = JAE_1
  { 1030,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x106018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1030 = JAE_4
  { 1031,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xee008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1031 = JA_1
  { 1032,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10e018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1032 = JA_4
  { 1033,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xec008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1033 = JBE_1
  { 1034,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10c018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1034 = JBE_4
  { 1035,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe4008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1035 = JB_1
  { 1036,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x104018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1036 = JB_4
  { 1037,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList30, NULL, OperandInfo72 },  // Inst #1037 = JCXZ
  { 1038,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList31, NULL, OperandInfo72 },  // Inst #1038 = JECXZ_32
  { 1039,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008081ULL, ImplicitList31, NULL, OperandInfo72 },  // Inst #1039 = JECXZ_64
  { 1040,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe8008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1040 = JE_1
  { 1041,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x108018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1041 = JE_4
  { 1042,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfa008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1042 = JGE_1
  { 1043,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11a018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1043 = JGE_4
  { 1044,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfe008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1044 = JG_1
  { 1045,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11e018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1045 = JG_4
  { 1046,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xfc008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1046 = JLE_1
  { 1047,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x11c018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1047 = JLE_4
  { 1048,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf8008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1048 = JL_1
  { 1049,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x118018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1049 = JL_4
  { 1050,	5,	0,	185,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo40 },  // Inst #1050 = JMP32m
  { 1051,	1,	0,	186,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo71 },  // Inst #1051 = JMP32r
  { 1052,	5,	0,	185,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x1fe00001cULL, NULL, NULL, OperandInfo40 },  // Inst #1052 = JMP64m
  { 1053,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d2000001ULL, NULL, NULL, OperandInfo72 },  // Inst #1053 = JMP64pcrel32
  { 1054,	1,	0,	186,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1fe000014ULL, NULL, NULL, OperandInfo73 },  // Inst #1054 = JMP64r
  { 1055,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d6008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1055 = JMP_1
  { 1056,	1,	0,	187,	0,	0|(1<<MCID::Branch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x1d2018001ULL, NULL, NULL, OperandInfo72 },  // Inst #1056 = JMP_4
  { 1057,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xea008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1057 = JNE_1
  { 1058,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x10a018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1058 = JNE_4
  { 1059,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe2008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1059 = JNO_1
  { 1060,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x102018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1060 = JNO_4
  { 1061,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf6008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1061 = JNP_1
  { 1062,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x116018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1062 = JNP_4
  { 1063,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf2008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1063 = JNS_1
  { 1064,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x112018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1064 = JNS_4
  { 1065,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe0008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1065 = JO_1
  { 1066,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x100018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1066 = JO_4
  { 1067,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf4008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1067 = JP_1
  { 1068,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x114018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1068 = JP_4
  { 1069,	1,	0,	184,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1c6008001ULL, ImplicitList32, NULL, OperandInfo72 },  // Inst #1069 = JRCXZ
  { 1070,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xf0008001ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1070 = JS_1
  { 1071,	1,	0,	183,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator), 0x110018101ULL, ImplicitList2, NULL, OperandInfo72 },  // Inst #1071 = JS_4
  { 1072,	0,	0,	188,	0,	0, 0x13e000001ULL, ImplicitList2, ImplicitList33, 0 },  // Inst #1072 = LAHF
  { 1073,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1073 = LAR16rm
  { 1074,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000145ULL, NULL, NULL, OperandInfo57 },  // Inst #1074 = LAR16rr
  { 1075,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1075 = LAR32rm
  { 1076,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4000105ULL, NULL, NULL, OperandInfo32 },  // Inst #1076 = LAR32rr
  { 1077,	6,	1,	189,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1077 = LAR64rm
  { 1078,	2,	1,	190,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x4002105ULL, NULL, NULL, OperandInfo142 },  // Inst #1078 = LAR64rr
  { 1079,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100144ULL, ImplicitList3, ImplicitList34, OperandInfo16 },  // Inst #1079 = LCMPXCHG16
  { 1080,	5,	0,	192,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e102119ULL, ImplicitList18, ImplicitList19, OperandInfo40 },  // Inst #1080 = LCMPXCHG16B
  { 1081,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162100104ULL, ImplicitList4, ImplicitList35, OperandInfo20 },  // Inst #1081 = LCMPXCHG32
  { 1082,	6,	0,	191,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x162102104ULL, ImplicitList5, ImplicitList36, OperandInfo24 },  // Inst #1082 = LCMPXCHG64
  { 1083,	6,	0,	193,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x160100104ULL, ImplicitList6, ImplicitList37, OperandInfo28 },  // Inst #1083 = LCMPXCHG8
  { 1084,	5,	0,	194,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18e100119ULL, ImplicitList20, ImplicitList21, OperandInfo40 },  // Inst #1084 = LCMPXCHG8B
  { 1085,	6,	1,	195,	0,	0|(1<<MCID::MayLoad), 0x1e1000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #1085 = LDDQUrm
  { 1086,	5,	0,	196,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011aULL, NULL, NULL, OperandInfo40 },  // Inst #1086 = LDMXCSR
  { 1087,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1087 = LDS16rm
  { 1088,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1088 = LDS32rm
  { 1089,	0,	0,	198,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000401ULL, NULL, ImplicitList1, 0 },  // Inst #1089 = LD_F0
  { 1090,	0,	0,	199,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000401ULL, NULL, ImplicitList1, 0 },  // Inst #1090 = LD_F1
  { 1091,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b2000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1091 = LD_F32m
  { 1092,	5,	0,	200,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1ba000018ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1092 = LD_F64m
  { 1093,	5,	0,	201,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b600001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1093 = LD_F80m
  { 1094,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo143 },  // Inst #1094 = LD_Fp032
  { 1095,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo144 },  // Inst #1095 = LD_Fp064
  { 1096,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #1096 = LD_Fp080
  { 1097,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo143 },  // Inst #1097 = LD_Fp132
  { 1098,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo144 },  // Inst #1098 = LD_Fp164
  { 1099,	1,	1,	0,	0,	0|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #1099 = LD_Fp180
  { 1100,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo125 },  // Inst #1100 = LD_Fp32m
  { 1101,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #1101 = LD_Fp32m64
  { 1102,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1102 = LD_Fp32m80
  { 1103,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000ULL, NULL, ImplicitList1, OperandInfo126 },  // Inst #1103 = LD_Fp64m
  { 1104,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1104 = LD_Fp64m80
  { 1105,	6,	1,	0,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x20000ULL, NULL, ImplicitList1, OperandInfo127 },  // Inst #1105 = LD_Fp80m
  { 1106,	1,	0,	202,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000402ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #1106 = LD_Frr
  { 1107,	6,	1,	203,	0,	0, 0x11a000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1107 = LEA16r
  { 1108,	6,	1,	204,	0,	0|(1<<MCID::Rematerializable), 0x11a000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1108 = LEA32r
  { 1109,	6,	1,	204,	0,	0, 0x11a000006ULL, NULL, NULL, OperandInfo145 },  // Inst #1109 = LEA64_32r
  { 1110,	6,	1,	204,	0,	0|(1<<MCID::Rematerializable), 0x11a002006ULL, NULL, NULL, OperandInfo146 },  // Inst #1110 = LEA64r
  { 1111,	0,	0,	205,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList38, ImplicitList38, 0 },  // Inst #1111 = LEAVE
  { 1112,	0,	0,	205,	0,	0|(1<<MCID::MayLoad), 0x192000001ULL, ImplicitList39, ImplicitList39, 0 },  // Inst #1112 = LEAVE64
  { 1113,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1113 = LES16rm
  { 1114,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x188000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1114 = LES32rm
  { 1115,	0,	0,	206,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000129ULL, NULL, NULL, 0 },  // Inst #1115 = LFENCE
  { 1116,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1116 = LFS16rm
  { 1117,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1117 = LFS32rm
  { 1118,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x168002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1118 = LFS64rm
  { 1119,	5,	0,	207,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015aULL, NULL, NULL, OperandInfo40 },  // Inst #1119 = LGDT16m
  { 1120,	5,	0,	207,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011aULL, NULL, NULL, OperandInfo40 },  // Inst #1120 = LGDTm
  { 1121,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1121 = LGS16rm
  { 1122,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1122 = LGS32rm
  { 1123,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16a002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1123 = LGS64rm
  { 1124,	5,	0,	208,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200015bULL, NULL, NULL, OperandInfo40 },  // Inst #1124 = LIDT16m
  { 1125,	5,	0,	208,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011bULL, NULL, NULL, OperandInfo40 },  // Inst #1125 = LIDTm
  { 1126,	5,	0,	209,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11aULL, NULL, NULL, OperandInfo40 },  // Inst #1126 = LLDT16m
  { 1127,	1,	0,	210,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x112ULL, NULL, NULL, OperandInfo112 },  // Inst #1127 = LLDT16r
  { 1128,	5,	0,	211,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011eULL, NULL, NULL, OperandInfo40 },  // Inst #1128 = LMSW16m
  { 1129,	1,	0,	212,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000116ULL, NULL, NULL, OperandInfo112 },  // Inst #1129 = LMSW16r
  { 1130,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1130 = LOCK_ADD16mi
  { 1131,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1131 = LOCK_ADD16mi8
  { 1132,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1132 = LOCK_ADD16mr
  { 1133,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1133 = LOCK_ADD32mi
  { 1134,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1134 = LOCK_ADD32mi8
  { 1135,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1135 = LOCK_ADD32mr
  { 1136,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1136 = LOCK_ADD64mi32
  { 1137,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1137 = LOCK_ADD64mi8
  { 1138,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2102004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1138 = LOCK_ADD64mr
  { 1139,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1139 = LOCK_ADD8mi
  { 1140,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1140 = LOCK_ADD8mr
  { 1141,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1141 = LOCK_AND16mi
  { 1142,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1142 = LOCK_AND16mi8
  { 1143,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1143 = LOCK_AND16mr
  { 1144,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1144 = LOCK_AND32mi
  { 1145,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1145 = LOCK_AND32mi8
  { 1146,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1146 = LOCK_AND32mr
  { 1147,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1147 = LOCK_AND64mi32
  { 1148,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1148 = LOCK_AND64mi8
  { 1149,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42102004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1149 = LOCK_AND64mr
  { 1150,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1150 = LOCK_AND8mi
  { 1151,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x40100004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1151 = LOCK_AND8mr
  { 1152,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100059ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1152 = LOCK_DEC16m
  { 1153,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1153 = LOCK_DEC32m
  { 1154,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1154 = LOCK_DEC64m
  { 1155,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1155 = LOCK_DEC8m
  { 1156,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100058ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1156 = LOCK_INC16m
  { 1157,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe100018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1157 = LOCK_INC32m
  { 1158,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fe102018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1158 = LOCK_INC64m
  { 1159,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1fc100018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1159 = LOCK_INC8m
  { 1160,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c059ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1160 = LOCK_OR16mi
  { 1161,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104059ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1161 = LOCK_OR16mi8
  { 1162,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1162 = LOCK_OR16mr
  { 1163,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102114019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1163 = LOCK_OR32mi
  { 1164,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106104019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1164 = LOCK_OR32mi8
  { 1165,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1165 = LOCK_OR32mr
  { 1166,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x102116019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1166 = LOCK_OR64mi32
  { 1167,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x106106019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1167 = LOCK_OR64mi8
  { 1168,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x12102004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1168 = LOCK_OR64mr
  { 1169,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x100104019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1169 = LOCK_OR8mi
  { 1170,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10100004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1170 = LOCK_OR8mr
  { 1171,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e0000001ULL, NULL, NULL, 0 },  // Inst #1171 = LOCK_PREFIX
  { 1172,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1172 = LOCK_SUB16mi
  { 1173,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1173 = LOCK_SUB16mi8
  { 1174,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1174 = LOCK_SUB16mr
  { 1175,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1175 = LOCK_SUB32mi
  { 1176,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1176 = LOCK_SUB32mi8
  { 1177,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1177 = LOCK_SUB32mr
  { 1178,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1178 = LOCK_SUB64mi32
  { 1179,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1179 = LOCK_SUB64mi8
  { 1180,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x52102004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1180 = LOCK_SUB64mr
  { 1181,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1181 = LOCK_SUB8mi
  { 1182,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x50100004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1182 = LOCK_SUB8mr
  { 1183,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10210c05eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1183 = LOCK_XOR16mi
  { 1184,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610405eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1184 = LOCK_XOR16mi8
  { 1185,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1185 = LOCK_XOR16mr
  { 1186,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1186 = LOCK_XOR32mi
  { 1187,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1187 = LOCK_XOR32mi8
  { 1188,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1188 = LOCK_XOR32mr
  { 1189,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10211601eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1189 = LOCK_XOR64mi32
  { 1190,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10610601eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1190 = LOCK_XOR64mi8
  { 1191,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x62102004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1191 = LOCK_XOR64mr
  { 1192,	6,	0,	213,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x10010401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1192 = LOCK_XOR8mi
  { 1193,	6,	0,	214,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x60100004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1193 = LOCK_XOR8mr
  { 1194,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x158000001ULL, NULL, NULL, 0 },  // Inst #1194 = LODSB
  { 1195,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000001ULL, NULL, NULL, 0 },  // Inst #1195 = LODSD
  { 1196,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a002001ULL, NULL, NULL, 0 },  // Inst #1196 = LODSQ
  { 1197,	0,	0,	215,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15a000041ULL, NULL, NULL, 0 },  // Inst #1197 = LODSW
  { 1198,	1,	0,	216,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c4008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1198 = LOOP
  { 1199,	1,	0,	217,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c2008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1199 = LOOPE
  { 1200,	1,	0,	218,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0008001ULL, NULL, NULL, OperandInfo72 },  // Inst #1200 = LOOPNE
  { 1201,	1,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #1201 = LRETI
  { 1202,	1,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1940ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #1202 = LRETIW
  { 1203,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0001ULL, NULL, NULL, 0 },  // Inst #1203 = LRETL
  { 1204,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e2001ULL, NULL, NULL, 0 },  // Inst #1204 = LRETQ
  { 1205,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1960e0041ULL, NULL, NULL, 0 },  // Inst #1205 = LRETW
  { 1206,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1206 = LSL16rm
  { 1207,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000145ULL, NULL, NULL, OperandInfo57 },  // Inst #1207 = LSL16rr
  { 1208,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1208 = LSL32rm
  { 1209,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6000105ULL, NULL, NULL, OperandInfo32 },  // Inst #1209 = LSL32rr
  { 1210,	6,	1,	220,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1210 = LSL64rm
  { 1211,	2,	1,	221,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6002105ULL, NULL, NULL, OperandInfo33 },  // Inst #1211 = LSL64rr
  { 1212,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1212 = LSS16rm
  { 1213,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1213 = LSS32rm
  { 1214,	6,	1,	197,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x164002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1214 = LSS64rm
  { 1215,	5,	0,	222,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11bULL, NULL, NULL, OperandInfo40 },  // Inst #1215 = LTRm
  { 1216,	1,	0,	222,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x113ULL, NULL, NULL, OperandInfo112 },  // Inst #1216 = LTRr
  { 1217,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100146ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #1217 = LXADD16
  { 1218,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182100106ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #1218 = LXADD32
  { 1219,	7,	1,	223,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182102106ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #1219 = LXADD64
  { 1220,	7,	1,	224,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180100106ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #1220 = LXADD8
  { 1221,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a000c46ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #1221 = LZCNT16rm
  { 1222,	2,	1,	0,	0,	0, 0x17a000c45ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #1222 = LZCNT16rr
  { 1223,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a000c06ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #1223 = LZCNT32rm
  { 1224,	2,	1,	0,	0,	0, 0x17a000c05ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #1224 = LZCNT32rr
  { 1225,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x17a002c06ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #1225 = LZCNT64rm
  { 1226,	2,	1,	0,	0,	0, 0x17a002c05ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #1226 = LZCNT64rr
  { 1227,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList40, NULL, OperandInfo50 },  // Inst #1227 = MASKMOVDQU
  { 1228,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ef800145ULL, ImplicitList41, NULL, OperandInfo50 },  // Inst #1228 = MASKMOVDQU64
  { 1229,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1229 = MAXCPDrm
  { 1230,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xbf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1230 = MAXCPDrr
  { 1231,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1231 = MAXCPSrm
  { 1232,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xbe800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1232 = MAXCPSrr
  { 1233,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1233 = MAXCSDrm
  { 1234,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xbe000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1234 = MAXCSDrr
  { 1235,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1235 = MAXCSSrm
  { 1236,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xbe000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1236 = MAXCSSrr
  { 1237,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1237 = MAXPDrm
  { 1238,	3,	1,	11,	0,	0, 0xbf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1238 = MAXPDrr
  { 1239,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xbe800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1239 = MAXPSrm
  { 1240,	3,	1,	13,	0,	0, 0xbe800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1240 = MAXPSrr
  { 1241,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1241 = MAXSDrm
  { 1242,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xbe000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1242 = MAXSDrm_Int
  { 1243,	3,	1,	15,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1243 = MAXSDrr
  { 1244,	3,	1,	15,	0,	0, 0xbe000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1244 = MAXSDrr_Int
  { 1245,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1245 = MAXSSrm
  { 1246,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xbe000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1246 = MAXSSrm_Int
  { 1247,	3,	1,	17,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1247 = MAXSSrr
  { 1248,	3,	1,	17,	0,	0, 0xbe000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1248 = MAXSSrr_Int
  { 1249,	0,	0,	226,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00012aULL, NULL, NULL, 0 },  // Inst #1249 = MFENCE
  { 1250,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1250 = MINCPDrm
  { 1251,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xbb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1251 = MINCPDrr
  { 1252,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1252 = MINCPSrm
  { 1253,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xba800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1253 = MINCPSrr
  { 1254,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1254 = MINCSDrm
  { 1255,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0xba000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1255 = MINCSDrr
  { 1256,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1256 = MINCSSrm
  { 1257,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0xba000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1257 = MINCSSrr
  { 1258,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xbb000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1258 = MINPDrm
  { 1259,	3,	1,	11,	0,	0, 0xbb000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1259 = MINPDrr
  { 1260,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xba800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1260 = MINPSrm
  { 1261,	3,	1,	13,	0,	0, 0xba800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1261 = MINPSrr
  { 1262,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1262 = MINSDrm
  { 1263,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xba000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1263 = MINSDrm_Int
  { 1264,	3,	1,	15,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1264 = MINSDrr
  { 1265,	3,	1,	15,	0,	0, 0xba000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1265 = MINSDrr_Int
  { 1266,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1266 = MINSSrm
  { 1267,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xba000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1267 = MINSSrm_Int
  { 1268,	3,	1,	17,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1268 = MINSSrr
  { 1269,	3,	1,	17,	0,	0, 0xba000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1269 = MINSSrr_Int
  { 1270,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x5b000146ULL, NULL, NULL, OperandInfo147 },  // Inst #1270 = MMX_CVTPD2PIirm
  { 1271,	2,	1,	228,	0,	0, 0x5b000145ULL, NULL, NULL, OperandInfo148 },  // Inst #1271 = MMX_CVTPD2PIirr
  { 1272,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x55000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1272 = MMX_CVTPI2PDirm
  { 1273,	2,	1,	228,	0,	0, 0x55000145ULL, NULL, NULL, OperandInfo149 },  // Inst #1273 = MMX_CVTPI2PDirr
  { 1274,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x54800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1274 = MMX_CVTPI2PSirm
  { 1275,	3,	1,	0,	0,	0, 0x54800105ULL, NULL, NULL, OperandInfo150 },  // Inst #1275 = MMX_CVTPI2PSirr
  { 1276,	6,	1,	229,	0,	0|(1<<MCID::MayLoad), 0x5a800106ULL, NULL, NULL, OperandInfo147 },  // Inst #1276 = MMX_CVTPS2PIirm
  { 1277,	2,	1,	230,	0,	0, 0x5a800105ULL, NULL, NULL, OperandInfo148 },  // Inst #1277 = MMX_CVTPS2PIirr
  { 1278,	6,	1,	227,	0,	0|(1<<MCID::MayLoad), 0x59000146ULL, NULL, NULL, OperandInfo147 },  // Inst #1278 = MMX_CVTTPD2PIirm
  { 1279,	2,	1,	228,	0,	0, 0x59000145ULL, NULL, NULL, OperandInfo148 },  // Inst #1279 = MMX_CVTTPD2PIirr
  { 1280,	6,	1,	229,	0,	0|(1<<MCID::MayLoad), 0x58800106ULL, NULL, NULL, OperandInfo147 },  // Inst #1280 = MMX_CVTTPS2PIirm
  { 1281,	2,	1,	230,	0,	0, 0x58800105ULL, NULL, NULL, OperandInfo148 },  // Inst #1281 = MMX_CVTTPS2PIirr
  { 1282,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xee000101ULL, NULL, NULL, 0 },  // Inst #1282 = MMX_EMMS
  { 1283,	2,	0,	231,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList40, NULL, OperandInfo151 },  // Inst #1283 = MMX_MASKMOVQ
  { 1284,	2,	0,	231,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ee000105ULL, ImplicitList41, NULL, OperandInfo151 },  // Inst #1284 = MMX_MASKMOVQ64
  { 1285,	2,	1,	232,	0,	0|(1<<MCID::Bitcast), 0xfc002103ULL, NULL, NULL, OperandInfo152 },  // Inst #1285 = MMX_MOVD64from64rr
  { 1286,	2,	1,	232,	0,	0, 0xfc000103ULL, NULL, NULL, OperandInfo153 },  // Inst #1286 = MMX_MOVD64grr
  { 1287,	6,	0,	233,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xfc000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1287 = MMX_MOVD64mr
  { 1288,	6,	1,	234,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1288 = MMX_MOVD64rm
  { 1289,	2,	1,	235,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo155 },  // Inst #1289 = MMX_MOVD64rr
  { 1290,	2,	1,	235,	0,	0|(1<<MCID::Bitcast), 0xdc002105ULL, NULL, NULL, OperandInfo156 },  // Inst #1290 = MMX_MOVD64rrv164
  { 1291,	2,	1,	235,	0,	0, 0xdc002105ULL, NULL, NULL, OperandInfo156 },  // Inst #1291 = MMX_MOVD64to64rr
  { 1292,	2,	1,	236,	0,	0, 0x1ac004b05ULL, NULL, NULL, OperandInfo148 },  // Inst #1292 = MMX_MOVDQ2Qrr
  { 1293,	2,	1,	236,	0,	0, 0x1ac004b05ULL, NULL, NULL, OperandInfo157 },  // Inst #1293 = MMX_MOVFR642Qrr
  { 1294,	6,	0,	237,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ce000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1294 = MMX_MOVNTQmr
  { 1295,	2,	1,	238,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo149 },  // Inst #1295 = MMX_MOVQ2DQrr
  { 1296,	2,	1,	238,	0,	0, 0x1ac004c05ULL, NULL, NULL, OperandInfo158 },  // Inst #1296 = MMX_MOVQ2FR64rr
  { 1297,	6,	0,	239,	0,	0|(1<<MCID::MayStore), 0xfe000104ULL, NULL, NULL, OperandInfo154 },  // Inst #1297 = MMX_MOVQ64mr
  { 1298,	6,	1,	239,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0xde000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1298 = MMX_MOVQ64rm
  { 1299,	2,	1,	236,	0,	0, 0xde000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1299 = MMX_MOVQ64rr
  { 1300,	6,	1,	234,	0,	0|(1<<MCID::MayLoad), 0xdc000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1300 = MMX_MOVZDI2PDIrm
  { 1301,	2,	1,	235,	0,	0, 0xdc000105ULL, NULL, NULL, OperandInfo155 },  // Inst #1301 = MMX_MOVZDI2PDIrr
  { 1302,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x39800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1302 = MMX_PABSBrm64
  { 1303,	2,	1,	241,	0,	0, 0x39800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1303 = MMX_PABSBrr64
  { 1304,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x3d800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1304 = MMX_PABSDrm64
  { 1305,	2,	1,	241,	0,	0, 0x3d800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1305 = MMX_PABSDrr64
  { 1306,	6,	1,	240,	0,	0|(1<<MCID::MayLoad), 0x3b800d06ULL, NULL, NULL, OperandInfo147 },  // Inst #1306 = MMX_PABSWrm64
  { 1307,	2,	1,	241,	0,	0, 0x3b800d05ULL, NULL, NULL, OperandInfo151 },  // Inst #1307 = MMX_PABSWrr64
  { 1308,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xd6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1308 = MMX_PACKSSDWirm
  { 1309,	3,	1,	243,	0,	0, 0xd6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1309 = MMX_PACKSSDWirr
  { 1310,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xc6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1310 = MMX_PACKSSWBirm
  { 1311,	3,	1,	243,	0,	0, 0xc6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1311 = MMX_PACKSSWBirr
  { 1312,	7,	1,	242,	0,	0|(1<<MCID::MayLoad), 0xce000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1312 = MMX_PACKUSWBirm
  { 1313,	3,	1,	243,	0,	0, 0xce000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1313 = MMX_PACKUSWBirr
  { 1314,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1314 = MMX_PADDBirm
  { 1315,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1f8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1315 = MMX_PADDBirr
  { 1316,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1fc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1316 = MMX_PADDDirm
  { 1317,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1fc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1317 = MMX_PADDDirr
  { 1318,	7,	1,	245,	0,	0|(1<<MCID::MayLoad), 0x1a8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1318 = MMX_PADDQirm
  { 1319,	3,	1,	246,	0,	0|(1<<MCID::Commutable), 0x1a8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1319 = MMX_PADDQirr
  { 1320,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1320 = MMX_PADDSBirm
  { 1321,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1321 = MMX_PADDSBirr
  { 1322,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1da000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1322 = MMX_PADDSWirm
  { 1323,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1da000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1323 = MMX_PADDSWirr
  { 1324,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1324 = MMX_PADDUSBirm
  { 1325,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1325 = MMX_PADDUSBirr
  { 1326,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1ba000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1326 = MMX_PADDUSWirm
  { 1327,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1ba000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1327 = MMX_PADDUSWirr
  { 1328,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1fa000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1328 = MMX_PADDWirm
  { 1329,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1fa000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1329 = MMX_PADDWirr
  { 1330,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1f804e06ULL, NULL, NULL, OperandInfo161 },  // Inst #1330 = MMX_PALIGNR64irm
  { 1331,	4,	1,	0,	0,	0, 0x1f804e05ULL, NULL, NULL, OperandInfo162 },  // Inst #1331 = MMX_PALIGNR64irr
  { 1332,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1be000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1332 = MMX_PANDNirm
  { 1333,	3,	1,	241,	0,	0, 0x1be000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1333 = MMX_PANDNirr
  { 1334,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1334 = MMX_PANDirm
  { 1335,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1335 = MMX_PANDirr
  { 1336,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1c0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1336 = MMX_PAVGBirm
  { 1337,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1c0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1337 = MMX_PAVGBirr
  { 1338,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1c6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1338 = MMX_PAVGWirm
  { 1339,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1c6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1339 = MMX_PAVGWirr
  { 1340,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xe8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1340 = MMX_PCMPEQBirm
  { 1341,	3,	1,	241,	0,	0, 0xe8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1341 = MMX_PCMPEQBirr
  { 1342,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xec000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1342 = MMX_PCMPEQDirm
  { 1343,	3,	1,	241,	0,	0, 0xec000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1343 = MMX_PCMPEQDirr
  { 1344,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xea000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1344 = MMX_PCMPEQWirm
  { 1345,	3,	1,	241,	0,	0, 0xea000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1345 = MMX_PCMPEQWirr
  { 1346,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xc8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1346 = MMX_PCMPGTBirm
  { 1347,	3,	1,	241,	0,	0, 0xc8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1347 = MMX_PCMPGTBirr
  { 1348,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xcc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1348 = MMX_PCMPGTDirm
  { 1349,	3,	1,	241,	0,	0, 0xcc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1349 = MMX_PCMPGTDirr
  { 1350,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0xca000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1350 = MMX_PCMPGTWirm
  { 1351,	3,	1,	241,	0,	0, 0xca000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1351 = MMX_PCMPGTWirr
  { 1352,	3,	1,	249,	0,	0, 0x18a004105ULL, NULL, NULL, OperandInfo163 },  // Inst #1352 = MMX_PEXTRWirri
  { 1353,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0x7800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1353 = MMX_PHADDSWrm64
  { 1354,	3,	1,	251,	0,	0, 0x7800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1354 = MMX_PHADDSWrr64
  { 1355,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0x3800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1355 = MMX_PHADDWrm64
  { 1356,	3,	1,	251,	0,	0, 0x3800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1356 = MMX_PHADDWrr64
  { 1357,	7,	1,	252,	0,	0|(1<<MCID::MayLoad), 0x5800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1357 = MMX_PHADDrm64
  { 1358,	3,	1,	253,	0,	0, 0x5800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1358 = MMX_PHADDrr64
  { 1359,	7,	1,	252,	0,	0|(1<<MCID::MayLoad), 0xd800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1359 = MMX_PHSUBDrm64
  { 1360,	3,	1,	253,	0,	0, 0xd800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1360 = MMX_PHSUBDrr64
  { 1361,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0xf800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1361 = MMX_PHSUBSWrm64
  { 1362,	3,	1,	251,	0,	0, 0xf800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1362 = MMX_PHSUBSWrr64
  { 1363,	7,	1,	250,	0,	0|(1<<MCID::MayLoad), 0xb800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1363 = MMX_PHSUBWrm64
  { 1364,	3,	1,	251,	0,	0, 0xb800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1364 = MMX_PHSUBWrr64
  { 1365,	8,	1,	254,	0,	0|(1<<MCID::MayLoad), 0x188004106ULL, NULL, NULL, OperandInfo161 },  // Inst #1365 = MMX_PINSRWirmi
  { 1366,	4,	1,	255,	0,	0, 0x188004105ULL, NULL, NULL, OperandInfo164 },  // Inst #1366 = MMX_PINSRWirri
  { 1367,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x9800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1367 = MMX_PMADDUBSWrm64
  { 1368,	3,	1,	257,	0,	0, 0x9800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1368 = MMX_PMADDUBSWrr64
  { 1369,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1ea000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1369 = MMX_PMADDWDirm
  { 1370,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1ea000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1370 = MMX_PMADDWDirr
  { 1371,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1dc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1371 = MMX_PMAXSWirm
  { 1372,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1dc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1372 = MMX_PMAXSWirr
  { 1373,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1bc000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1373 = MMX_PMAXUBirm
  { 1374,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1bc000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1374 = MMX_PMAXUBirr
  { 1375,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1d4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1375 = MMX_PMINSWirm
  { 1376,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1d4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1376 = MMX_PMINSWirr
  { 1377,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x1b4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1377 = MMX_PMINUBirm
  { 1378,	3,	1,	248,	0,	0|(1<<MCID::Commutable), 0x1b4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1378 = MMX_PMINUBirr
  { 1379,	2,	1,	0,	0,	0, 0x1ae000105ULL, NULL, NULL, OperandInfo153 },  // Inst #1379 = MMX_PMOVMSKBrr
  { 1380,	7,	1,	256,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::Commutable), 0x17800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1380 = MMX_PMULHRSWrm64
  { 1381,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x17800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1381 = MMX_PMULHRSWrr64
  { 1382,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1c8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1382 = MMX_PMULHUWirm
  { 1383,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1c8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1383 = MMX_PMULHUWirr
  { 1384,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1ca000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1384 = MMX_PMULHWirm
  { 1385,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1ca000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1385 = MMX_PMULHWirr
  { 1386,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1aa000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1386 = MMX_PMULLWirm
  { 1387,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1aa000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1387 = MMX_PMULLWirr
  { 1388,	7,	1,	256,	0,	0|(1<<MCID::MayLoad), 0x1e8000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1388 = MMX_PMULUDQirm
  { 1389,	3,	1,	257,	0,	0|(1<<MCID::Commutable), 0x1e8000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1389 = MMX_PMULUDQirr
  { 1390,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1390 = MMX_PORirm
  { 1391,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1391 = MMX_PORirr
  { 1392,	7,	1,	258,	0,	0|(1<<MCID::MayLoad), 0x1ec000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1392 = MMX_PSADBWirm
  { 1393,	3,	1,	259,	0,	0|(1<<MCID::Commutable), 0x1ec000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1393 = MMX_PSADBWirr
  { 1394,	7,	1,	260,	0,	0|(1<<MCID::MayLoad), 0x1800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1394 = MMX_PSHUFBrm64
  { 1395,	3,	1,	261,	0,	0, 0x1800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1395 = MMX_PSHUFBrr64
  { 1396,	7,	1,	262,	0,	0|(1<<MCID::MayLoad), 0xe0004106ULL, NULL, NULL, OperandInfo165 },  // Inst #1396 = MMX_PSHUFWmi
  { 1397,	3,	1,	261,	0,	0, 0xe0004105ULL, NULL, NULL, OperandInfo166 },  // Inst #1397 = MMX_PSHUFWri
  { 1398,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x11800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1398 = MMX_PSIGNBrm64
  { 1399,	3,	1,	248,	0,	0, 0x11800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1399 = MMX_PSIGNBrr64
  { 1400,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x15800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1400 = MMX_PSIGNDrm64
  { 1401,	3,	1,	248,	0,	0, 0x15800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1401 = MMX_PSIGNDrr64
  { 1402,	7,	1,	247,	0,	0|(1<<MCID::MayLoad), 0x13800d06ULL, NULL, NULL, OperandInfo159 },  // Inst #1402 = MMX_PSIGNWrm64
  { 1403,	3,	1,	248,	0,	0, 0x13800d05ULL, NULL, NULL, OperandInfo160 },  // Inst #1403 = MMX_PSIGNWrr64
  { 1404,	3,	1,	263,	0,	0, 0xe4004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1404 = MMX_PSLLDri
  { 1405,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1405 = MMX_PSLLDrm
  { 1406,	3,	1,	265,	0,	0, 0x1e4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1406 = MMX_PSLLDrr
  { 1407,	3,	1,	263,	0,	0, 0xe6004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1407 = MMX_PSLLQri
  { 1408,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1408 = MMX_PSLLQrm
  { 1409,	3,	1,	265,	0,	0, 0x1e6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1409 = MMX_PSLLQrr
  { 1410,	3,	1,	263,	0,	0, 0xe2004116ULL, NULL, NULL, OperandInfo167 },  // Inst #1410 = MMX_PSLLWri
  { 1411,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1e2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1411 = MMX_PSLLWrm
  { 1412,	3,	1,	265,	0,	0, 0x1e2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1412 = MMX_PSLLWrr
  { 1413,	3,	1,	263,	0,	0, 0xe4004114ULL, NULL, NULL, OperandInfo167 },  // Inst #1413 = MMX_PSRADri
  { 1414,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1c4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1414 = MMX_PSRADrm
  { 1415,	3,	1,	265,	0,	0, 0x1c4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1415 = MMX_PSRADrr
  { 1416,	3,	1,	263,	0,	0, 0xe2004114ULL, NULL, NULL, OperandInfo167 },  // Inst #1416 = MMX_PSRAWri
  { 1417,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1c2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1417 = MMX_PSRAWrm
  { 1418,	3,	1,	265,	0,	0, 0x1c2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1418 = MMX_PSRAWrr
  { 1419,	3,	1,	263,	0,	0, 0xe4004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1419 = MMX_PSRLDri
  { 1420,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1420 = MMX_PSRLDrm
  { 1421,	3,	1,	265,	0,	0, 0x1a4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1421 = MMX_PSRLDrr
  { 1422,	3,	1,	263,	0,	0, 0xe6004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1422 = MMX_PSRLQri
  { 1423,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1423 = MMX_PSRLQrm
  { 1424,	3,	1,	265,	0,	0, 0x1a6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1424 = MMX_PSRLQrr
  { 1425,	3,	1,	263,	0,	0, 0xe2004112ULL, NULL, NULL, OperandInfo167 },  // Inst #1425 = MMX_PSRLWri
  { 1426,	7,	1,	264,	0,	0|(1<<MCID::MayLoad), 0x1a2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1426 = MMX_PSRLWrm
  { 1427,	3,	1,	265,	0,	0, 0x1a2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1427 = MMX_PSRLWrr
  { 1428,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1428 = MMX_PSUBBirm
  { 1429,	3,	1,	241,	0,	0, 0x1f0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1429 = MMX_PSUBBirr
  { 1430,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1430 = MMX_PSUBDirm
  { 1431,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1f4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1431 = MMX_PSUBDirr
  { 1432,	7,	1,	245,	0,	0|(1<<MCID::MayLoad), 0x1f6000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1432 = MMX_PSUBQirm
  { 1433,	3,	1,	246,	0,	0|(1<<MCID::Commutable), 0x1f6000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1433 = MMX_PSUBQirr
  { 1434,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1434 = MMX_PSUBSBirm
  { 1435,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1435 = MMX_PSUBSBirr
  { 1436,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1d2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1436 = MMX_PSUBSWirm
  { 1437,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1d2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1437 = MMX_PSUBSWirr
  { 1438,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1438 = MMX_PSUBUSBirm
  { 1439,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1439 = MMX_PSUBUSBirr
  { 1440,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1b2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1440 = MMX_PSUBUSWirm
  { 1441,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1b2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1441 = MMX_PSUBUSWirr
  { 1442,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1f2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1442 = MMX_PSUBWirm
  { 1443,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1f2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1443 = MMX_PSUBWirr
  { 1444,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1444 = MMX_PUNPCKHBWirm
  { 1445,	3,	1,	267,	0,	0, 0xd0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1445 = MMX_PUNPCKHBWirr
  { 1446,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1446 = MMX_PUNPCKHDQirm
  { 1447,	3,	1,	267,	0,	0, 0xd4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1447 = MMX_PUNPCKHDQirr
  { 1448,	7,	1,	266,	0,	0|(1<<MCID::MayLoad), 0xd2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1448 = MMX_PUNPCKHWDirm
  { 1449,	3,	1,	267,	0,	0, 0xd2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1449 = MMX_PUNPCKHWDirr
  { 1450,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc0000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1450 = MMX_PUNPCKLBWirm
  { 1451,	3,	1,	269,	0,	0, 0xc0000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1451 = MMX_PUNPCKLBWirr
  { 1452,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc4000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1452 = MMX_PUNPCKLDQirm
  { 1453,	3,	1,	269,	0,	0, 0xc4000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1453 = MMX_PUNPCKLDQirr
  { 1454,	7,	1,	268,	0,	0|(1<<MCID::MayLoad), 0xc2000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1454 = MMX_PUNPCKLWDirm
  { 1455,	3,	1,	269,	0,	0, 0xc2000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1455 = MMX_PUNPCKLWDirr
  { 1456,	7,	1,	244,	0,	0|(1<<MCID::MayLoad), 0x1de000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1456 = MMX_PXORirm
  { 1457,	3,	1,	241,	0,	0|(1<<MCID::Commutable), 0x1de000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1457 = MMX_PXORirr
  { 1458,	7,	0,	105,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo168 },  // Inst #1458 = MONITOR
  { 1459,	0,	0,	270,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000125ULL, ImplicitList42, NULL, 0 },  // Inst #1459 = MONITORrrr
  { 1460,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000f01ULL, ImplicitList43, ImplicitList44, 0 },  // Inst #1460 = MONTMUL
  { 1461,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1461 = MORESTACK_RET
  { 1462,	0,	0,	0,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, 0 },  // Inst #1462 = MORESTACK_RET_RESTORE_R10
  { 1463,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014041ULL, NULL, NULL, OperandInfo72 },  // Inst #1463 = MOV16ao16
  { 1464,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e00c058ULL, NULL, NULL, OperandInfo15 },  // Inst #1464 = MOV16mi
  { 1465,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112000044ULL, NULL, NULL, OperandInfo16 },  // Inst #1465 = MOV16mr
  { 1466,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000044ULL, NULL, NULL, OperandInfo169 },  // Inst #1466 = MOV16ms
  { 1467,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014041ULL, NULL, NULL, OperandInfo72 },  // Inst #1467 = MOV16o16a
  { 1468,	1,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000060ULL, NULL, ImplicitList2, OperandInfo112 },  // Inst #1468 = MOV16r0
  { 1469,	2,	1,	275,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17000c042ULL, NULL, NULL, OperandInfo68 },  // Inst #1469 = MOV16ri
  { 1470,	6,	1,	276,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000046ULL, NULL, NULL, OperandInfo11 },  // Inst #1470 = MOV16rm
  { 1471,	2,	1,	275,	0,	0, 0x112000043ULL, NULL, NULL, OperandInfo57 },  // Inst #1471 = MOV16rr
  { 1472,	2,	1,	275,	0,	0, 0x116000045ULL, NULL, NULL, OperandInfo57 },  // Inst #1472 = MOV16rr_REV
  { 1473,	2,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000043ULL, NULL, NULL, OperandInfo170 },  // Inst #1473 = MOV16rs
  { 1474,	6,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000046ULL, NULL, NULL, OperandInfo171 },  // Inst #1474 = MOV16sm
  { 1475,	2,	1,	279,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000045ULL, NULL, NULL, OperandInfo172 },  // Inst #1475 = MOV16sr
  { 1476,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x146014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1476 = MOV32ao32
  { 1477,	2,	1,	280,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo173 },  // Inst #1477 = MOV32cr
  { 1478,	2,	1,	281,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo174 },  // Inst #1478 = MOV32dr
  { 1479,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e014018ULL, NULL, NULL, OperandInfo15 },  // Inst #1479 = MOV32mi
  { 1480,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112000004ULL, NULL, NULL, OperandInfo20 },  // Inst #1480 = MOV32mr
  { 1481,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000004ULL, NULL, NULL, OperandInfo169 },  // Inst #1481 = MOV32ms
  { 1482,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1482 = MOV32o32a
  { 1483,	1,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000020ULL, NULL, ImplicitList2, OperandInfo71 },  // Inst #1483 = MOV32r0
  { 1484,	2,	1,	282,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo175 },  // Inst #1484 = MOV32rc
  { 1485,	2,	1,	283,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo176 },  // Inst #1485 = MOV32rd
  { 1486,	2,	1,	275,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo69 },  // Inst #1486 = MOV32ri
  { 1487,	6,	1,	276,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116000006ULL, NULL, NULL, OperandInfo12 },  // Inst #1487 = MOV32rm
  { 1488,	2,	1,	275,	0,	0, 0x112000003ULL, NULL, NULL, OperandInfo32 },  // Inst #1488 = MOV32rr
  { 1489,	2,	1,	275,	0,	0, 0x116000005ULL, NULL, NULL, OperandInfo32 },  // Inst #1489 = MOV32rr_REV
  { 1490,	2,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118000003ULL, NULL, NULL, OperandInfo177 },  // Inst #1490 = MOV32rs
  { 1491,	6,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000006ULL, NULL, NULL, OperandInfo171 },  // Inst #1491 = MOV32sm
  { 1492,	2,	1,	279,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c000005ULL, NULL, NULL, OperandInfo178 },  // Inst #1492 = MOV32sr
  { 1493,	2,	1,	280,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x44000105ULL, NULL, NULL, OperandInfo179 },  // Inst #1493 = MOV64cr
  { 1494,	2,	1,	281,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x46000105ULL, NULL, NULL, OperandInfo180 },  // Inst #1494 = MOV64dr
  { 1495,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18e016018ULL, NULL, NULL, OperandInfo15 },  // Inst #1495 = MOV64mi32
  { 1496,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x112002004ULL, NULL, NULL, OperandInfo24 },  // Inst #1496 = MOV64mr
  { 1497,	6,	1,	273,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002004ULL, NULL, NULL, OperandInfo169 },  // Inst #1497 = MOV64ms
  { 1498,	1,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x62000020ULL, NULL, ImplicitList2, OperandInfo73 },  // Inst #1498 = MOV64r0
  { 1499,	2,	1,	282,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x40000103ULL, NULL, NULL, OperandInfo181 },  // Inst #1499 = MOV64rc
  { 1500,	2,	1,	283,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42000103ULL, NULL, NULL, OperandInfo182 },  // Inst #1500 = MOV64rd
  { 1501,	2,	1,	275,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x17001e002ULL, NULL, NULL, OperandInfo70 },  // Inst #1501 = MOV64ri
  { 1502,	2,	1,	275,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x18e016010ULL, NULL, NULL, OperandInfo70 },  // Inst #1502 = MOV64ri32
  { 1503,	2,	1,	284,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x170014002ULL, NULL, NULL, OperandInfo70 },  // Inst #1503 = MOV64ri64i32
  { 1504,	6,	1,	276,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x116002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1504 = MOV64rm
  { 1505,	2,	1,	275,	0,	0, 0x112002003ULL, NULL, NULL, OperandInfo33 },  // Inst #1505 = MOV64rr
  { 1506,	2,	1,	275,	0,	0, 0x116002005ULL, NULL, NULL, OperandInfo33 },  // Inst #1506 = MOV64rr_REV
  { 1507,	2,	1,	277,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118002003ULL, NULL, NULL, OperandInfo183 },  // Inst #1507 = MOV64rs
  { 1508,	6,	1,	278,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002006ULL, NULL, NULL, OperandInfo171 },  // Inst #1508 = MOV64sm
  { 1509,	2,	1,	279,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11c002005ULL, NULL, NULL, OperandInfo184 },  // Inst #1509 = MOV64sr
  { 1510,	2,	1,	285,	0,	0, 0xdd002145ULL, NULL, NULL, OperandInfo185 },  // Inst #1510 = MOV64toPQIrr
  { 1511,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #1511 = MOV64toSDrm
  { 1512,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0xdd002145ULL, NULL, NULL, OperandInfo101 },  // Inst #1512 = MOV64toSDrr
  { 1513,	1,	1,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x144014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1513 = MOV8ao8
  { 1514,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x18c004018ULL, NULL, NULL, OperandInfo15 },  // Inst #1514 = MOV8mi
  { 1515,	6,	0,	272,	0,	0|(1<<MCID::MayStore), 0x110000004ULL, NULL, NULL, OperandInfo28 },  // Inst #1515 = MOV8mr
  { 1516,	6,	0,	272,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x110000004ULL, NULL, NULL, OperandInfo186 },  // Inst #1516 = MOV8mr_NOREX
  { 1517,	1,	0,	271,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140014001ULL, NULL, NULL, OperandInfo72 },  // Inst #1517 = MOV8o8a
  { 1518,	1,	1,	274,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x60000020ULL, NULL, ImplicitList2, OperandInfo113 },  // Inst #1518 = MOV8r0
  { 1519,	2,	1,	275,	0,	0|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x160004002ULL, NULL, NULL, OperandInfo87 },  // Inst #1519 = MOV8ri
  { 1520,	6,	1,	276,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo14 },  // Inst #1520 = MOV8rm
  { 1521,	6,	1,	276,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x114000006ULL, NULL, NULL, OperandInfo187 },  // Inst #1521 = MOV8rm_NOREX
  { 1522,	2,	1,	275,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo88 },  // Inst #1522 = MOV8rr
  { 1523,	2,	1,	275,	0,	0, 0x110000003ULL, NULL, NULL, OperandInfo188 },  // Inst #1523 = MOV8rr_NOREX
  { 1524,	2,	1,	275,	0,	0, 0x114000005ULL, NULL, NULL, OperandInfo88 },  // Inst #1524 = MOV8rr_REV
  { 1525,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x53000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1525 = MOVAPDmr
  { 1526,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x51000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1526 = MOVAPDrm
  { 1527,	2,	1,	140,	0,	0, 0x51000145ULL, NULL, NULL, OperandInfo50 },  // Inst #1527 = MOVAPDrr
  { 1528,	2,	1,	140,	0,	0, 0x53000143ULL, NULL, NULL, OperandInfo50 },  // Inst #1528 = MOVAPDrr_REV
  { 1529,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x52800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1529 = MOVAPSmr
  { 1530,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x50800106ULL, NULL, NULL, OperandInfo49 },  // Inst #1530 = MOVAPSrm
  { 1531,	2,	1,	140,	0,	0, 0x50800105ULL, NULL, NULL, OperandInfo50 },  // Inst #1531 = MOVAPSrr
  { 1532,	2,	1,	140,	0,	0, 0x52800103ULL, NULL, NULL, OperandInfo50 },  // Inst #1532 = MOVAPSrr_REV
  { 1533,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2000d44ULL, NULL, NULL, OperandInfo16 },  // Inst #1533 = MOVBE16mr
  { 1534,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0000d46ULL, NULL, NULL, OperandInfo11 },  // Inst #1534 = MOVBE16rm
  { 1535,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2000d04ULL, NULL, NULL, OperandInfo20 },  // Inst #1535 = MOVBE32mr
  { 1536,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0000d06ULL, NULL, NULL, OperandInfo12 },  // Inst #1536 = MOVBE32rm
  { 1537,	6,	0,	288,	0,	0|(1<<MCID::MayStore), 0x1e2002d04ULL, NULL, NULL, OperandInfo24 },  // Inst #1537 = MOVBE64mr
  { 1538,	6,	1,	289,	0,	0|(1<<MCID::MayLoad), 0x1e0002d06ULL, NULL, NULL, OperandInfo13 },  // Inst #1538 = MOVBE64rm
  { 1539,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x25000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #1539 = MOVDDUPrm
  { 1540,	2,	1,	291,	0,	0, 0x25000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #1540 = MOVDDUPrr
  { 1541,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1541 = MOVDI2PDIrm
  { 1542,	2,	1,	285,	0,	0, 0xdd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #1542 = MOVDI2PDIrr
  { 1543,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo98 },  // Inst #1543 = MOVDI2SSrm
  { 1544,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0xdd000145ULL, NULL, NULL, OperandInfo104 },  // Inst #1544 = MOVDI2SSrr
  { 1545,	6,	0,	287,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0xff800144ULL, NULL, NULL, OperandInfo189 },  // Inst #1545 = MOVDQAmr
  { 1546,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0xdf800146ULL, NULL, NULL, OperandInfo49 },  // Inst #1546 = MOVDQArm
  { 1547,	2,	1,	140,	0,	0, 0xdf800145ULL, NULL, NULL, OperandInfo50 },  // Inst #1547 = MOVDQArr
  { 1548,	2,	1,	140,	0,	0, 0xff800143ULL, NULL, NULL, OperandInfo50 },  // Inst #1548 = MOVDQArr_REV
  { 1549,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #1549 = MOVDQUmr
  { 1550,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0xdf800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1550 = MOVDQUrm
  { 1551,	2,	1,	294,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdf800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1551 = MOVDQUrr
  { 1552,	2,	1,	294,	0,	0, 0xff800c03ULL, NULL, NULL, OperandInfo50 },  // Inst #1552 = MOVDQUrr_REV
  { 1553,	3,	1,	291,	0,	0, 0x24800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1553 = MOVHLPSrr
  { 1554,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x2f000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1554 = MOVHPDmr
  { 1555,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x2d000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1555 = MOVHPDrm
  { 1556,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x2e800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1556 = MOVHPSmr
  { 1557,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x2c800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1557 = MOVHPSrm
  { 1558,	3,	1,	291,	0,	0, 0x2c800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1558 = MOVLHPSrr
  { 1559,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x27000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1559 = MOVLPDmr
  { 1560,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x25000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1560 = MOVLPDrm
  { 1561,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x26800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1561 = MOVLPSmr
  { 1562,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0x24800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1562 = MOVLPSrm
  { 1563,	6,	0,	297,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1563 = MOVLQ128mr
  { 1564,	2,	1,	298,	0,	0, 0xa1000145ULL, NULL, NULL, OperandInfo97 },  // Inst #1564 = MOVMSKPDrr32
  { 1565,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa1002145ULL, NULL, NULL, OperandInfo96 },  // Inst #1565 = MOVMSKPDrr64
  { 1566,	2,	1,	298,	0,	0, 0xa0800105ULL, NULL, NULL, OperandInfo97 },  // Inst #1566 = MOVMSKPSrr32
  { 1567,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa0802105ULL, NULL, NULL, OperandInfo96 },  // Inst #1567 = MOVMSKPSrr64
  { 1568,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x55800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1568 = MOVNTDQArm
  { 1569,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x1cf800144ULL, NULL, NULL, OperandInfo189 },  // Inst #1569 = MOVNTDQmr
  { 1570,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x186002104ULL, NULL, NULL, OperandInfo24 },  // Inst #1570 = MOVNTI_64mr
  { 1571,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x186000104ULL, NULL, NULL, OperandInfo20 },  // Inst #1571 = MOVNTImr
  { 1572,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x57000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1572 = MOVNTPDmr
  { 1573,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x56800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1573 = MOVNTPSmr
  { 1574,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x56000b04ULL, NULL, NULL, OperandInfo189 },  // Inst #1574 = MOVNTSD
  { 1575,	6,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x56000c04ULL, NULL, NULL, OperandInfo189 },  // Inst #1575 = MOVNTSS
  { 1576,	2,	1,	0,	0,	0|(1<<MCID::NotDuplicable), 0x1d0014000ULL, ImplicitList7, NULL, OperandInfo69 },  // Inst #1576 = MOVPC32r
  { 1577,	6,	0,	286,	0,	0|(1<<MCID::MayStore), 0xfd000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1577 = MOVPDI2DImr
  { 1578,	2,	1,	300,	0,	0, 0xfd000143ULL, NULL, NULL, OperandInfo97 },  // Inst #1578 = MOVPDI2DIrr
  { 1579,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x1ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1579 = MOVPQI2QImr
  { 1580,	2,	1,	300,	0,	0, 0xfd002143ULL, NULL, NULL, OperandInfo96 },  // Inst #1580 = MOVPQIto64rr
  { 1581,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1581 = MOVQI2PQIrm
  { 1582,	2,	1,	301,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xfc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1582 = MOVQxrxr
  { 1583,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x148000001ULL, ImplicitList45, ImplicitList46, 0 },  // Inst #1583 = MOVSB
  { 1584,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000001ULL, ImplicitList45, ImplicitList46, 0 },  // Inst #1584 = MOVSD
  { 1585,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x22000b04ULL, NULL, NULL, OperandInfo191 },  // Inst #1585 = MOVSDmr
  { 1586,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #1586 = MOVSDrm
  { 1587,	3,	1,	305,	0,	0, 0x20000b05ULL, NULL, NULL, OperandInfo192 },  // Inst #1587 = MOVSDrr
  { 1588,	3,	1,	305,	0,	0, 0x22000b03ULL, NULL, NULL, OperandInfo192 },  // Inst #1588 = MOVSDrr_REV
  { 1589,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0xfd002144ULL, NULL, NULL, OperandInfo191 },  // Inst #1589 = MOVSDto64mr
  { 1590,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0xfd002143ULL, NULL, NULL, OperandInfo106 },  // Inst #1590 = MOVSDto64rr
  { 1591,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x2c800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1591 = MOVSHDUPrm
  { 1592,	2,	1,	291,	0,	0, 0x2c800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1592 = MOVSHDUPrr
  { 1593,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x24800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1593 = MOVSLDUPrm
  { 1594,	2,	1,	291,	0,	0, 0x24800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1594 = MOVSLDUPrr
  { 1595,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a002001ULL, ImplicitList45, ImplicitList46, 0 },  // Inst #1595 = MOVSQ
  { 1596,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0xfd000144ULL, NULL, NULL, OperandInfo193 },  // Inst #1596 = MOVSS2DImr
  { 1597,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0xfd000143ULL, NULL, NULL, OperandInfo109 },  // Inst #1597 = MOVSS2DIrr
  { 1598,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x22000c04ULL, NULL, NULL, OperandInfo193 },  // Inst #1598 = MOVSSmr
  { 1599,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #1599 = MOVSSrm
  { 1600,	3,	1,	305,	0,	0, 0x20000c05ULL, NULL, NULL, OperandInfo194 },  // Inst #1600 = MOVSSrr
  { 1601,	3,	1,	305,	0,	0, 0x22000c03ULL, NULL, NULL, OperandInfo194 },  // Inst #1601 = MOVSSrr_REV
  { 1602,	0,	0,	302,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x14a000041ULL, ImplicitList45, ImplicitList46, 0 },  // Inst #1602 = MOVSW
  { 1603,	6,	1,	306,	0,	0|(1<<MCID::MayLoad), 0x17c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1603 = MOVSX16rm8
  { 1604,	2,	1,	307,	0,	0, 0x17c000145ULL, NULL, NULL, OperandInfo195 },  // Inst #1604 = MOVSX16rr8
  { 1605,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1605 = MOVSX32rm16
  { 1606,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1606 = MOVSX32rm8
  { 1607,	2,	1,	309,	0,	0, 0x17e000105ULL, NULL, NULL, OperandInfo196 },  // Inst #1607 = MOVSX32rr16
  { 1608,	2,	1,	309,	0,	0, 0x17c000105ULL, NULL, NULL, OperandInfo197 },  // Inst #1608 = MOVSX32rr8
  { 1609,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1609 = MOVSX64rm16
  { 1610,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0xc6002006ULL, NULL, NULL, OperandInfo13 },  // Inst #1610 = MOVSX64rm32
  { 1611,	6,	1,	308,	0,	0|(1<<MCID::MayLoad), 0x17c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1611 = MOVSX64rm8
  { 1612,	2,	1,	309,	0,	0, 0x17e002105ULL, NULL, NULL, OperandInfo198 },  // Inst #1612 = MOVSX64rr16
  { 1613,	2,	1,	309,	0,	0, 0xc6002005ULL, NULL, NULL, OperandInfo142 },  // Inst #1613 = MOVSX64rr32
  { 1614,	2,	1,	309,	0,	0, 0x17c002105ULL, NULL, NULL, OperandInfo199 },  // Inst #1614 = MOVSX64rr8
  { 1615,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x23000144ULL, NULL, NULL, OperandInfo189 },  // Inst #1615 = MOVUPDmr
  { 1616,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x21000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1616 = MOVUPDrm
  { 1617,	2,	1,	294,	0,	0, 0x21000145ULL, NULL, NULL, OperandInfo50 },  // Inst #1617 = MOVUPDrr
  { 1618,	2,	1,	294,	0,	0, 0x23000143ULL, NULL, NULL, OperandInfo50 },  // Inst #1618 = MOVUPDrr_REV
  { 1619,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x22800104ULL, NULL, NULL, OperandInfo189 },  // Inst #1619 = MOVUPSmr
  { 1620,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x20800106ULL, NULL, NULL, OperandInfo49 },  // Inst #1620 = MOVUPSrm
  { 1621,	2,	1,	294,	0,	0, 0x20800105ULL, NULL, NULL, OperandInfo50 },  // Inst #1621 = MOVUPSrr
  { 1622,	2,	1,	294,	0,	0, 0x22800103ULL, NULL, NULL, OperandInfo50 },  // Inst #1622 = MOVUPSrr_REV
  { 1623,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xdd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #1623 = MOVZDI2PDIrm
  { 1624,	2,	1,	285,	0,	0, 0xdd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #1624 = MOVZDI2PDIrr
  { 1625,	6,	1,	310,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1625 = MOVZPQILo2PQIrm
  { 1626,	2,	1,	311,	0,	0, 0xfc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #1626 = MOVZPQILo2PQIrr
  { 1627,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0xfc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #1627 = MOVZQI2PQIrm
  { 1628,	2,	1,	285,	0,	0, 0xdd002145ULL, NULL, NULL, OperandInfo185 },  // Inst #1628 = MOVZQI2PQIrr
  { 1629,	6,	1,	312,	0,	0|(1<<MCID::MayLoad), 0x16c000146ULL, NULL, NULL, OperandInfo11 },  // Inst #1629 = MOVZX16rm8
  { 1630,	2,	1,	313,	0,	0, 0x16c000145ULL, NULL, NULL, OperandInfo195 },  // Inst #1630 = MOVZX16rr8
  { 1631,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo200 },  // Inst #1631 = MOVZX32_NOREXrm8
  { 1632,	2,	1,	315,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo201 },  // Inst #1632 = MOVZX32_NOREXrr8
  { 1633,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16e000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1633 = MOVZX32rm16
  { 1634,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo12 },  // Inst #1634 = MOVZX32rm8
  { 1635,	2,	1,	315,	0,	0, 0x16e000105ULL, NULL, NULL, OperandInfo196 },  // Inst #1635 = MOVZX32rr16
  { 1636,	2,	1,	315,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo197 },  // Inst #1636 = MOVZX32rr8
  { 1637,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16e000106ULL, NULL, NULL, OperandInfo13 },  // Inst #1637 = MOVZX64rm16
  { 1638,	6,	1,	314,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1638 = MOVZX64rm16_Q
  { 1639,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x116000006ULL, NULL, NULL, OperandInfo13 },  // Inst #1639 = MOVZX64rm32
  { 1640,	6,	1,	314,	0,	0|(1<<MCID::MayLoad), 0x16c000106ULL, NULL, NULL, OperandInfo13 },  // Inst #1640 = MOVZX64rm8
  { 1641,	6,	1,	314,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002106ULL, NULL, NULL, OperandInfo13 },  // Inst #1641 = MOVZX64rm8_Q
  { 1642,	2,	1,	315,	0,	0, 0x16e000105ULL, NULL, NULL, OperandInfo198 },  // Inst #1642 = MOVZX64rr16
  { 1643,	2,	1,	315,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16e002105ULL, NULL, NULL, OperandInfo198 },  // Inst #1643 = MOVZX64rr16_Q
  { 1644,	2,	1,	315,	0,	0, 0x112000003ULL, NULL, NULL, OperandInfo142 },  // Inst #1644 = MOVZX64rr32
  { 1645,	2,	1,	315,	0,	0, 0x16c000105ULL, NULL, NULL, OperandInfo199 },  // Inst #1645 = MOVZX64rr8
  { 1646,	2,	1,	315,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x16c002105ULL, NULL, NULL, OperandInfo199 },  // Inst #1646 = MOVZX64rr8_Q
  { 1647,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x85804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1647 = MPSADBWrmi
  { 1648,	4,	1,	0,	0,	0, 0x85804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1648 = MPSADBWrri
  { 1649,	5,	0,	316,	0,	0|(1<<MCID::MayLoad), 0x1ee00005cULL, ImplicitList3, ImplicitList25, OperandInfo40 },  // Inst #1649 = MUL16m
  { 1650,	1,	0,	317,	0,	0, 0x1ee000054ULL, ImplicitList3, ImplicitList25, OperandInfo112 },  // Inst #1650 = MUL16r
  { 1651,	5,	0,	318,	0,	0|(1<<MCID::MayLoad), 0x1ee00001cULL, ImplicitList4, ImplicitList21, OperandInfo40 },  // Inst #1651 = MUL32m
  { 1652,	1,	0,	319,	0,	0, 0x1ee000014ULL, ImplicitList4, ImplicitList21, OperandInfo71 },  // Inst #1652 = MUL32r
  { 1653,	5,	0,	320,	0,	0|(1<<MCID::MayLoad), 0x1ee00201cULL, ImplicitList5, ImplicitList19, OperandInfo40 },  // Inst #1653 = MUL64m
  { 1654,	1,	0,	321,	0,	0, 0x1ee002014ULL, ImplicitList5, ImplicitList19, OperandInfo73 },  // Inst #1654 = MUL64r
  { 1655,	5,	0,	322,	0,	0|(1<<MCID::MayLoad), 0x1ec00001cULL, ImplicitList6, ImplicitList26, OperandInfo40 },  // Inst #1655 = MUL8m
  { 1656,	1,	0,	323,	0,	0, 0x1ec000014ULL, ImplicitList6, ImplicitList26, OperandInfo113 },  // Inst #1656 = MUL8r
  { 1657,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xb3000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1657 = MULPDrm
  { 1658,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0xb3000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1658 = MULPDrr
  { 1659,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xb2800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1659 = MULPSrm
  { 1660,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0xb2800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1660 = MULPSrr
  { 1661,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #1661 = MULSDrm
  { 1662,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #1662 = MULSDrm_Int
  { 1663,	3,	1,	328,	0,	0|(1<<MCID::Commutable), 0xb2000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #1663 = MULSDrr
  { 1664,	3,	1,	328,	0,	0, 0xb2000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #1664 = MULSDrr_Int
  { 1665,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #1665 = MULSSrm
  { 1666,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0xb2000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #1666 = MULSSrm_Int
  { 1667,	3,	1,	329,	0,	0|(1<<MCID::Commutable), 0xb2000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #1667 = MULSSrr
  { 1668,	3,	1,	329,	0,	0, 0xb2000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #1668 = MULSSrr_Int
  { 1669,	7,	2,	330,	0,	0|(1<<MCID::MayLoad), 0xbec001106ULL, ImplicitList47, NULL, OperandInfo53 },  // Inst #1669 = MULX32rm
  { 1670,	3,	2,	323,	0,	0|(1<<MCID::Commutable), 0xbec001105ULL, ImplicitList47, NULL, OperandInfo54 },  // Inst #1670 = MULX32rr
  { 1671,	7,	2,	330,	0,	0|(1<<MCID::MayLoad), 0xfec001106ULL, ImplicitList48, NULL, OperandInfo55 },  // Inst #1671 = MULX64rm
  { 1672,	3,	2,	323,	0,	0|(1<<MCID::Commutable), 0xfec001105ULL, ImplicitList48, NULL, OperandInfo56 },  // Inst #1672 = MULX64rr
  { 1673,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b0000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1673 = MUL_F32m
  { 1674,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b8000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1674 = MUL_F64m
  { 1675,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1675 = MUL_FI16m
  { 1676,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b4000019ULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #1676 = MUL_FI32m
  { 1677,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000902ULL, NULL, NULL, OperandInfo41 },  // Inst #1677 = MUL_FPrST0
  { 1678,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000302ULL, NULL, NULL, OperandInfo41 },  // Inst #1678 = MUL_FST0r
  { 1679,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #1679 = MUL_Fp32
  { 1680,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1680 = MUL_Fp32m
  { 1681,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #1681 = MUL_Fp64
  { 1682,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1682 = MUL_Fp64m
  { 1683,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1683 = MUL_Fp64m32
  { 1684,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #1684 = MUL_Fp80
  { 1685,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1685 = MUL_Fp80m32
  { 1686,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1686 = MUL_Fp80m64
  { 1687,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1687 = MUL_FpI16m32
  { 1688,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1688 = MUL_FpI16m64
  { 1689,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1689 = MUL_FpI16m80
  { 1690,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #1690 = MUL_FpI32m32
  { 1691,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #1691 = MUL_FpI32m64
  { 1692,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #1692 = MUL_FpI32m80
  { 1693,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000702ULL, NULL, NULL, OperandInfo41 },  // Inst #1693 = MUL_FrST0
  { 1694,	0,	0,	331,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2000126ULL, ImplicitList49, NULL, 0 },  // Inst #1694 = MWAITrr
  { 1695,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList9, ImplicitList10, OperandInfo202 },  // Inst #1695 = NACL_ANDSPi32
  { 1696,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList9, ImplicitList10, OperandInfo202 },  // Inst #1696 = NACL_ASPi32
  { 1697,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList9, ImplicitList10, OperandInfo202 },  // Inst #1697 = NACL_ASPi8
  { 1698,	1,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo72 },  // Inst #1698 = NACL_CALL32d
  { 1699,	1,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo71 },  // Inst #1699 = NACL_CALL32r
  { 1700,	1,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo72 },  // Inst #1700 = NACL_CALL64d
  { 1701,	2,	0,	0,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo203 },  // Inst #1701 = NACL_CALL64r
  { 1702,	1,	0,	0,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList7, ImplicitList50, OperandInfo71 },  // Inst #1702 = NACL_CG_CALL32r
  { 1703,	1,	0,	0,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo72 },  // Inst #1703 = NACL_CG_CALL64pcrel32
  { 1704,	1,	0,	0,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo71 },  // Inst #1704 = NACL_CG_CALL64r
  { 1705,	1,	0,	0,	0,	0|(1<<MCID::Call), 0x0ULL, ImplicitList7, ImplicitList50, OperandInfo72 },  // Inst #1705 = NACL_CG_CALLpcrel32
  { 1706,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #1706 = NACL_CG_GD_TLS_addr64
  { 1707,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #1707 = NACL_CG_IE_TLS_addr32
  { 1708,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #1708 = NACL_CG_IE_TLS_addr64
  { 1709,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #1709 = NACL_CG_JMP64r
  { 1710,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #1710 = NACL_CG_LE_TLS_addr32
  { 1711,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #1711 = NACL_CG_LE_TLS_addr64
  { 1712,	1,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo72 },  // Inst #1712 = NACL_CG_TAILJMPd64
  { 1713,	1,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo204 },  // Inst #1713 = NACL_CG_TAILJMPr64
  { 1714,	2,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo205 },  // Inst #1714 = NACL_CG_TCRETURNdi64
  { 1715,	2,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo206 },  // Inst #1715 = NACL_CG_TCRETURNri64
  { 1716,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList7, ImplicitList50, OperandInfo40 },  // Inst #1716 = NACL_CG_TLS_addr32
  { 1717,	9,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo207 },  // Inst #1717 = NACL_CG_VAARG_64
  { 1718,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo71 },  // Inst #1718 = NACL_JMP32r
  { 1719,	2,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo203 },  // Inst #1719 = NACL_JMP64r
  { 1720,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::IndirectBranch)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, OperandInfo71 },  // Inst #1720 = NACL_JMP64z
  { 1721,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList52, OperandInfo24 },  // Inst #1721 = NACL_RESTBPm
  { 1722,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList52, OperandInfo203 },  // Inst #1722 = NACL_RESTBPr
  { 1723,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList52, OperandInfo71 },  // Inst #1723 = NACL_RESTBPrz
  { 1724,	6,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList9, OperandInfo24 },  // Inst #1724 = NACL_RESTSPm
  { 1725,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList9, OperandInfo203 },  // Inst #1725 = NACL_RESTSPr
  { 1726,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, ImplicitList9, OperandInfo71 },  // Inst #1726 = NACL_RESTSPrz
  { 1727,	0,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe003eULL, NULL, NULL, 0 },  // Inst #1727 = NACL_RET32
  { 1728,	0,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe003eULL, NULL, NULL, 0 },  // Inst #1728 = NACL_RET64
  { 1729,	1,	0,	0,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0xe003eULL, NULL, NULL, OperandInfo2 },  // Inst #1729 = NACL_RETI32
  { 1730,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList52, ImplicitList9, OperandInfo202 },  // Inst #1730 = NACL_SPADJi32
  { 1731,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList9, ImplicitList10, OperandInfo202 },  // Inst #1731 = NACL_SSPi32
  { 1732,	2,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList9, ImplicitList10, OperandInfo202 },  // Inst #1732 = NACL_SSPi8
  { 1733,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3eULL, ImplicitList7, ImplicitList50, OperandInfo40 },  // Inst #1733 = NACL_TLS_addr32
  { 1734,	0,	0,	0,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, 0 },  // Inst #1734 = NACL_TRAP32
  { 1735,	0,	0,	0,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x3eULL, NULL, NULL, 0 },  // Inst #1735 = NACL_TRAP64
  { 1736,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1736 = NEG16m
  { 1737,	2,	1,	89,	0,	0, 0x1ee000053ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #1737 = NEG16r
  { 1738,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1738 = NEG32m
  { 1739,	2,	1,	89,	0,	0, 0x1ee000013ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #1739 = NEG32r
  { 1740,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1740 = NEG64m
  { 1741,	2,	1,	89,	0,	0, 0x1ee002013ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #1741 = NEG64r
  { 1742,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #1742 = NEG8m
  { 1743,	2,	1,	89,	0,	0, 0x1ec000013ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #1743 = NEG8r
  { 1744,	0,	0,	332,	0,	0, 0x120000001ULL, NULL, NULL, 0 },  // Inst #1744 = NOOP
  { 1745,	5,	0,	332,	0,	0, 0x3e000118ULL, NULL, NULL, OperandInfo40 },  // Inst #1745 = NOOPL
  { 1746,	5,	0,	332,	0,	0, 0x3e000158ULL, NULL, NULL, OperandInfo40 },  // Inst #1746 = NOOPW
  { 1747,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00005aULL, NULL, NULL, OperandInfo40 },  // Inst #1747 = NOT16m
  { 1748,	2,	1,	89,	0,	0, 0x1ee000052ULL, NULL, NULL, OperandInfo110 },  // Inst #1748 = NOT16r
  { 1749,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00001aULL, NULL, NULL, OperandInfo40 },  // Inst #1749 = NOT32m
  { 1750,	2,	1,	89,	0,	0, 0x1ee000012ULL, NULL, NULL, OperandInfo66 },  // Inst #1750 = NOT32r
  { 1751,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ee00201aULL, NULL, NULL, OperandInfo40 },  // Inst #1751 = NOT64m
  { 1752,	2,	1,	89,	0,	0, 0x1ee002012ULL, NULL, NULL, OperandInfo67 },  // Inst #1752 = NOT64r
  { 1753,	5,	0,	88,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1ec00001aULL, NULL, NULL, OperandInfo40 },  // Inst #1753 = NOT8m
  { 1754,	2,	1,	89,	0,	0, 0x1ec000012ULL, NULL, NULL, OperandInfo111 },  // Inst #1754 = NOT8r
  { 1755,	1,	0,	5,	0,	0, 0x1a00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #1755 = OR16i16
  { 1756,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c059ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1756 = OR16mi
  { 1757,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004059ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1757 = OR16mi8
  { 1758,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #1758 = OR16mr
  { 1759,	3,	1,	5,	0,	0, 0x10200c051ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #1759 = OR16ri
  { 1760,	3,	1,	5,	0,	0, 0x106004051ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #1760 = OR16ri8
  { 1761,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16000046ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #1761 = OR16rm
  { 1762,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12000043ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #1762 = OR16rr
  { 1763,	3,	1,	5,	0,	0, 0x16000045ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #1763 = OR16rr_REV
  { 1764,	1,	0,	5,	0,	0, 0x1a014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #1764 = OR32i32
  { 1765,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102014019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1765 = OR32mi
  { 1766,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106004019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1766 = OR32mi8
  { 1767,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1767 = OR32mr
  { 1768,	6,	0,	213,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12100004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #1768 = OR32mrLocked
  { 1769,	3,	1,	5,	0,	0, 0x102014011ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #1769 = OR32ri
  { 1770,	3,	1,	5,	0,	0, 0x106004011ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #1770 = OR32ri8
  { 1771,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16000006ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #1771 = OR32rm
  { 1772,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12000003ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #1772 = OR32rr
  { 1773,	3,	1,	5,	0,	0, 0x16000005ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #1773 = OR32rr_REV
  { 1774,	1,	0,	5,	0,	0, 0x1a016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #1774 = OR64i32
  { 1775,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x102016019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1775 = OR64mi32
  { 1776,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x106006019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1776 = OR64mi8
  { 1777,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x12002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #1777 = OR64mr
  { 1778,	3,	1,	5,	0,	0, 0x102016011ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #1778 = OR64ri32
  { 1779,	3,	1,	5,	0,	0, 0x106006011ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #1779 = OR64ri8
  { 1780,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x16002006ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #1780 = OR64rm
  { 1781,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x12002003ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #1781 = OR64rr
  { 1782,	3,	1,	5,	0,	0, 0x16002005ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #1782 = OR64rr_REV
  { 1783,	1,	0,	5,	0,	0, 0x18004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #1783 = OR8i8
  { 1784,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x100004019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #1784 = OR8mi
  { 1785,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #1785 = OR8mr
  { 1786,	3,	1,	5,	0,	0, 0x100004011ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #1786 = OR8ri
  { 1787,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x14000006ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #1787 = OR8rm
  { 1788,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x10000003ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #1788 = OR8rr
  { 1789,	3,	1,	5,	0,	0, 0x14000005ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #1789 = OR8rr_REV
  { 1790,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xad000146ULL, NULL, NULL, OperandInfo34 },  // Inst #1790 = ORPDrm
  { 1791,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xad000145ULL, NULL, NULL, OperandInfo35 },  // Inst #1791 = ORPDrr
  { 1792,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xac800106ULL, NULL, NULL, OperandInfo34 },  // Inst #1792 = ORPSrm
  { 1793,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xac800105ULL, NULL, NULL, OperandInfo35 },  // Inst #1793 = ORPSrr
  { 1794,	1,	0,	333,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004041ULL, ImplicitList3, NULL, OperandInfo2 },  // Inst #1794 = OUT16ir
  { 1795,	0,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000041ULL, ImplicitList53, NULL, 0 },  // Inst #1795 = OUT16rr
  { 1796,	1,	0,	333,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ce004001ULL, ImplicitList4, NULL, OperandInfo2 },  // Inst #1796 = OUT32ir
  { 1797,	0,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1de000001ULL, ImplicitList54, NULL, 0 },  // Inst #1797 = OUT32rr
  { 1798,	1,	0,	333,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1cc004001ULL, ImplicitList6, NULL, OperandInfo2 },  // Inst #1798 = OUT8ir
  { 1799,	0,	0,	334,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1dc000001ULL, ImplicitList55, NULL, 0 },  // Inst #1799 = OUT8rr
  { 1800,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xdc000001ULL, NULL, NULL, 0 },  // Inst #1800 = OUTSB
  { 1801,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000001ULL, NULL, NULL, 0 },  // Inst #1801 = OUTSD
  { 1802,	0,	0,	335,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xde000041ULL, NULL, NULL, 0 },  // Inst #1802 = OUTSW
  { 1803,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x39800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1803 = PABSBrm128
  { 1804,	2,	1,	337,	0,	0, 0x39800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1804 = PABSBrr128
  { 1805,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x3d800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1805 = PABSDrm128
  { 1806,	2,	1,	337,	0,	0, 0x3d800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1806 = PABSDrr128
  { 1807,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x3b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1807 = PABSWrm128
  { 1808,	2,	1,	337,	0,	0, 0x3b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1808 = PABSWrr128
  { 1809,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xd7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1809 = PACKSSDWrm
  { 1810,	3,	1,	339,	0,	0, 0xd7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1810 = PACKSSDWrr
  { 1811,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xc7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1811 = PACKSSWBrm
  { 1812,	3,	1,	339,	0,	0, 0xc7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1812 = PACKSSWBrr
  { 1813,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x57800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1813 = PACKUSDWrm
  { 1814,	3,	1,	0,	0,	0, 0x57800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1814 = PACKUSDWrr
  { 1815,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xcf800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1815 = PACKUSWBrm
  { 1816,	3,	1,	339,	0,	0, 0xcf800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1816 = PACKUSWBrr
  { 1817,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1f9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1817 = PADDBrm
  { 1818,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1f9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1818 = PADDBrr
  { 1819,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1fd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1819 = PADDDrm
  { 1820,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1fd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1820 = PADDDrr
  { 1821,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0x1a9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1821 = PADDQrm
  { 1822,	3,	1,	341,	0,	0|(1<<MCID::Commutable), 0x1a9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1822 = PADDQrr
  { 1823,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1d9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1823 = PADDSBrm
  { 1824,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1d9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1824 = PADDSBrr
  { 1825,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1db800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1825 = PADDSWrm
  { 1826,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1db800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1826 = PADDSWrr
  { 1827,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1b9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1827 = PADDUSBrm
  { 1828,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1b9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1828 = PADDUSBrr
  { 1829,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1bb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1829 = PADDUSWrm
  { 1830,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1bb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1830 = PADDUSWrr
  { 1831,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1fb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1831 = PADDWrm
  { 1832,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1fb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1832 = PADDWrr
  { 1833,	8,	1,	342,	0,	0|(1<<MCID::MayLoad), 0x1f804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1833 = PALIGNR128rm
  { 1834,	4,	1,	343,	0,	0, 0x1f804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1834 = PALIGNR128rr
  { 1835,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1bf800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1835 = PANDNrm
  { 1836,	3,	1,	138,	0,	0, 0x1bf800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1836 = PANDNrr
  { 1837,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1b7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1837 = PANDrm
  { 1838,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1b7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1838 = PANDrr
  { 1839,	0,	0,	344,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000201ULL, NULL, NULL, 0 },  // Inst #1839 = PAUSE
  { 1840,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1c1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1840 = PAVGBrm
  { 1841,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1c1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1841 = PAVGBrr
  { 1842,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1017e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1842 = PAVGUSBrm
  { 1843,	3,	1,	0,	0,	0, 0x1017e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1843 = PAVGUSBrr
  { 1844,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1c7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1844 = PAVGWrm
  { 1845,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1c7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1845 = PAVGWrr
  { 1846,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x21800d46ULL, ImplicitList16, NULL, OperandInfo34 },  // Inst #1846 = PBLENDVBrm0
  { 1847,	3,	1,	0,	0,	0, 0x21800d45ULL, ImplicitList16, NULL, OperandInfo35 },  // Inst #1847 = PBLENDVBrr0
  { 1848,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1d804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1848 = PBLENDWrmi
  { 1849,	4,	1,	0,	0,	0, 0x1d804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1849 = PBLENDWrri
  { 1850,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x89804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1850 = PCLMULQDQrm
  { 1851,	4,	1,	0,	0,	0, 0x89804e45ULL, NULL, NULL, OperandInfo65 },  // Inst #1851 = PCLMULQDQrr
  { 1852,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xe9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1852 = PCMPEQBrm
  { 1853,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xe9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1853 = PCMPEQBrr
  { 1854,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xed800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1854 = PCMPEQDrm
  { 1855,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xed800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1855 = PCMPEQDrr
  { 1856,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x53800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1856 = PCMPEQQrm
  { 1857,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x53800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1857 = PCMPEQQrr
  { 1858,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xeb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1858 = PCMPEQWrm
  { 1859,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xeb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1859 = PCMPEQWrr
  { 1860,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo208 },  // Inst #1860 = PCMPESTRIMEM
  { 1861,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo209 },  // Inst #1861 = PCMPESTRIREG
  { 1862,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc3804e46ULL, ImplicitList17, ImplicitList56, OperandInfo51 },  // Inst #1862 = PCMPESTRIrm
  { 1863,	3,	0,	0,	0,	0, 0xc3804e45ULL, ImplicitList17, ImplicitList56, OperandInfo52 },  // Inst #1863 = PCMPESTRIrr
  { 1864,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo137 },  // Inst #1864 = PCMPESTRM128MEM
  { 1865,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo85 },  // Inst #1865 = PCMPESTRM128REG
  { 1866,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc1804e46ULL, ImplicitList17, ImplicitList57, OperandInfo51 },  // Inst #1866 = PCMPESTRM128rm
  { 1867,	3,	0,	0,	0,	0, 0xc1804e45ULL, ImplicitList17, ImplicitList57, OperandInfo52 },  // Inst #1867 = PCMPESTRM128rr
  { 1868,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xc9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1868 = PCMPGTBrm
  { 1869,	3,	1,	339,	0,	0, 0xc9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1869 = PCMPGTBrr
  { 1870,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xcd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1870 = PCMPGTDrm
  { 1871,	3,	1,	339,	0,	0, 0xcd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1871 = PCMPGTDrr
  { 1872,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6f800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1872 = PCMPGTQrm
  { 1873,	3,	1,	0,	0,	0, 0x6f800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1873 = PCMPGTQrr
  { 1874,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xcb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1874 = PCMPGTWrm
  { 1875,	3,	1,	339,	0,	0, 0xcb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1875 = PCMPGTWrr
  { 1876,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo208 },  // Inst #1876 = PCMPISTRIMEM
  { 1877,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo209 },  // Inst #1877 = PCMPISTRIREG
  { 1878,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc7804e46ULL, NULL, ImplicitList56, OperandInfo51 },  // Inst #1878 = PCMPISTRIrm
  { 1879,	3,	0,	0,	0,	0, 0xc7804e45ULL, NULL, ImplicitList56, OperandInfo52 },  // Inst #1879 = PCMPISTRIrr
  { 1880,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo137 },  // Inst #1880 = PCMPISTRM128MEM
  { 1881,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo85 },  // Inst #1881 = PCMPISTRM128REG
  { 1882,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0xc5804e46ULL, NULL, ImplicitList57, OperandInfo51 },  // Inst #1882 = PCMPISTRM128rm
  { 1883,	3,	0,	0,	0,	0, 0xc5804e45ULL, NULL, ImplicitList57, OperandInfo52 },  // Inst #1883 = PCMPISTRM128rr
  { 1884,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbea001106ULL, NULL, NULL, OperandInfo53 },  // Inst #1884 = PDEP32rm
  { 1885,	3,	1,	0,	0,	0, 0xbea001105ULL, NULL, NULL, OperandInfo54 },  // Inst #1885 = PDEP32rr
  { 1886,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfea001106ULL, NULL, NULL, OperandInfo55 },  // Inst #1886 = PDEP64rm
  { 1887,	3,	1,	0,	0,	0, 0xfea001105ULL, NULL, NULL, OperandInfo56 },  // Inst #1887 = PDEP64rr
  { 1888,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbea001206ULL, NULL, NULL, OperandInfo53 },  // Inst #1888 = PEXT32rm
  { 1889,	3,	1,	0,	0,	0, 0xbea001205ULL, NULL, NULL, OperandInfo54 },  // Inst #1889 = PEXT32rr
  { 1890,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xfea001206ULL, NULL, NULL, OperandInfo55 },  // Inst #1890 = PEXT64rm
  { 1891,	3,	1,	0,	0,	0, 0xfea001205ULL, NULL, NULL, OperandInfo56 },  // Inst #1891 = PEXT64rr
  { 1892,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x29804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1892 = PEXTRBmr
  { 1893,	3,	1,	0,	0,	0, 0x29804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #1893 = PEXTRBrr
  { 1894,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2d804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1894 = PEXTRDmr
  { 1895,	3,	1,	0,	0,	0, 0x2d804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #1895 = PEXTRDrr
  { 1896,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2d806e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1896 = PEXTRQmr
  { 1897,	3,	1,	0,	0,	0, 0x2d806e43ULL, NULL, NULL, OperandInfo210 },  // Inst #1897 = PEXTRQrr
  { 1898,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x2b804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #1898 = PEXTRWmr
  { 1899,	3,	1,	345,	0,	0, 0x18b804145ULL, NULL, NULL, OperandInfo115 },  // Inst #1899 = PEXTRWri
  { 1900,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1003a000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1900 = PF2IDrm
  { 1901,	2,	1,	0,	0,	0, 0x1003a000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1901 = PF2IDrr
  { 1902,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10038000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1902 = PF2IWrm
  { 1903,	2,	1,	0,	0,	0, 0x10038000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1903 = PF2IWrr
  { 1904,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1015c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1904 = PFACCrm
  { 1905,	3,	1,	0,	0,	0, 0x1015c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1905 = PFACCrr
  { 1906,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1013c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1906 = PFADDrm
  { 1907,	3,	1,	0,	0,	0, 0x1013c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1907 = PFADDrr
  { 1908,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10160000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1908 = PFCMPEQrm
  { 1909,	3,	1,	0,	0,	0, 0x10160000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1909 = PFCMPEQrr
  { 1910,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10120000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1910 = PFCMPGErm
  { 1911,	3,	1,	0,	0,	0, 0x10120000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1911 = PFCMPGErr
  { 1912,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10140000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1912 = PFCMPGTrm
  { 1913,	3,	1,	0,	0,	0, 0x10140000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1913 = PFCMPGTrr
  { 1914,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10148000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1914 = PFMAXrm
  { 1915,	3,	1,	0,	0,	0, 0x10148000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1915 = PFMAXrr
  { 1916,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10128000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1916 = PFMINrm
  { 1917,	3,	1,	0,	0,	0, 0x10128000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1917 = PFMINrr
  { 1918,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10168000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1918 = PFMULrm
  { 1919,	3,	1,	0,	0,	0, 0x10168000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1919 = PFMULrr
  { 1920,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10114000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1920 = PFNACCrm
  { 1921,	3,	1,	0,	0,	0, 0x10114000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1921 = PFNACCrr
  { 1922,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1011c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1922 = PFPNACCrm
  { 1923,	3,	1,	0,	0,	0, 0x1011c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1923 = PFPNACCrr
  { 1924,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1014c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1924 = PFRCPIT1rm
  { 1925,	3,	1,	0,	0,	0, 0x1014c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1925 = PFRCPIT1rr
  { 1926,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1016c000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1926 = PFRCPIT2rm
  { 1927,	3,	1,	0,	0,	0, 0x1016c000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1927 = PFRCPIT2rr
  { 1928,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1012c000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1928 = PFRCPrm
  { 1929,	2,	1,	0,	0,	0, 0x1012c000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1929 = PFRCPrr
  { 1930,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1014e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1930 = PFRSQIT1rm
  { 1931,	3,	1,	0,	0,	0, 0x1014e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1931 = PFRSQIT1rr
  { 1932,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1012e000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1932 = PFRSQRTrm
  { 1933,	2,	1,	0,	0,	0, 0x1012e000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1933 = PFRSQRTrr
  { 1934,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10154000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1934 = PFSUBRrm
  { 1935,	3,	1,	0,	0,	0, 0x10154000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1935 = PFSUBRrr
  { 1936,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10134000106ULL, NULL, NULL, OperandInfo159 },  // Inst #1936 = PFSUBrm
  { 1937,	3,	1,	0,	0,	0, 0x10134000105ULL, NULL, NULL, OperandInfo160 },  // Inst #1937 = PFSUBrr
  { 1938,	7,	1,	346,	0,	0|(1<<MCID::MayLoad), 0x5800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1938 = PHADDDrm
  { 1939,	3,	1,	347,	0,	0, 0x5800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1939 = PHADDDrr
  { 1940,	7,	1,	348,	0,	0|(1<<MCID::MayLoad), 0x7800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1940 = PHADDSWrm128
  { 1941,	3,	1,	349,	0,	0, 0x7800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1941 = PHADDSWrr128
  { 1942,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x3800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1942 = PHADDWrm
  { 1943,	3,	1,	351,	0,	0, 0x3800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1943 = PHADDWrr
  { 1944,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x83800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1944 = PHMINPOSUWrm128
  { 1945,	2,	1,	0,	0,	0, 0x83800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1945 = PHMINPOSUWrr128
  { 1946,	7,	1,	346,	0,	0|(1<<MCID::MayLoad), 0xd800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1946 = PHSUBDrm
  { 1947,	3,	1,	347,	0,	0, 0xd800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1947 = PHSUBDrr
  { 1948,	7,	1,	348,	0,	0|(1<<MCID::MayLoad), 0xf800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1948 = PHSUBSWrm128
  { 1949,	3,	1,	349,	0,	0, 0xf800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1949 = PHSUBSWrr128
  { 1950,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0xb800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1950 = PHSUBWrm
  { 1951,	3,	1,	351,	0,	0, 0xb800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1951 = PHSUBWrr
  { 1952,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1001a000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1952 = PI2FDrm
  { 1953,	2,	1,	0,	0,	0, 0x1001a000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1953 = PI2FDrr
  { 1954,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10018000106ULL, NULL, NULL, OperandInfo147 },  // Inst #1954 = PI2FWrm
  { 1955,	2,	1,	0,	0,	0, 0x10018000105ULL, NULL, NULL, OperandInfo151 },  // Inst #1955 = PI2FWrr
  { 1956,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1956 = PINSRBrm
  { 1957,	4,	1,	0,	0,	0, 0x41804e45ULL, NULL, NULL, OperandInfo211 },  // Inst #1957 = PINSRBrr
  { 1958,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45804e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1958 = PINSRDrm
  { 1959,	4,	1,	0,	0,	0, 0x45804e45ULL, NULL, NULL, OperandInfo211 },  // Inst #1959 = PINSRDrr
  { 1960,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45806e46ULL, NULL, NULL, OperandInfo64 },  // Inst #1960 = PINSRQrm
  { 1961,	4,	1,	0,	0,	0, 0x45806e45ULL, NULL, NULL, OperandInfo212 },  // Inst #1961 = PINSRQrr
  { 1962,	8,	1,	352,	0,	0|(1<<MCID::MayLoad), 0x189804146ULL, NULL, NULL, OperandInfo64 },  // Inst #1962 = PINSRWrmi
  { 1963,	4,	1,	353,	0,	0, 0x189804145ULL, NULL, NULL, OperandInfo211 },  // Inst #1963 = PINSRWrri
  { 1964,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0x9800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1964 = PMADDUBSWrm128
  { 1965,	3,	1,	355,	0,	0, 0x9800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1965 = PMADDUBSWrr128
  { 1966,	7,	1,	356,	0,	0|(1<<MCID::MayLoad), 0x1eb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1966 = PMADDWDrm
  { 1967,	3,	1,	357,	0,	0|(1<<MCID::Commutable), 0x1eb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1967 = PMADDWDrr
  { 1968,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x79800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1968 = PMAXSBrm
  { 1969,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x79800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1969 = PMAXSBrr
  { 1970,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7b800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1970 = PMAXSDrm
  { 1971,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7b800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1971 = PMAXSDrr
  { 1972,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1dd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1972 = PMAXSWrm
  { 1973,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1dd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1973 = PMAXSWrr
  { 1974,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1bd800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1974 = PMAXUBrm
  { 1975,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1bd800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1975 = PMAXUBrr
  { 1976,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7f800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1976 = PMAXUDrm
  { 1977,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7f800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1977 = PMAXUDrr
  { 1978,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x7d800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1978 = PMAXUWrm
  { 1979,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x7d800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1979 = PMAXUWrr
  { 1980,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x71800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1980 = PMINSBrm
  { 1981,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x71800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1981 = PMINSBrr
  { 1982,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x73800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1982 = PMINSDrm
  { 1983,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x73800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1983 = PMINSDrr
  { 1984,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1d5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1984 = PMINSWrm
  { 1985,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1d5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1985 = PMINSWrr
  { 1986,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1b5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #1986 = PMINUBrm
  { 1987,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1b5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #1987 = PMINUBrr
  { 1988,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x77800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1988 = PMINUDrm
  { 1989,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x77800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1989 = PMINUDrr
  { 1990,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x75800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #1990 = PMINUWrm
  { 1991,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x75800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #1991 = PMINUWrr
  { 1992,	2,	1,	298,	0,	0, 0x1af800145ULL, NULL, NULL, OperandInfo97 },  // Inst #1992 = PMOVMSKBrr
  { 1993,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x43800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1993 = PMOVSXBDrm
  { 1994,	2,	1,	0,	0,	0, 0x43800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1994 = PMOVSXBDrr
  { 1995,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x45800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1995 = PMOVSXBQrm
  { 1996,	2,	1,	0,	0,	0, 0x45800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1996 = PMOVSXBQrr
  { 1997,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1997 = PMOVSXBWrm
  { 1998,	2,	1,	0,	0,	0, 0x41800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #1998 = PMOVSXBWrr
  { 1999,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #1999 = PMOVSXDQrm
  { 2000,	2,	1,	0,	0,	0, 0x4b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2000 = PMOVSXDQrr
  { 2001,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x47800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2001 = PMOVSXWDrm
  { 2002,	2,	1,	0,	0,	0, 0x47800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2002 = PMOVSXWDrr
  { 2003,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x49800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2003 = PMOVSXWQrm
  { 2004,	2,	1,	0,	0,	0, 0x49800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2004 = PMOVSXWQrr
  { 2005,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x63800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2005 = PMOVZXBDrm
  { 2006,	2,	1,	0,	0,	0, 0x63800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2006 = PMOVZXBDrr
  { 2007,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x65800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2007 = PMOVZXBQrm
  { 2008,	2,	1,	0,	0,	0, 0x65800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2008 = PMOVZXBQrr
  { 2009,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x61800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2009 = PMOVZXBWrm
  { 2010,	2,	1,	0,	0,	0, 0x61800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2010 = PMOVZXBWrr
  { 2011,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2011 = PMOVZXDQrm
  { 2012,	2,	1,	0,	0,	0, 0x6b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2012 = PMOVZXDQrr
  { 2013,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x67800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2013 = PMOVZXWDrm
  { 2014,	2,	1,	0,	0,	0, 0x67800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2014 = PMOVZXWDrr
  { 2015,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x69800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2015 = PMOVZXWQrm
  { 2016,	2,	1,	0,	0,	0, 0x69800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2016 = PMOVZXWQrr
  { 2017,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x51800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2017 = PMULDQrm
  { 2018,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x51800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2018 = PMULDQrr
  { 2019,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0x17800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2019 = PMULHRSWrm128
  { 2020,	3,	1,	355,	0,	0|(1<<MCID::Commutable), 0x17800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2020 = PMULHRSWrr128
  { 2021,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x1016e000106ULL, NULL, NULL, OperandInfo159 },  // Inst #2021 = PMULHRWrm
  { 2022,	3,	1,	0,	0,	0, 0x1016e000105ULL, NULL, NULL, OperandInfo160 },  // Inst #2022 = PMULHRWrr
  { 2023,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x1c9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2023 = PMULHUWrm
  { 2024,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x1c9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2024 = PMULHUWrr
  { 2025,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x1cb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2025 = PMULHWrm
  { 2026,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x1cb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2026 = PMULHWrr
  { 2027,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x81800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2027 = PMULLDrm
  { 2028,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x81800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2028 = PMULLDrr
  { 2029,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x1ab800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2029 = PMULLWrm
  { 2030,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x1ab800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2030 = PMULLWrr
  { 2031,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0x1e9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2031 = PMULUDQrm
  { 2032,	3,	1,	355,	0,	0|(1<<MCID::Commutable), 0x1e9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2032 = PMULUDQrr
  { 2033,	1,	1,	360,	0,	0|(1<<MCID::MayLoad), 0xb0000042ULL, ImplicitList7, ImplicitList7, OperandInfo112 },  // Inst #2033 = POP16r
  { 2034,	5,	1,	361,	0,	0|(1<<MCID::MayLoad), 0x11e000058ULL, ImplicitList7, ImplicitList7, OperandInfo40 },  // Inst #2034 = POP16rmm
  { 2035,	1,	1,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000050ULL, ImplicitList7, ImplicitList7, OperandInfo112 },  // Inst #2035 = POP16rmr
  { 2036,	1,	1,	362,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList7, ImplicitList7, OperandInfo71 },  // Inst #2036 = POP32r
  { 2037,	5,	1,	361,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList7, ImplicitList7, OperandInfo40 },  // Inst #2037 = POP32rmm
  { 2038,	1,	1,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList7, ImplicitList7, OperandInfo71 },  // Inst #2038 = POP32rmr
  { 2039,	1,	1,	362,	0,	0|(1<<MCID::MayLoad), 0xb0000002ULL, ImplicitList9, ImplicitList9, OperandInfo73 },  // Inst #2039 = POP64r
  { 2040,	5,	1,	361,	0,	0|(1<<MCID::MayLoad), 0x11e000018ULL, ImplicitList9, ImplicitList9, OperandInfo40 },  // Inst #2040 = POP64rmm
  { 2041,	1,	1,	362,	0,	0|(1<<MCID::MayLoad), 0x11e000010ULL, ImplicitList9, ImplicitList9, OperandInfo73 },  // Inst #2041 = POP64rmr
  { 2042,	0,	0,	363,	0,	0|(1<<MCID::MayLoad), 0xc2000001ULL, ImplicitList7, ImplicitList58, 0 },  // Inst #2042 = POPA32
  { 2043,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170000c46ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #2043 = POPCNT16rm
  { 2044,	2,	1,	0,	0,	0, 0x170000c45ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #2044 = POPCNT16rr
  { 2045,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170000c06ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #2045 = POPCNT32rm
  { 2046,	2,	1,	0,	0,	0, 0x170000c05ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #2046 = POPCNT32rr
  { 2047,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x170002c06ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #2047 = POPCNT64rm
  { 2048,	2,	1,	0,	0,	0, 0x170002c05ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #2048 = POPCNT64rr
  { 2049,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000041ULL, NULL, NULL, 0 },  // Inst #2049 = POPDS16
  { 2050,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3e000001ULL, NULL, NULL, 0 },  // Inst #2050 = POPDS32
  { 2051,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000041ULL, NULL, NULL, 0 },  // Inst #2051 = POPES16
  { 2052,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000001ULL, NULL, NULL, 0 },  // Inst #2052 = POPES32
  { 2053,	0,	0,	365,	0,	0|(1<<MCID::MayLoad), 0x13a000041ULL, ImplicitList7, ImplicitList7, 0 },  // Inst #2053 = POPF16
  { 2054,	0,	0,	366,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList7, ImplicitList7, 0 },  // Inst #2054 = POPF32
  { 2055,	0,	0,	366,	0,	0|(1<<MCID::MayLoad), 0x13a000001ULL, ImplicitList9, ImplicitList10, 0 },  // Inst #2055 = POPF64
  { 2056,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000141ULL, NULL, NULL, 0 },  // Inst #2056 = POPFS16
  { 2057,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2057 = POPFS32
  { 2058,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x142000101ULL, NULL, NULL, 0 },  // Inst #2058 = POPFS64
  { 2059,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000141ULL, NULL, NULL, 0 },  // Inst #2059 = POPGS16
  { 2060,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2060 = POPGS32
  { 2061,	0,	0,	364,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x152000101ULL, NULL, NULL, 0 },  // Inst #2061 = POPGS64
  { 2062,	0,	0,	367,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000041ULL, NULL, NULL, 0 },  // Inst #2062 = POPSS16
  { 2063,	0,	0,	367,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2e000001ULL, NULL, NULL, 0 },  // Inst #2063 = POPSS32
  { 2064,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1d7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2064 = PORrm
  { 2065,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1d7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2065 = PORrr
  { 2066,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2066 = PREFETCH
  { 2067,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2067 = PREFETCHNTA
  { 2068,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2068 = PREFETCHT0
  { 2069,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011aULL, NULL, NULL, OperandInfo40 },  // Inst #2069 = PREFETCHT1
  { 2070,	5,	0,	45,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3000011bULL, NULL, NULL, OperandInfo40 },  // Inst #2070 = PREFETCHT2
  { 2071,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2071 = PREFETCHW
  { 2072,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1ed800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2072 = PSADBWrm
  { 2073,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x1ed800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2073 = PSADBWrr
  { 2074,	7,	1,	368,	0,	0|(1<<MCID::MayLoad), 0x1800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2074 = PSHUFBrm
  { 2075,	3,	1,	369,	0,	0, 0x1800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2075 = PSHUFBrr
  { 2076,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0xe1804146ULL, NULL, NULL, OperandInfo51 },  // Inst #2076 = PSHUFDmi
  { 2077,	3,	1,	371,	0,	0, 0xe1804145ULL, NULL, NULL, OperandInfo52 },  // Inst #2077 = PSHUFDri
  { 2078,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0xe1804c06ULL, NULL, NULL, OperandInfo51 },  // Inst #2078 = PSHUFHWmi
  { 2079,	3,	1,	371,	0,	0, 0xe1804c05ULL, NULL, NULL, OperandInfo52 },  // Inst #2079 = PSHUFHWri
  { 2080,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0xe1804b06ULL, NULL, NULL, OperandInfo51 },  // Inst #2080 = PSHUFLWmi
  { 2081,	3,	1,	371,	0,	0, 0xe1804b05ULL, NULL, NULL, OperandInfo52 },  // Inst #2081 = PSHUFLWri
  { 2082,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0x11800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2082 = PSIGNBrm
  { 2083,	3,	1,	373,	0,	0, 0x11800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2083 = PSIGNBrr
  { 2084,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0x15800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2084 = PSIGNDrm
  { 2085,	3,	1,	373,	0,	0, 0x15800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2085 = PSIGNDrr
  { 2086,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0x13800d46ULL, NULL, NULL, OperandInfo34 },  // Inst #2086 = PSIGNWrm
  { 2087,	3,	1,	373,	0,	0, 0x13800d45ULL, NULL, NULL, OperandInfo35 },  // Inst #2087 = PSIGNWrr
  { 2088,	3,	1,	374,	0,	0, 0xe7804157ULL, NULL, NULL, OperandInfo213 },  // Inst #2088 = PSLLDQri
  { 2089,	3,	1,	375,	0,	0, 0xe5804156ULL, NULL, NULL, OperandInfo213 },  // Inst #2089 = PSLLDri
  { 2090,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1e5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2090 = PSLLDrm
  { 2091,	3,	1,	377,	0,	0, 0x1e5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2091 = PSLLDrr
  { 2092,	3,	1,	375,	0,	0, 0xe7804156ULL, NULL, NULL, OperandInfo213 },  // Inst #2092 = PSLLQri
  { 2093,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1e7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2093 = PSLLQrm
  { 2094,	3,	1,	377,	0,	0, 0x1e7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2094 = PSLLQrr
  { 2095,	3,	1,	375,	0,	0, 0xe3804156ULL, NULL, NULL, OperandInfo213 },  // Inst #2095 = PSLLWri
  { 2096,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1e3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2096 = PSLLWrm
  { 2097,	3,	1,	377,	0,	0, 0x1e3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2097 = PSLLWrr
  { 2098,	3,	1,	375,	0,	0, 0xe5804154ULL, NULL, NULL, OperandInfo213 },  // Inst #2098 = PSRADri
  { 2099,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1c5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2099 = PSRADrm
  { 2100,	3,	1,	377,	0,	0, 0x1c5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2100 = PSRADrr
  { 2101,	3,	1,	375,	0,	0, 0xe3804154ULL, NULL, NULL, OperandInfo213 },  // Inst #2101 = PSRAWri
  { 2102,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1c3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2102 = PSRAWrm
  { 2103,	3,	1,	377,	0,	0, 0x1c3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2103 = PSRAWrr
  { 2104,	3,	1,	374,	0,	0, 0xe7804153ULL, NULL, NULL, OperandInfo213 },  // Inst #2104 = PSRLDQri
  { 2105,	3,	1,	375,	0,	0, 0xe5804152ULL, NULL, NULL, OperandInfo213 },  // Inst #2105 = PSRLDri
  { 2106,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1a5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2106 = PSRLDrm
  { 2107,	3,	1,	377,	0,	0, 0x1a5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2107 = PSRLDrr
  { 2108,	3,	1,	375,	0,	0, 0xe7804152ULL, NULL, NULL, OperandInfo213 },  // Inst #2108 = PSRLQri
  { 2109,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1a7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2109 = PSRLQrm
  { 2110,	3,	1,	377,	0,	0, 0x1a7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2110 = PSRLQrr
  { 2111,	3,	1,	375,	0,	0, 0xe3804152ULL, NULL, NULL, OperandInfo213 },  // Inst #2111 = PSRLWri
  { 2112,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x1a3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2112 = PSRLWrm
  { 2113,	3,	1,	377,	0,	0, 0x1a3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2113 = PSRLWrr
  { 2114,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1f1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2114 = PSUBBrm
  { 2115,	3,	1,	339,	0,	0, 0x1f1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2115 = PSUBBrr
  { 2116,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1f5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2116 = PSUBDrm
  { 2117,	3,	1,	339,	0,	0, 0x1f5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2117 = PSUBDrr
  { 2118,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0x1f7800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2118 = PSUBQrm
  { 2119,	3,	1,	341,	0,	0, 0x1f7800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2119 = PSUBQrr
  { 2120,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1d1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2120 = PSUBSBrm
  { 2121,	3,	1,	339,	0,	0, 0x1d1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2121 = PSUBSBrr
  { 2122,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1d3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2122 = PSUBSWrm
  { 2123,	3,	1,	339,	0,	0, 0x1d3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2123 = PSUBSWrr
  { 2124,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1b1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2124 = PSUBUSBrm
  { 2125,	3,	1,	339,	0,	0, 0x1b1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2125 = PSUBUSBrr
  { 2126,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1b3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2126 = PSUBUSWrm
  { 2127,	3,	1,	339,	0,	0, 0x1b3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2127 = PSUBUSWrr
  { 2128,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x1f3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2128 = PSUBWrm
  { 2129,	3,	1,	339,	0,	0, 0x1f3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2129 = PSUBWrr
  { 2130,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10176000106ULL, NULL, NULL, OperandInfo147 },  // Inst #2130 = PSWAPDrm
  { 2131,	2,	1,	0,	0,	0, 0x10176000105ULL, NULL, NULL, OperandInfo151 },  // Inst #2131 = PSWAPDrr
  { 2132,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2f800d46ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #2132 = PTESTrm
  { 2133,	2,	0,	0,	0,	0, 0x2f800d45ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #2133 = PTESTrr
  { 2134,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xd1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2134 = PUNPCKHBWrm
  { 2135,	3,	1,	379,	0,	0, 0xd1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2135 = PUNPCKHBWrr
  { 2136,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xd5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2136 = PUNPCKHDQrm
  { 2137,	3,	1,	379,	0,	0, 0xd5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2137 = PUNPCKHDQrr
  { 2138,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xdb800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2138 = PUNPCKHQDQrm
  { 2139,	3,	1,	379,	0,	0, 0xdb800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2139 = PUNPCKHQDQrr
  { 2140,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xd3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2140 = PUNPCKHWDrm
  { 2141,	3,	1,	379,	0,	0, 0xd3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2141 = PUNPCKHWDrr
  { 2142,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xc1800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2142 = PUNPCKLBWrm
  { 2143,	3,	1,	379,	0,	0, 0xc1800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2143 = PUNPCKLBWrr
  { 2144,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xc5800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2144 = PUNPCKLDQrm
  { 2145,	3,	1,	379,	0,	0, 0xc5800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2145 = PUNPCKLDQrr
  { 2146,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xd9800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2146 = PUNPCKLQDQrm
  { 2147,	3,	1,	379,	0,	0, 0xd9800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2147 = PUNPCKLQDQrr
  { 2148,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xc3800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2148 = PUNPCKLWDrm
  { 2149,	3,	1,	379,	0,	0, 0xc3800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2149 = PUNPCKLWDrr
  { 2150,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0xa0000042ULL, ImplicitList7, ImplicitList7, OperandInfo112 },  // Inst #2150 = PUSH16r
  { 2151,	5,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe00005eULL, ImplicitList7, ImplicitList7, OperandInfo40 },  // Inst #2151 = PUSH16rmm
  { 2152,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0x1fe000056ULL, ImplicitList7, ImplicitList7, OperandInfo112 },  // Inst #2152 = PUSH16rmr
  { 2153,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList7, ImplicitList7, OperandInfo71 },  // Inst #2153 = PUSH32r
  { 2154,	5,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList7, ImplicitList7, OperandInfo40 },  // Inst #2154 = PUSH32rmm
  { 2155,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList7, ImplicitList7, OperandInfo71 },  // Inst #2155 = PUSH32rmr
  { 2156,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd000c001ULL, ImplicitList9, ImplicitList9, OperandInfo2 },  // Inst #2156 = PUSH64i16
  { 2157,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList9, ImplicitList9, OperandInfo2 },  // Inst #2157 = PUSH64i32
  { 2158,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList9, ImplicitList9, OperandInfo2 },  // Inst #2158 = PUSH64i8
  { 2159,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0xa0000002ULL, ImplicitList9, ImplicitList9, OperandInfo73 },  // Inst #2159 = PUSH64r
  { 2160,	5,	0,	381,	0,	0|(1<<MCID::MayStore), 0x1fe00001eULL, ImplicitList9, ImplicitList9, OperandInfo40 },  // Inst #2160 = PUSH64rmm
  { 2161,	1,	0,	380,	0,	0|(1<<MCID::MayStore), 0x1fe000016ULL, ImplicitList9, ImplicitList9, OperandInfo73 },  // Inst #2161 = PUSH64rmr
  { 2162,	0,	0,	383,	0,	0|(1<<MCID::MayStore), 0xc0000001ULL, ImplicitList58, ImplicitList7, 0 },  // Inst #2162 = PUSHA32
  { 2163,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000041ULL, NULL, NULL, 0 },  // Inst #2163 = PUSHCS16
  { 2164,	0,	0,	385,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c000001ULL, NULL, NULL, 0 },  // Inst #2164 = PUSHCS32
  { 2165,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000041ULL, NULL, NULL, 0 },  // Inst #2165 = PUSHDS16
  { 2166,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3c000001ULL, NULL, NULL, 0 },  // Inst #2166 = PUSHDS32
  { 2167,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000041ULL, NULL, NULL, 0 },  // Inst #2167 = PUSHES16
  { 2168,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xc000001ULL, NULL, NULL, 0 },  // Inst #2168 = PUSHES32
  { 2169,	0,	0,	386,	0,	0|(1<<MCID::MayStore), 0x138000041ULL, ImplicitList7, ImplicitList7, 0 },  // Inst #2169 = PUSHF16
  { 2170,	0,	0,	386,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList7, ImplicitList7, 0 },  // Inst #2170 = PUSHF32
  { 2171,	0,	0,	386,	0,	0|(1<<MCID::MayStore), 0x138000001ULL, ImplicitList10, ImplicitList9, 0 },  // Inst #2171 = PUSHF64
  { 2172,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000141ULL, NULL, NULL, 0 },  // Inst #2172 = PUSHFS16
  { 2173,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2173 = PUSHFS32
  { 2174,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x140000101ULL, NULL, NULL, 0 },  // Inst #2174 = PUSHFS64
  { 2175,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000141ULL, NULL, NULL, 0 },  // Inst #2175 = PUSHGS16
  { 2176,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2176 = PUSHGS32
  { 2177,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150000101ULL, NULL, NULL, 0 },  // Inst #2177 = PUSHGS64
  { 2178,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000041ULL, NULL, NULL, 0 },  // Inst #2178 = PUSHSS16
  { 2179,	0,	0,	384,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2c000001ULL, NULL, NULL, 0 },  // Inst #2179 = PUSHSS32
  { 2180,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd000c041ULL, ImplicitList7, ImplicitList7, OperandInfo2 },  // Inst #2180 = PUSHi16
  { 2181,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd0014001ULL, ImplicitList7, ImplicitList7, OperandInfo2 },  // Inst #2181 = PUSHi32
  { 2182,	1,	0,	382,	0,	0|(1<<MCID::MayStore), 0xd4004001ULL, ImplicitList7, ImplicitList7, OperandInfo2 },  // Inst #2182 = PUSHi8
  { 2183,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x1df800146ULL, NULL, NULL, OperandInfo34 },  // Inst #2183 = PXORrm
  { 2184,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x1df800145ULL, NULL, NULL, OperandInfo35 },  // Inst #2184 = PXORrr
  { 2185,	5,	0,	387,	0,	0, 0x1a200005aULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2185 = RCL16m1
  { 2186,	5,	0,	387,	0,	0, 0x1a600005aULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2186 = RCL16mCL
  { 2187,	6,	0,	387,	0,	0, 0x18200405aULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2187 = RCL16mi
  { 2188,	2,	1,	388,	0,	0, 0x1a2000052ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2188 = RCL16r1
  { 2189,	2,	1,	388,	0,	0, 0x1a6000052ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2189 = RCL16rCL
  { 2190,	3,	1,	388,	0,	0, 0x182004052ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2190 = RCL16ri
  { 2191,	5,	0,	387,	0,	0, 0x1a200001aULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2191 = RCL32m1
  { 2192,	5,	0,	387,	0,	0, 0x1a600001aULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2192 = RCL32mCL
  { 2193,	6,	0,	387,	0,	0, 0x18200401aULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2193 = RCL32mi
  { 2194,	2,	1,	388,	0,	0, 0x1a2000012ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2194 = RCL32r1
  { 2195,	2,	1,	388,	0,	0, 0x1a6000012ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2195 = RCL32rCL
  { 2196,	3,	1,	388,	0,	0, 0x182004012ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2196 = RCL32ri
  { 2197,	5,	0,	387,	0,	0, 0x1a200201aULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2197 = RCL64m1
  { 2198,	5,	0,	387,	0,	0, 0x1a600201aULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2198 = RCL64mCL
  { 2199,	6,	0,	387,	0,	0, 0x18200601aULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2199 = RCL64mi
  { 2200,	2,	1,	388,	0,	0, 0x1a2002012ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2200 = RCL64r1
  { 2201,	2,	1,	388,	0,	0, 0x1a6002012ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2201 = RCL64rCL
  { 2202,	3,	1,	388,	0,	0, 0x182006012ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2202 = RCL64ri
  { 2203,	5,	0,	387,	0,	0, 0x1a000001aULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2203 = RCL8m1
  { 2204,	5,	0,	387,	0,	0, 0x1a400001aULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2204 = RCL8mCL
  { 2205,	6,	0,	387,	0,	0, 0x18000401aULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2205 = RCL8mi
  { 2206,	2,	1,	388,	0,	0, 0x1a0000012ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2206 = RCL8r1
  { 2207,	2,	1,	388,	0,	0, 0x1a4000012ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2207 = RCL8rCL
  { 2208,	3,	1,	388,	0,	0, 0x180004012ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2208 = RCL8ri
  { 2209,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2209 = RCPPSm
  { 2210,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0xa6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2210 = RCPPSm_Int
  { 2211,	2,	1,	390,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2211 = RCPPSr
  { 2212,	2,	1,	390,	0,	0, 0xa6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2212 = RCPPSr_Int
  { 2213,	6,	1,	391,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2213 = RCPSSm
  { 2214,	7,	1,	392,	0,	0|(1<<MCID::MayLoad), 0xa6000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2214 = RCPSSm_Int
  { 2215,	2,	1,	393,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2215 = RCPSSr
  { 2216,	3,	1,	394,	0,	0, 0xa6000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2216 = RCPSSr_Int
  { 2217,	5,	0,	387,	0,	0, 0x1a200005bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2217 = RCR16m1
  { 2218,	5,	0,	387,	0,	0, 0x1a600005bULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2218 = RCR16mCL
  { 2219,	6,	0,	387,	0,	0, 0x18200405bULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2219 = RCR16mi
  { 2220,	2,	1,	388,	0,	0, 0x1a2000053ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2220 = RCR16r1
  { 2221,	2,	1,	388,	0,	0, 0x1a6000053ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2221 = RCR16rCL
  { 2222,	3,	1,	388,	0,	0, 0x182004053ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2222 = RCR16ri
  { 2223,	5,	0,	387,	0,	0, 0x1a200001bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2223 = RCR32m1
  { 2224,	5,	0,	387,	0,	0, 0x1a600001bULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2224 = RCR32mCL
  { 2225,	6,	0,	387,	0,	0, 0x18200401bULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2225 = RCR32mi
  { 2226,	2,	1,	388,	0,	0, 0x1a2000013ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2226 = RCR32r1
  { 2227,	2,	1,	388,	0,	0, 0x1a6000013ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2227 = RCR32rCL
  { 2228,	3,	1,	388,	0,	0, 0x182004013ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2228 = RCR32ri
  { 2229,	5,	0,	387,	0,	0, 0x1a200201bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2229 = RCR64m1
  { 2230,	5,	0,	387,	0,	0, 0x1a600201bULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2230 = RCR64mCL
  { 2231,	6,	0,	387,	0,	0, 0x18200601bULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2231 = RCR64mi
  { 2232,	2,	1,	388,	0,	0, 0x1a2002013ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2232 = RCR64r1
  { 2233,	2,	1,	388,	0,	0, 0x1a6002013ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2233 = RCR64rCL
  { 2234,	3,	1,	388,	0,	0, 0x182006013ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2234 = RCR64ri
  { 2235,	5,	0,	387,	0,	0, 0x1a000001bULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2235 = RCR8m1
  { 2236,	5,	0,	387,	0,	0, 0x1a400001bULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2236 = RCR8mCL
  { 2237,	6,	0,	387,	0,	0, 0x18000401bULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2237 = RCR8mi
  { 2238,	2,	1,	388,	0,	0, 0x1a0000013ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2238 = RCR8r1
  { 2239,	2,	1,	388,	0,	0, 0x1a4000013ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2239 = RCR8rCL
  { 2240,	3,	1,	388,	0,	0, 0x180004013ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2240 = RCR8ri
  { 2241,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c10ULL, NULL, NULL, OperandInfo71 },  // Inst #2241 = RDFSBASE
  { 2242,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c10ULL, NULL, NULL, OperandInfo73 },  // Inst #2242 = RDFSBASE64
  { 2243,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c11ULL, NULL, NULL, OperandInfo71 },  // Inst #2243 = RDGSBASE
  { 2244,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c11ULL, NULL, NULL, OperandInfo73 },  // Inst #2244 = RDGSBASE64
  { 2245,	0,	0,	395,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x64000101ULL, NULL, NULL, 0 },  // Inst #2245 = RDMSR
  { 2246,	0,	0,	396,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x66000101ULL, NULL, NULL, 0 },  // Inst #2246 = RDPMC
  { 2247,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000156ULL, NULL, ImplicitList2, OperandInfo112 },  // Inst #2247 = RDRAND16r
  { 2248,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000116ULL, NULL, ImplicitList2, OperandInfo71 },  // Inst #2248 = RDRAND32r
  { 2249,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002116ULL, NULL, ImplicitList2, OperandInfo73 },  // Inst #2249 = RDRAND64r
  { 2250,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000157ULL, NULL, ImplicitList2, OperandInfo112 },  // Inst #2250 = RDSEED16r
  { 2251,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000117ULL, NULL, ImplicitList2, OperandInfo71 },  // Inst #2251 = RDSEED32r
  { 2252,	1,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e002117ULL, NULL, ImplicitList2, OperandInfo73 },  // Inst #2252 = RDSEED64r
  { 2253,	0,	0,	397,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x62000101ULL, NULL, ImplicitList23, 0 },  // Inst #2253 = RDTSC
  { 2254,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012eULL, NULL, ImplicitList60, 0 },  // Inst #2254 = RDTSCP
  { 2255,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo16 },  // Inst #2255 = RELEASE_MOV16mr
  { 2256,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo20 },  // Inst #2256 = RELEASE_MOV32mr
  { 2257,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo24 },  // Inst #2257 = RELEASE_MOV64mr
  { 2258,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x0ULL, NULL, NULL, OperandInfo28 },  // Inst #2258 = RELEASE_MOV8mr
  { 2259,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e4000001ULL, ImplicitList56, ImplicitList31, 0 },  // Inst #2259 = REPNE_PREFIX
  { 2260,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList61, ImplicitList61, 0 },  // Inst #2260 = REP_MOVSB_32
  { 2261,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148000201ULL, ImplicitList62, ImplicitList62, 0 },  // Inst #2261 = REP_MOVSB_64
  { 2262,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList61, ImplicitList61, 0 },  // Inst #2262 = REP_MOVSD_32
  { 2263,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000201ULL, ImplicitList62, ImplicitList62, 0 },  // Inst #2263 = REP_MOVSD_64
  { 2264,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002201ULL, ImplicitList62, ImplicitList62, 0 },  // Inst #2264 = REP_MOVSQ_64
  { 2265,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList61, ImplicitList61, 0 },  // Inst #2265 = REP_MOVSW_32
  { 2266,	0,	0,	398,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000241ULL, ImplicitList62, ImplicitList62, 0 },  // Inst #2266 = REP_MOVSW_64
  { 2267,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1e6000001ULL, ImplicitList56, ImplicitList31, 0 },  // Inst #2267 = REP_PREFIX
  { 2268,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList63, ImplicitList64, 0 },  // Inst #2268 = REP_STOSB_32
  { 2269,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x154000201ULL, ImplicitList65, ImplicitList66, 0 },  // Inst #2269 = REP_STOSB_64
  { 2270,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList67, ImplicitList64, 0 },  // Inst #2270 = REP_STOSD_32
  { 2271,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x156000201ULL, ImplicitList68, ImplicitList66, 0 },  // Inst #2271 = REP_STOSD_64
  { 2272,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x156002201ULL, ImplicitList68, ImplicitList66, 0 },  // Inst #2272 = REP_STOSQ_64
  { 2273,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList69, ImplicitList64, 0 },  // Inst #2273 = REP_STOSW_32
  { 2274,	0,	0,	399,	0,	0|(1<<MCID::MayStore), 0x156000241ULL, ImplicitList70, ImplicitList66, 0 },  // Inst #2274 = REP_STOSW_64
  { 2275,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1860e0001ULL, NULL, NULL, 0 },  // Inst #2275 = RET
  { 2276,	1,	0,	400,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::Variadic), 0x1840ec001ULL, NULL, NULL, OperandInfo2 },  // Inst #2276 = RETI
  { 2277,	1,	0,	400,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1840ec041ULL, NULL, NULL, OperandInfo2 },  // Inst #2277 = RETIW
  { 2278,	0,	0,	219,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1860e0041ULL, NULL, NULL, 0 },  // Inst #2278 = RETW
  { 2279,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x90000001ULL, NULL, NULL, 0 },  // Inst #2279 = REX64_PREFIX
  { 2280,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000058ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2280 = ROL16m1
  { 2281,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000058ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2281 = ROL16mCL
  { 2282,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2282 = ROL16mi
  { 2283,	2,	1,	388,	0,	0, 0x1a2000050ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2283 = ROL16r1
  { 2284,	2,	1,	388,	0,	0, 0x1a6000050ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2284 = ROL16rCL
  { 2285,	3,	1,	388,	0,	0, 0x182004050ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2285 = ROL16ri
  { 2286,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2286 = ROL32m1
  { 2287,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000018ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2287 = ROL32mCL
  { 2288,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2288 = ROL32mi
  { 2289,	2,	1,	388,	0,	0, 0x1a2000010ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2289 = ROL32r1
  { 2290,	2,	1,	388,	0,	0, 0x1a6000010ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2290 = ROL32rCL
  { 2291,	3,	1,	388,	0,	0, 0x182004010ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2291 = ROL32ri
  { 2292,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2292 = ROL64m1
  { 2293,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002018ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2293 = ROL64mCL
  { 2294,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2294 = ROL64mi
  { 2295,	2,	1,	388,	0,	0, 0x1a2002010ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2295 = ROL64r1
  { 2296,	2,	1,	388,	0,	0, 0x1a6002010ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2296 = ROL64rCL
  { 2297,	3,	1,	388,	0,	0, 0x182006010ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2297 = ROL64ri
  { 2298,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000018ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2298 = ROL8m1
  { 2299,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000018ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2299 = ROL8mCL
  { 2300,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2300 = ROL8mi
  { 2301,	2,	1,	388,	0,	0, 0x1a0000010ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2301 = ROL8r1
  { 2302,	2,	1,	388,	0,	0, 0x1a4000010ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2302 = ROL8rCL
  { 2303,	3,	1,	388,	0,	0, 0x180004010ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2303 = ROL8ri
  { 2304,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000059ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2304 = ROR16m1
  { 2305,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000059ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2305 = ROR16mCL
  { 2306,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004059ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2306 = ROR16mi
  { 2307,	2,	1,	388,	0,	0, 0x1a2000051ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2307 = ROR16r1
  { 2308,	2,	1,	388,	0,	0, 0x1a6000051ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2308 = ROR16rCL
  { 2309,	3,	1,	388,	0,	0, 0x182004051ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2309 = ROR16ri
  { 2310,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2000019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2310 = ROR32m1
  { 2311,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6000019ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2311 = ROR32mCL
  { 2312,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182004019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2312 = ROR32mi
  { 2313,	2,	1,	388,	0,	0, 0x1a2000011ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2313 = ROR32r1
  { 2314,	2,	1,	388,	0,	0, 0x1a6000011ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2314 = ROR32rCL
  { 2315,	3,	1,	388,	0,	0, 0x182004011ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2315 = ROR32ri
  { 2316,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a2002019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2316 = ROR64m1
  { 2317,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a6002019ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2317 = ROR64mCL
  { 2318,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x182006019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2318 = ROR64mi
  { 2319,	2,	1,	388,	0,	0, 0x1a2002011ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2319 = ROR64r1
  { 2320,	2,	1,	388,	0,	0, 0x1a6002011ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2320 = ROR64rCL
  { 2321,	3,	1,	388,	0,	0, 0x182006011ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2321 = ROR64ri
  { 2322,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a0000019ULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2322 = ROR8m1
  { 2323,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a4000019ULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2323 = ROR8mCL
  { 2324,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x180004019ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2324 = ROR8mi
  { 2325,	2,	1,	388,	0,	0, 0x1a0000011ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2325 = ROR8r1
  { 2326,	2,	1,	388,	0,	0, 0x1a4000011ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2326 = ROR8rCL
  { 2327,	3,	1,	388,	0,	0, 0x180004011ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2327 = ROR8ri
  { 2328,	7,	1,	401,	0,	0|(1<<MCID::MayLoad), 0x3e0005306ULL, NULL, NULL, OperandInfo130 },  // Inst #2328 = RORX32mi
  { 2329,	3,	1,	402,	0,	0, 0x3e0005305ULL, NULL, NULL, OperandInfo131 },  // Inst #2329 = RORX32ri
  { 2330,	7,	1,	401,	0,	0|(1<<MCID::MayLoad), 0x7e0005306ULL, NULL, NULL, OperandInfo132 },  // Inst #2330 = RORX64mi
  { 2331,	3,	1,	402,	0,	0, 0x7e0005305ULL, NULL, NULL, OperandInfo133 },  // Inst #2331 = RORX64ri
  { 2332,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x13004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2332 = ROUNDPDm
  { 2333,	3,	1,	0,	0,	0, 0x13004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2333 = ROUNDPDr
  { 2334,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x10804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2334 = ROUNDPSm
  { 2335,	3,	1,	0,	0,	0, 0x10804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2335 = ROUNDPSr
  { 2336,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x16004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #2336 = ROUNDSDm
  { 2337,	4,	1,	0,	0,	0, 0x16004e45ULL, NULL, NULL, OperandInfo90 },  // Inst #2337 = ROUNDSDr
  { 2338,	4,	1,	0,	0,	0, 0x16004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #2338 = ROUNDSDr_Int
  { 2339,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x14004e46ULL, NULL, NULL, OperandInfo64 },  // Inst #2339 = ROUNDSSm
  { 2340,	4,	1,	0,	0,	0, 0x14004e45ULL, NULL, NULL, OperandInfo92 },  // Inst #2340 = ROUNDSSr
  { 2341,	4,	1,	0,	0,	0, 0x14004e45ULL, NULL, NULL, OperandInfo65 },  // Inst #2341 = ROUNDSSr_Int
  { 2342,	0,	0,	403,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000101ULL, NULL, NULL, 0 },  // Inst #2342 = RSM
  { 2343,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2343 = RSQRTPSm
  { 2344,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0xa4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2344 = RSQRTPSm_Int
  { 2345,	2,	1,	405,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2345 = RSQRTPSr
  { 2346,	2,	1,	405,	0,	0, 0xa4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2346 = RSQRTPSr_Int
  { 2347,	6,	1,	406,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2347 = RSQRTSSm
  { 2348,	7,	1,	407,	0,	0|(1<<MCID::MayLoad), 0xa4000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2348 = RSQRTSSm_Int
  { 2349,	2,	1,	408,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2349 = RSQRTSSr
  { 2350,	3,	1,	409,	0,	0, 0xa4000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2350 = RSQRTSSr_Int
  { 2351,	0,	0,	188,	0,	0, 0x13c000001ULL, ImplicitList33, ImplicitList2, 0 },  // Inst #2351 = SAHF
  { 2352,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005fULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2352 = SAR16m1
  { 2353,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005fULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2353 = SAR16mCL
  { 2354,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2354 = SAR16mi
  { 2355,	2,	1,	388,	0,	0, 0x1a2000057ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2355 = SAR16r1
  { 2356,	2,	1,	388,	0,	0, 0x1a6000057ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2356 = SAR16rCL
  { 2357,	3,	1,	388,	0,	0, 0x182004057ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2357 = SAR16ri
  { 2358,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001fULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2358 = SAR32m1
  { 2359,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001fULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2359 = SAR32mCL
  { 2360,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2360 = SAR32mi
  { 2361,	2,	1,	388,	0,	0, 0x1a2000017ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2361 = SAR32r1
  { 2362,	2,	1,	388,	0,	0, 0x1a6000017ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2362 = SAR32rCL
  { 2363,	3,	1,	388,	0,	0, 0x182004017ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2363 = SAR32ri
  { 2364,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201fULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2364 = SAR64m1
  { 2365,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201fULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2365 = SAR64mCL
  { 2366,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2366 = SAR64mi
  { 2367,	2,	1,	388,	0,	0, 0x1a2002017ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2367 = SAR64r1
  { 2368,	2,	1,	388,	0,	0, 0x1a6002017ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2368 = SAR64rCL
  { 2369,	3,	1,	388,	0,	0, 0x182006017ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2369 = SAR64ri
  { 2370,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001fULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2370 = SAR8m1
  { 2371,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001fULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2371 = SAR8mCL
  { 2372,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401fULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2372 = SAR8mi
  { 2373,	2,	1,	388,	0,	0, 0x1a0000017ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2373 = SAR8r1
  { 2374,	2,	1,	388,	0,	0, 0x1a4000017ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2374 = SAR8rCL
  { 2375,	3,	1,	388,	0,	0, 0x180004017ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2375 = SAR8ri
  { 2376,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x13ee001206ULL, NULL, NULL, OperandInfo60 },  // Inst #2376 = SARX32rm
  { 2377,	3,	1,	402,	0,	0, 0x13ee001205ULL, NULL, NULL, OperandInfo54 },  // Inst #2377 = SARX32rr
  { 2378,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x17ee001206ULL, NULL, NULL, OperandInfo61 },  // Inst #2378 = SARX64rm
  { 2379,	3,	1,	402,	0,	0, 0x17ee001205ULL, NULL, NULL, OperandInfo56 },  // Inst #2379 = SARX64rr
  { 2380,	1,	0,	5,	0,	0, 0x3a00c041ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #2380 = SBB16i16
  { 2381,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2381 = SBB16mi
  { 2382,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2382 = SBB16mi8
  { 2383,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000044ULL, ImplicitList2, ImplicitList2, OperandInfo16 },  // Inst #2383 = SBB16mr
  { 2384,	3,	1,	5,	0,	0, 0x10200c053ULL, ImplicitList2, ImplicitList2, OperandInfo17 },  // Inst #2384 = SBB16ri
  { 2385,	3,	1,	5,	0,	0, 0x106004053ULL, ImplicitList2, ImplicitList2, OperandInfo17 },  // Inst #2385 = SBB16ri8
  { 2386,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36000046ULL, ImplicitList2, ImplicitList2, OperandInfo18 },  // Inst #2386 = SBB16rm
  { 2387,	3,	1,	5,	0,	0, 0x32000043ULL, ImplicitList2, ImplicitList2, OperandInfo19 },  // Inst #2387 = SBB16rr
  { 2388,	3,	1,	5,	0,	0, 0x36000045ULL, ImplicitList2, ImplicitList2, OperandInfo19 },  // Inst #2388 = SBB16rr_REV
  { 2389,	1,	0,	5,	0,	0, 0x3a014001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #2389 = SBB32i32
  { 2390,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2390 = SBB32mi
  { 2391,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2391 = SBB32mi8
  { 2392,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32000004ULL, ImplicitList2, ImplicitList2, OperandInfo20 },  // Inst #2392 = SBB32mr
  { 2393,	3,	1,	5,	0,	0, 0x102014013ULL, ImplicitList2, ImplicitList2, OperandInfo21 },  // Inst #2393 = SBB32ri
  { 2394,	3,	1,	5,	0,	0, 0x106004013ULL, ImplicitList2, ImplicitList2, OperandInfo21 },  // Inst #2394 = SBB32ri8
  { 2395,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36000006ULL, ImplicitList2, ImplicitList2, OperandInfo22 },  // Inst #2395 = SBB32rm
  { 2396,	3,	1,	5,	0,	0, 0x32000003ULL, ImplicitList2, ImplicitList2, OperandInfo23 },  // Inst #2396 = SBB32rr
  { 2397,	3,	1,	5,	0,	0, 0x36000005ULL, ImplicitList2, ImplicitList2, OperandInfo23 },  // Inst #2397 = SBB32rr_REV
  { 2398,	1,	0,	5,	0,	0, 0x3a016001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #2398 = SBB64i32
  { 2399,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2399 = SBB64mi32
  { 2400,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2400 = SBB64mi8
  { 2401,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x32002004ULL, ImplicitList2, ImplicitList2, OperandInfo24 },  // Inst #2401 = SBB64mr
  { 2402,	3,	1,	5,	0,	0, 0x102016013ULL, ImplicitList2, ImplicitList2, OperandInfo25 },  // Inst #2402 = SBB64ri32
  { 2403,	3,	1,	5,	0,	0, 0x106006013ULL, ImplicitList2, ImplicitList2, OperandInfo25 },  // Inst #2403 = SBB64ri8
  { 2404,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x36002006ULL, ImplicitList2, ImplicitList2, OperandInfo26 },  // Inst #2404 = SBB64rm
  { 2405,	3,	1,	5,	0,	0, 0x32002003ULL, ImplicitList2, ImplicitList2, OperandInfo27 },  // Inst #2405 = SBB64rr
  { 2406,	3,	1,	5,	0,	0, 0x36002005ULL, ImplicitList2, ImplicitList2, OperandInfo27 },  // Inst #2406 = SBB64rr_REV
  { 2407,	1,	0,	5,	0,	0, 0x38004001ULL, ImplicitList2, ImplicitList2, OperandInfo2 },  // Inst #2407 = SBB8i8
  { 2408,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401bULL, ImplicitList2, ImplicitList2, OperandInfo15 },  // Inst #2408 = SBB8mi
  { 2409,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x30000004ULL, ImplicitList2, ImplicitList2, OperandInfo28 },  // Inst #2409 = SBB8mr
  { 2410,	3,	1,	5,	0,	0, 0x100004013ULL, ImplicitList2, ImplicitList2, OperandInfo29 },  // Inst #2410 = SBB8ri
  { 2411,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x34000006ULL, ImplicitList2, ImplicitList2, OperandInfo30 },  // Inst #2411 = SBB8rm
  { 2412,	3,	1,	5,	0,	0, 0x30000003ULL, ImplicitList2, ImplicitList2, OperandInfo31 },  // Inst #2412 = SBB8rr
  { 2413,	3,	1,	5,	0,	0, 0x34000005ULL, ImplicitList2, ImplicitList2, OperandInfo31 },  // Inst #2413 = SBB8rr_REV
  { 2414,	0,	0,	411,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000041ULL, NULL, NULL, 0 },  // Inst #2414 = SCAS16
  { 2415,	0,	0,	411,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e000001ULL, NULL, NULL, 0 },  // Inst #2415 = SCAS32
  { 2416,	0,	0,	411,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15e002001ULL, NULL, NULL, 0 },  // Inst #2416 = SCAS64
  { 2417,	0,	0,	411,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c000001ULL, NULL, NULL, 0 },  // Inst #2417 = SCAS8
  { 2418,	2,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList7, ImplicitList71, OperandInfo32 },  // Inst #2418 = SEG_ALLOCA_32
  { 2419,	2,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList9, ImplicitList72, OperandInfo33 },  // Inst #2419 = SEG_ALLOCA_64
  { 2420,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x126000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2420 = SETAEm
  { 2421,	1,	1,	413,	0,	0, 0x126000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2421 = SETAEr
  { 2422,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x12e000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2422 = SETAm
  { 2423,	1,	1,	413,	0,	0, 0x12e000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2423 = SETAr
  { 2424,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x12c000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2424 = SETBEm
  { 2425,	1,	1,	413,	0,	0, 0x12c000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2425 = SETBEr
  { 2426,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo112 },  // Inst #2426 = SETB_C16r
  { 2427,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo71 },  // Inst #2427 = SETB_C32r
  { 2428,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo73 },  // Inst #2428 = SETB_C64r
  { 2429,	1,	1,	9,	0,	0|(1<<MCID::Pseudo), 0x0ULL, ImplicitList2, ImplicitList2, OperandInfo113 },  // Inst #2429 = SETB_C8r
  { 2430,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x124000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2430 = SETBm
  { 2431,	1,	1,	413,	0,	0, 0x124000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2431 = SETBr
  { 2432,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x128000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2432 = SETEm
  { 2433,	1,	1,	413,	0,	0, 0x128000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2433 = SETEr
  { 2434,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x13a000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2434 = SETGEm
  { 2435,	1,	1,	413,	0,	0, 0x13a000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2435 = SETGEr
  { 2436,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x13e000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2436 = SETGm
  { 2437,	1,	1,	413,	0,	0, 0x13e000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2437 = SETGr
  { 2438,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x13c000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2438 = SETLEm
  { 2439,	1,	1,	413,	0,	0, 0x13c000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2439 = SETLEr
  { 2440,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x138000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2440 = SETLm
  { 2441,	1,	1,	413,	0,	0, 0x138000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2441 = SETLr
  { 2442,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x12a000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2442 = SETNEm
  { 2443,	1,	1,	413,	0,	0, 0x12a000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2443 = SETNEr
  { 2444,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x122000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2444 = SETNOm
  { 2445,	1,	1,	413,	0,	0, 0x122000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2445 = SETNOr
  { 2446,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x136000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2446 = SETNPm
  { 2447,	1,	1,	413,	0,	0, 0x136000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2447 = SETNPr
  { 2448,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x132000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2448 = SETNSm
  { 2449,	1,	1,	413,	0,	0, 0x132000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2449 = SETNSr
  { 2450,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x120000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2450 = SETOm
  { 2451,	1,	1,	413,	0,	0, 0x120000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2451 = SETOr
  { 2452,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x134000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2452 = SETPm
  { 2453,	1,	1,	413,	0,	0, 0x134000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2453 = SETPr
  { 2454,	5,	0,	412,	0,	0|(1<<MCID::MayStore), 0x130000118ULL, ImplicitList2, NULL, OperandInfo40 },  // Inst #2454 = SETSm
  { 2455,	1,	1,	413,	0,	0, 0x130000110ULL, ImplicitList2, NULL, OperandInfo113 },  // Inst #2455 = SETSr
  { 2456,	0,	0,	414,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c00012dULL, NULL, NULL, 0 },  // Inst #2456 = SFENCE
  { 2457,	5,	1,	415,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000158ULL, NULL, NULL, OperandInfo40 },  // Inst #2457 = SGDT16m
  { 2458,	5,	1,	415,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000118ULL, NULL, NULL, OperandInfo40 },  // Inst #2458 = SGDTm
  { 2459,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005cULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2459 = SHL16m1
  { 2460,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005cULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2460 = SHL16mCL
  { 2461,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2461 = SHL16mi
  { 2462,	2,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2000054ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2462 = SHL16r1
  { 2463,	2,	1,	388,	0,	0, 0x1a6000054ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2463 = SHL16rCL
  { 2464,	3,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004054ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2464 = SHL16ri
  { 2465,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001cULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2465 = SHL32m1
  { 2466,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001cULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2466 = SHL32mCL
  { 2467,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2467 = SHL32mi
  { 2468,	2,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2000014ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2468 = SHL32r1
  { 2469,	2,	1,	388,	0,	0, 0x1a6000014ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2469 = SHL32rCL
  { 2470,	3,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182004014ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2470 = SHL32ri
  { 2471,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201cULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2471 = SHL64m1
  { 2472,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201cULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2472 = SHL64mCL
  { 2473,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2473 = SHL64mi
  { 2474,	2,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a2002014ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2474 = SHL64r1
  { 2475,	2,	1,	388,	0,	0, 0x1a6002014ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2475 = SHL64rCL
  { 2476,	3,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x182006014ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2476 = SHL64ri
  { 2477,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001cULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2477 = SHL8m1
  { 2478,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001cULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2478 = SHL8mCL
  { 2479,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401cULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2479 = SHL8mi
  { 2480,	2,	1,	388,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x1a0000014ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2480 = SHL8r1
  { 2481,	2,	1,	388,	0,	0, 0x1a4000014ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2481 = SHL8rCL
  { 2482,	3,	1,	388,	0,	0, 0x180004014ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2482 = SHL8ri
  { 2483,	6,	0,	416,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000144ULL, ImplicitList59, ImplicitList2, OperandInfo16 },  // Inst #2483 = SHLD16mrCL
  { 2484,	7,	0,	417,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004144ULL, NULL, ImplicitList2, OperandInfo214 },  // Inst #2484 = SHLD16mri8
  { 2485,	3,	1,	418,	0,	0, 0x14a000143ULL, ImplicitList59, ImplicitList2, OperandInfo19 },  // Inst #2485 = SHLD16rrCL
  { 2486,	4,	1,	419,	0,	0|(1<<MCID::Commutable), 0x148004143ULL, NULL, ImplicitList2, OperandInfo215 },  // Inst #2486 = SHLD16rri8
  { 2487,	6,	0,	420,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a000104ULL, ImplicitList59, ImplicitList2, OperandInfo20 },  // Inst #2487 = SHLD32mrCL
  { 2488,	7,	0,	421,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148004104ULL, NULL, ImplicitList2, OperandInfo216 },  // Inst #2488 = SHLD32mri8
  { 2489,	3,	1,	422,	0,	0, 0x14a000103ULL, ImplicitList59, ImplicitList2, OperandInfo23 },  // Inst #2489 = SHLD32rrCL
  { 2490,	4,	1,	423,	0,	0|(1<<MCID::Commutable), 0x148004103ULL, NULL, ImplicitList2, OperandInfo217 },  // Inst #2490 = SHLD32rri8
  { 2491,	6,	0,	424,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x14a002104ULL, ImplicitList59, ImplicitList2, OperandInfo24 },  // Inst #2491 = SHLD64mrCL
  { 2492,	7,	0,	425,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x148006104ULL, NULL, ImplicitList2, OperandInfo218 },  // Inst #2492 = SHLD64mri8
  { 2493,	3,	1,	426,	0,	0, 0x14a002103ULL, ImplicitList59, ImplicitList2, OperandInfo27 },  // Inst #2493 = SHLD64rrCL
  { 2494,	4,	1,	427,	0,	0|(1<<MCID::Commutable), 0x148006103ULL, NULL, ImplicitList2, OperandInfo219 },  // Inst #2494 = SHLD64rri8
  { 2495,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x13ee000d46ULL, NULL, NULL, OperandInfo60 },  // Inst #2495 = SHLX32rm
  { 2496,	3,	1,	402,	0,	0, 0x13ee000d45ULL, NULL, NULL, OperandInfo54 },  // Inst #2496 = SHLX32rr
  { 2497,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x17ee000d46ULL, NULL, NULL, OperandInfo61 },  // Inst #2497 = SHLX64rm
  { 2498,	3,	1,	402,	0,	0, 0x17ee000d45ULL, NULL, NULL, OperandInfo56 },  // Inst #2498 = SHLX64rr
  { 2499,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200005dULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2499 = SHR16m1
  { 2500,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600005dULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2500 = SHR16mCL
  { 2501,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200405dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2501 = SHR16mi
  { 2502,	2,	1,	388,	0,	0, 0x1a2000055ULL, NULL, ImplicitList2, OperandInfo110 },  // Inst #2502 = SHR16r1
  { 2503,	2,	1,	388,	0,	0, 0x1a6000055ULL, ImplicitList59, ImplicitList2, OperandInfo110 },  // Inst #2503 = SHR16rCL
  { 2504,	3,	1,	388,	0,	0, 0x182004055ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2504 = SHR16ri
  { 2505,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200001dULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2505 = SHR32m1
  { 2506,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600001dULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2506 = SHR32mCL
  { 2507,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2507 = SHR32mi
  { 2508,	2,	1,	388,	0,	0, 0x1a2000015ULL, NULL, ImplicitList2, OperandInfo66 },  // Inst #2508 = SHR32r1
  { 2509,	2,	1,	388,	0,	0, 0x1a6000015ULL, ImplicitList59, ImplicitList2, OperandInfo66 },  // Inst #2509 = SHR32rCL
  { 2510,	3,	1,	388,	0,	0, 0x182004015ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2510 = SHR32ri
  { 2511,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a200201dULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2511 = SHR64m1
  { 2512,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a600201dULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2512 = SHR64mCL
  { 2513,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18200601dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2513 = SHR64mi
  { 2514,	2,	1,	388,	0,	0, 0x1a2002015ULL, NULL, ImplicitList2, OperandInfo67 },  // Inst #2514 = SHR64r1
  { 2515,	2,	1,	388,	0,	0, 0x1a6002015ULL, ImplicitList59, ImplicitList2, OperandInfo67 },  // Inst #2515 = SHR64rCL
  { 2516,	3,	1,	388,	0,	0, 0x182006015ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2516 = SHR64ri
  { 2517,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a000001dULL, NULL, ImplicitList2, OperandInfo40 },  // Inst #2517 = SHR8m1
  { 2518,	5,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x1a400001dULL, ImplicitList59, ImplicitList2, OperandInfo40 },  // Inst #2518 = SHR8mCL
  { 2519,	6,	0,	387,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x18000401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2519 = SHR8mi
  { 2520,	2,	1,	388,	0,	0, 0x1a0000015ULL, NULL, ImplicitList2, OperandInfo111 },  // Inst #2520 = SHR8r1
  { 2521,	2,	1,	388,	0,	0, 0x1a4000015ULL, ImplicitList59, ImplicitList2, OperandInfo111 },  // Inst #2521 = SHR8rCL
  { 2522,	3,	1,	388,	0,	0, 0x180004015ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2522 = SHR8ri
  { 2523,	6,	0,	416,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000144ULL, ImplicitList59, ImplicitList2, OperandInfo16 },  // Inst #2523 = SHRD16mrCL
  { 2524,	7,	0,	417,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004144ULL, NULL, ImplicitList2, OperandInfo214 },  // Inst #2524 = SHRD16mri8
  { 2525,	3,	1,	418,	0,	0, 0x15a000143ULL, ImplicitList59, ImplicitList2, OperandInfo19 },  // Inst #2525 = SHRD16rrCL
  { 2526,	4,	1,	419,	0,	0|(1<<MCID::Commutable), 0x158004143ULL, NULL, ImplicitList2, OperandInfo215 },  // Inst #2526 = SHRD16rri8
  { 2527,	6,	0,	420,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a000104ULL, ImplicitList59, ImplicitList2, OperandInfo20 },  // Inst #2527 = SHRD32mrCL
  { 2528,	7,	0,	421,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158004104ULL, NULL, ImplicitList2, OperandInfo216 },  // Inst #2528 = SHRD32mri8
  { 2529,	3,	1,	422,	0,	0, 0x15a000103ULL, ImplicitList59, ImplicitList2, OperandInfo23 },  // Inst #2529 = SHRD32rrCL
  { 2530,	4,	1,	423,	0,	0|(1<<MCID::Commutable), 0x158004103ULL, NULL, ImplicitList2, OperandInfo217 },  // Inst #2530 = SHRD32rri8
  { 2531,	6,	0,	424,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x15a002104ULL, ImplicitList59, ImplicitList2, OperandInfo24 },  // Inst #2531 = SHRD64mrCL
  { 2532,	7,	0,	425,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x158006104ULL, NULL, ImplicitList2, OperandInfo218 },  // Inst #2532 = SHRD64mri8
  { 2533,	3,	1,	426,	0,	0, 0x15a002103ULL, ImplicitList59, ImplicitList2, OperandInfo27 },  // Inst #2533 = SHRD64rrCL
  { 2534,	4,	1,	427,	0,	0|(1<<MCID::Commutable), 0x158006103ULL, NULL, ImplicitList2, OperandInfo219 },  // Inst #2534 = SHRD64rri8
  { 2535,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x13ee001106ULL, NULL, NULL, OperandInfo60 },  // Inst #2535 = SHRX32rm
  { 2536,	3,	1,	402,	0,	0, 0x13ee001105ULL, NULL, NULL, OperandInfo54 },  // Inst #2536 = SHRX32rr
  { 2537,	7,	1,	410,	0,	0|(1<<MCID::MayLoad), 0x17ee001106ULL, NULL, NULL, OperandInfo61 },  // Inst #2537 = SHRX64rm
  { 2538,	3,	1,	402,	0,	0, 0x17ee001105ULL, NULL, NULL, OperandInfo56 },  // Inst #2538 = SHRX64rr
  { 2539,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0x18d004146ULL, NULL, NULL, OperandInfo64 },  // Inst #2539 = SHUFPDrmi
  { 2540,	4,	1,	429,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18d004145ULL, NULL, NULL, OperandInfo65 },  // Inst #2540 = SHUFPDrri
  { 2541,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0x18c804106ULL, NULL, NULL, OperandInfo64 },  // Inst #2541 = SHUFPSrmi
  { 2542,	4,	1,	429,	0,	0|(1<<MCID::ConvertibleTo3Addr), 0x18c804105ULL, NULL, NULL, OperandInfo65 },  // Inst #2542 = SHUFPSrri
  { 2543,	5,	1,	430,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000159ULL, NULL, NULL, OperandInfo40 },  // Inst #2543 = SIDT16m
  { 2544,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000119ULL, NULL, NULL, OperandInfo40 },  // Inst #2544 = SIDTm
  { 2545,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fc000401ULL, NULL, ImplicitList1, 0 },  // Inst #2545 = SIN_F
  { 2546,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2546 = SIN_Fp32
  { 2547,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2547 = SIN_Fp64
  { 2548,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2548 = SIN_Fp80
  { 2549,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200013aULL, ImplicitList4, NULL, 0 },  // Inst #2549 = SKINIT
  { 2550,	5,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x118ULL, NULL, NULL, OperandInfo40 },  // Inst #2550 = SLDT16m
  { 2551,	1,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x150ULL, NULL, NULL, OperandInfo112 },  // Inst #2551 = SLDT16r
  { 2552,	1,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x110ULL, NULL, NULL, OperandInfo71 },  // Inst #2552 = SLDT32r
  { 2553,	5,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2118ULL, NULL, NULL, OperandInfo40 },  // Inst #2553 = SLDT64m
  { 2554,	1,	1,	431,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2110ULL, NULL, NULL, OperandInfo73 },  // Inst #2554 = SLDT64r
  { 2555,	5,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200011cULL, NULL, NULL, OperandInfo40 },  // Inst #2555 = SMSW16m
  { 2556,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000154ULL, NULL, NULL, OperandInfo112 },  // Inst #2556 = SMSW16r
  { 2557,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000114ULL, NULL, NULL, OperandInfo71 },  // Inst #2557 = SMSW32r
  { 2558,	1,	1,	432,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2002114ULL, NULL, NULL, OperandInfo73 },  // Inst #2558 = SMSW64r
  { 2559,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0xa3000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2559 = SQRTPDm
  { 2560,	2,	1,	405,	0,	0, 0xa3000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2560 = SQRTPDr
  { 2561,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0xa2800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2561 = SQRTPSm
  { 2562,	2,	1,	405,	0,	0, 0xa2800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2562 = SQRTPSr
  { 2563,	6,	1,	406,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #2563 = SQRTSDm
  { 2564,	6,	1,	406,	0,	0|(1<<MCID::MayLoad), 0xa2000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2564 = SQRTSDm_Int
  { 2565,	2,	1,	409,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo123 },  // Inst #2565 = SQRTSDr
  { 2566,	2,	1,	409,	0,	0, 0xa2000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #2566 = SQRTSDr_Int
  { 2567,	6,	1,	406,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #2567 = SQRTSSm
  { 2568,	6,	1,	406,	0,	0|(1<<MCID::MayLoad), 0xa2000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2568 = SQRTSSm_Int
  { 2569,	2,	1,	408,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo124 },  // Inst #2569 = SQRTSSr
  { 2570,	2,	1,	409,	0,	0, 0xa2000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2570 = SQRTSSr_Int
  { 2571,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f4000401ULL, NULL, ImplicitList1, 0 },  // Inst #2571 = SQRT_F
  { 2572,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2572 = SQRT_Fp32
  { 2573,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2573 = SQRT_Fp64
  { 2574,	2,	1,	0,	0,	0, 0x60000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2574 = SQRT_Fp80
  { 2575,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6c000001ULL, NULL, NULL, 0 },  // Inst #2575 = SS_PREFIX
  { 2576,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000128ULL, ImplicitList2, ImplicitList2, 0 },  // Inst #2576 = STAC
  { 2577,	0,	0,	433,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f2000001ULL, NULL, NULL, 0 },  // Inst #2577 = STC
  { 2578,	0,	0,	434,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1fa000001ULL, NULL, NULL, 0 },  // Inst #2578 = STD
  { 2579,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000138ULL, NULL, NULL, 0 },  // Inst #2579 = STGI
  { 2580,	0,	0,	435,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1f6000001ULL, NULL, NULL, 0 },  // Inst #2580 = STI
  { 2581,	5,	0,	436,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c80011bULL, NULL, NULL, OperandInfo40 },  // Inst #2581 = STMXCSR
  { 2582,	0,	0,	437,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x154000001ULL, ImplicitList73, ImplicitList40, 0 },  // Inst #2582 = STOSB
  { 2583,	0,	0,	437,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000001ULL, ImplicitList74, ImplicitList40, 0 },  // Inst #2583 = STOSD
  { 2584,	0,	0,	437,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156002001ULL, ImplicitList75, ImplicitList66, 0 },  // Inst #2584 = STOSQ
  { 2585,	0,	0,	437,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x156000041ULL, ImplicitList76, ImplicitList40, 0 },  // Inst #2585 = STOSW
  { 2586,	1,	1,	438,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x151ULL, NULL, NULL, OperandInfo112 },  // Inst #2586 = STR16r
  { 2587,	1,	1,	438,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x111ULL, NULL, NULL, OperandInfo71 },  // Inst #2587 = STR32r
  { 2588,	1,	1,	438,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2111ULL, NULL, NULL, OperandInfo73 },  // Inst #2588 = STR64r
  { 2589,	5,	1,	438,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x119ULL, NULL, NULL, OperandInfo40 },  // Inst #2589 = STRm
  { 2590,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2590 = ST_F32m
  { 2591,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001aULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2591 = ST_F64m
  { 2592,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b200001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2592 = ST_FP32m
  { 2593,	5,	0,	178,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1ba00001bULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2593 = ST_FP64m
  { 2594,	5,	0,	439,	0,	0|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x1b600001fULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2594 = ST_FP80m
  { 2595,	1,	0,	440,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0000802ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #2595 = ST_FPrr
  { 2596,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #2596 = ST_Fp32m
  { 2597,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2597 = ST_Fp64m
  { 2598,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2598 = ST_Fp64m32
  { 2599,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2599 = ST_Fp80m32
  { 2600,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2600 = ST_Fp80m64
  { 2601,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo117 },  // Inst #2601 = ST_FpP32m
  { 2602,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2602 = ST_FpP64m
  { 2603,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo118 },  // Inst #2603 = ST_FpP64m32
  { 2604,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2604 = ST_FpP80m
  { 2605,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2605 = ST_FpP80m32
  { 2606,	6,	0,	0,	0,	0|(1<<MCID::MayStore), 0x40000ULL, NULL, ImplicitList1, OperandInfo119 },  // Inst #2606 = ST_FpP80m64
  { 2607,	1,	0,	440,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000802ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #2607 = ST_Frr
  { 2608,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #2608 = SUB16i16
  { 2609,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2609 = SUB16mi
  { 2610,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2610 = SUB16mi8
  { 2611,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #2611 = SUB16mr
  { 2612,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x10200c055ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2612 = SUB16ri
  { 2613,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106004055ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #2613 = SUB16ri8
  { 2614,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56000046ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #2614 = SUB16rm
  { 2615,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52000043ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #2615 = SUB16rr
  { 2616,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56000045ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #2616 = SUB16rr_REV
  { 2617,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #2617 = SUB32i32
  { 2618,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2618 = SUB32mi
  { 2619,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2619 = SUB32mi8
  { 2620,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #2620 = SUB32mr
  { 2621,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x102014015ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2621 = SUB32ri
  { 2622,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106004015ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #2622 = SUB32ri8
  { 2623,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56000006ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #2623 = SUB32rm
  { 2624,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52000003ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #2624 = SUB32rr
  { 2625,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56000005ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #2625 = SUB32rr_REV
  { 2626,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x5a016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #2626 = SUB64i32
  { 2627,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2627 = SUB64mi32
  { 2628,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2628 = SUB64mi8
  { 2629,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x52002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #2629 = SUB64mr
  { 2630,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x102016015ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2630 = SUB64ri32
  { 2631,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x106006015ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #2631 = SUB64ri8
  { 2632,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x56002006ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #2632 = SUB64rm
  { 2633,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x52002003ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #2633 = SUB64rr
  { 2634,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x56002005ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #2634 = SUB64rr_REV
  { 2635,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x58004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #2635 = SUB8i8
  { 2636,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401dULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2636 = SUB8mi
  { 2637,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x50000004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #2637 = SUB8mr
  { 2638,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x100004015ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #2638 = SUB8ri
  { 2639,	7,	1,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x54000006ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #2639 = SUB8rm
  { 2640,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x50000003ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #2640 = SUB8rr
  { 2641,	3,	1,	5,	0,	0|(1<<MCID::Compare), 0x54000005ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #2641 = SUB8rr_REV
  { 2642,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xb9000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2642 = SUBPDrm
  { 2643,	3,	1,	11,	0,	0, 0xb9000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2643 = SUBPDrr
  { 2644,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xb8800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2644 = SUBPSrm
  { 2645,	3,	1,	13,	0,	0, 0xb8800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2645 = SUBPSrr
  { 2646,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2646 = SUBR_F32m
  { 2647,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2647 = SUBR_F64m
  { 2648,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2648 = SUBR_FI16m
  { 2649,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001dULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2649 = SUBR_FI32m
  { 2650,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #2650 = SUBR_FPrST0
  { 2651,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #2651 = SUBR_FST0r
  { 2652,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2652 = SUBR_Fp32m
  { 2653,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2653 = SUBR_Fp64m
  { 2654,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2654 = SUBR_Fp64m32
  { 2655,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2655 = SUBR_Fp80m32
  { 2656,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2656 = SUBR_Fp80m64
  { 2657,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2657 = SUBR_FpI16m32
  { 2658,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2658 = SUBR_FpI16m64
  { 2659,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2659 = SUBR_FpI16m80
  { 2660,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2660 = SUBR_FpI32m32
  { 2661,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2661 = SUBR_FpI32m64
  { 2662,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2662 = SUBR_FpI32m80
  { 2663,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #2663 = SUBR_FrST0
  { 2664,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo36 },  // Inst #2664 = SUBSDrm
  { 2665,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0xb8000b06ULL, NULL, NULL, OperandInfo34 },  // Inst #2665 = SUBSDrm_Int
  { 2666,	3,	1,	15,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo37 },  // Inst #2666 = SUBSDrr
  { 2667,	3,	1,	15,	0,	0, 0xb8000b05ULL, NULL, NULL, OperandInfo35 },  // Inst #2667 = SUBSDrr_Int
  { 2668,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo38 },  // Inst #2668 = SUBSSrm
  { 2669,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0xb8000c06ULL, NULL, NULL, OperandInfo34 },  // Inst #2669 = SUBSSrm_Int
  { 2670,	3,	1,	17,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo39 },  // Inst #2670 = SUBSSrr
  { 2671,	3,	1,	17,	0,	0, 0xb8000c05ULL, NULL, NULL, OperandInfo35 },  // Inst #2671 = SUBSSrr_Int
  { 2672,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b000001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2672 = SUB_F32m
  { 2673,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b800001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2673 = SUB_F64m
  { 2674,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1bc00001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2674 = SUB_FI16m
  { 2675,	5,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1b400001cULL, NULL, ImplicitList1, OperandInfo40 },  // Inst #2675 = SUB_FI32m
  { 2676,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000902ULL, NULL, NULL, OperandInfo41 },  // Inst #2676 = SUB_FPrST0
  { 2677,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000302ULL, NULL, NULL, OperandInfo41 },  // Inst #2677 = SUB_FST0r
  { 2678,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo42 },  // Inst #2678 = SUB_Fp32
  { 2679,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2679 = SUB_Fp32m
  { 2680,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo44 },  // Inst #2680 = SUB_Fp64
  { 2681,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2681 = SUB_Fp64m
  { 2682,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2682 = SUB_Fp64m32
  { 2683,	3,	1,	0,	0,	0, 0x80000ULL, NULL, ImplicitList1, OperandInfo46 },  // Inst #2683 = SUB_Fp80
  { 2684,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2684 = SUB_Fp80m32
  { 2685,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2685 = SUB_Fp80m64
  { 2686,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2686 = SUB_FpI16m32
  { 2687,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2687 = SUB_FpI16m64
  { 2688,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2688 = SUB_FpI16m80
  { 2689,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo43 },  // Inst #2689 = SUB_FpI32m32
  { 2690,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo45 },  // Inst #2690 = SUB_FpI32m64
  { 2691,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x60000ULL, NULL, ImplicitList1, OperandInfo47 },  // Inst #2691 = SUB_FpI32m80
  { 2692,	1,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000702ULL, NULL, NULL, OperandInfo41 },  // Inst #2692 = SUB_FrST0
  { 2693,	0,	0,	441,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012dULL, NULL, NULL, 0 },  // Inst #2693 = SWAPGS
  { 2694,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xa000101ULL, NULL, NULL, 0 },  // Inst #2694 = SYSCALL
  { 2695,	0,	0,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x68000101ULL, NULL, NULL, 0 },  // Inst #2695 = SYSENTER
  { 2696,	0,	0,	443,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a000101ULL, NULL, NULL, 0 },  // Inst #2696 = SYSEXIT
  { 2697,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6a002101ULL, NULL, NULL, 0 },  // Inst #2697 = SYSEXIT64
  { 2698,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe000101ULL, NULL, NULL, 0 },  // Inst #2698 = SYSRET
  { 2699,	0,	0,	442,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xe002101ULL, NULL, NULL, 0 },  // Inst #2699 = SYSRET64
  { 2700,	1,	0,	444,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList7, NULL, OperandInfo72 },  // Inst #2700 = TAILJMPd
  { 2701,	1,	0,	187,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1d2018001ULL, ImplicitList9, NULL, OperandInfo72 },  // Inst #2701 = TAILJMPd64
  { 2702,	5,	0,	185,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList7, NULL, OperandInfo220 },  // Inst #2702 = TAILJMPm
  { 2703,	5,	0,	445,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1fe00001cULL, ImplicitList9, NULL, OperandInfo220 },  // Inst #2703 = TAILJMPm64
  { 2704,	1,	0,	446,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList7, NULL, OperandInfo221 },  // Inst #2704 = TAILJMPr
  { 2705,	1,	0,	445,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x1fe000014ULL, ImplicitList9, NULL, OperandInfo221 },  // Inst #2705 = TAILJMPr64
  { 2706,	2,	0,	447,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList7, NULL, OperandInfo205 },  // Inst #2706 = TCRETURNdi
  { 2707,	2,	0,	448,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList9, NULL, OperandInfo205 },  // Inst #2707 = TCRETURNdi64
  { 2708,	6,	0,	447,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator), 0x0ULL, ImplicitList7, NULL, OperandInfo222 },  // Inst #2708 = TCRETURNmi
  { 2709,	6,	0,	448,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::MayLoad)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList9, NULL, OperandInfo222 },  // Inst #2709 = TCRETURNmi64
  { 2710,	2,	0,	447,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator), 0x0ULL, ImplicitList7, NULL, OperandInfo223 },  // Inst #2710 = TCRETURNri
  { 2711,	2,	0,	448,	0,	0|(1<<MCID::Return)|(1<<MCID::Barrier)|(1<<MCID::Call)|(1<<MCID::Terminator)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList9, NULL, OperandInfo223 },  // Inst #2711 = TCRETURNri64
  { 2712,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x15200c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #2712 = TEST16i16
  { 2713,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee00c058ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2713 = TEST16mi
  { 2714,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee00c050ULL, NULL, ImplicitList2, OperandInfo68 },  // Inst #2714 = TEST16ri
  { 2715,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a000046ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #2715 = TEST16rm
  { 2716,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a000045ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #2716 = TEST16rr
  { 2717,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x152014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #2717 = TEST32i32
  { 2718,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee014018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2718 = TEST32mi
  { 2719,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee014010ULL, NULL, ImplicitList2, OperandInfo69 },  // Inst #2719 = TEST32ri
  { 2720,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a000006ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #2720 = TEST32rm
  { 2721,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a000005ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #2721 = TEST32rr
  { 2722,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x152016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #2722 = TEST64i32
  { 2723,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ee016018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2723 = TEST64mi32
  { 2724,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ee016010ULL, NULL, ImplicitList2, OperandInfo70 },  // Inst #2724 = TEST64ri32
  { 2725,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x10a002006ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #2725 = TEST64rm
  { 2726,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x10a002005ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #2726 = TEST64rr
  { 2727,	1,	0,	5,	0,	0|(1<<MCID::Compare), 0x150004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #2727 = TEST8i8
  { 2728,	6,	0,	6,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x1ec004018ULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #2728 = TEST8mi
  { 2729,	2,	0,	5,	0,	0|(1<<MCID::Compare), 0x1ec004010ULL, NULL, ImplicitList2, OperandInfo87 },  // Inst #2729 = TEST8ri
  { 2730,	2,	0,	5,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::Compare)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, ImplicitList2, OperandInfo224 },  // Inst #2730 = TEST8ri_NOREX
  { 2731,	6,	0,	7,	0,	0|(1<<MCID::Compare)|(1<<MCID::MayLoad), 0x108000006ULL, NULL, ImplicitList2, OperandInfo14 },  // Inst #2731 = TEST8rm
  { 2732,	2,	0,	5,	0,	0|(1<<MCID::Compare)|(1<<MCID::Commutable), 0x108000005ULL, NULL, ImplicitList2, OperandInfo88 },  // Inst #2732 = TEST8rr
  { 2733,	1,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #2733 = THREAD_POINTER_FROM_GS
  { 2734,	5,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList7, ImplicitList77, OperandInfo40 },  // Inst #2734 = TLSCall_32
  { 2735,	5,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList78, ImplicitList36, OperandInfo40 },  // Inst #2735 = TLSCall_64
  { 2736,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList7, ImplicitList50, OperandInfo40 },  // Inst #2736 = TLS_addr32
  { 2737,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #2737 = TLS_addr64
  { 2738,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList7, ImplicitList50, OperandInfo40 },  // Inst #2738 = TLS_base_addr32
  { 2739,	5,	0,	0,	0,	0, 0x0ULL, ImplicitList9, ImplicitList51, OperandInfo40 },  // Inst #2739 = TLS_base_addr64
  { 2740,	0,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x16000101ULL, NULL, NULL, 0 },  // Inst #2740 = TRAP
  { 2741,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c8000401ULL, NULL, ImplicitList1, 0 },  // Inst #2741 = TST_F
  { 2742,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo143 },  // Inst #2742 = TST_Fp32
  { 2743,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo144 },  // Inst #2743 = TST_Fp64
  { 2744,	1,	0,	0,	0,	0, 0x40000ULL, NULL, ImplicitList1, OperandInfo120 },  // Inst #2744 = TST_Fp80
  { 2745,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178000c46ULL, NULL, ImplicitList2, OperandInfo11 },  // Inst #2745 = TZCNT16rm
  { 2746,	2,	1,	0,	0,	0, 0x178000c45ULL, NULL, ImplicitList2, OperandInfo57 },  // Inst #2746 = TZCNT16rr
  { 2747,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178000c06ULL, NULL, ImplicitList2, OperandInfo12 },  // Inst #2747 = TZCNT32rm
  { 2748,	2,	1,	0,	0,	0, 0x178000c05ULL, NULL, ImplicitList2, OperandInfo32 },  // Inst #2748 = TZCNT32rr
  { 2749,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x178002c06ULL, NULL, ImplicitList2, OperandInfo13 },  // Inst #2749 = TZCNT64rm
  { 2750,	2,	1,	0,	0,	0, 0x178002c05ULL, NULL, ImplicitList2, OperandInfo33 },  // Inst #2750 = TZCNT64rr
  { 2751,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5d000146ULL, NULL, ImplicitList2, OperandInfo100 },  // Inst #2751 = UCOMISDrm
  { 2752,	2,	0,	63,	0,	0, 0x5d000145ULL, NULL, ImplicitList2, OperandInfo123 },  // Inst #2752 = UCOMISDrr
  { 2753,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x5c800106ULL, NULL, ImplicitList2, OperandInfo98 },  // Inst #2753 = UCOMISSrm
  { 2754,	2,	0,	63,	0,	0, 0x5c800105ULL, NULL, ImplicitList2, OperandInfo124 },  // Inst #2754 = UCOMISSrr
  { 2755,	1,	0,	449,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000a02ULL, ImplicitList79, ImplicitList22, OperandInfo41 },  // Inst #2755 = UCOM_FIPr
  { 2756,	1,	0,	449,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000602ULL, ImplicitList79, ImplicitList22, OperandInfo41 },  // Inst #2756 = UCOM_FIr
  { 2757,	0,	0,	450,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d2000501ULL, ImplicitList79, ImplicitList1, 0 },  // Inst #2757 = UCOM_FPPr
  { 2758,	1,	0,	450,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0000802ULL, ImplicitList79, ImplicitList1, OperandInfo41 },  // Inst #2758 = UCOM_FPr
  { 2759,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList22, OperandInfo8 },  // Inst #2759 = UCOM_FpIr32
  { 2760,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList22, OperandInfo9 },  // Inst #2760 = UCOM_FpIr64
  { 2761,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList22, OperandInfo10 },  // Inst #2761 = UCOM_FpIr80
  { 2762,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo8 },  // Inst #2762 = UCOM_Fpr32
  { 2763,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo9 },  // Inst #2763 = UCOM_Fpr64
  { 2764,	2,	0,	451,	0,	0, 0xa0000ULL, NULL, ImplicitList1, OperandInfo10 },  // Inst #2764 = UCOM_Fpr80
  { 2765,	1,	0,	450,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0000802ULL, ImplicitList79, ImplicitList1, OperandInfo41 },  // Inst #2765 = UCOM_Fr
  { 2766,	0,	0,	105,	0,	0|(1<<MCID::Barrier)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x172000101ULL, NULL, NULL, 0 },  // Inst #2766 = UD2B
  { 2767,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x2b000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2767 = UNPCKHPDrm
  { 2768,	3,	1,	379,	0,	0, 0x2b000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2768 = UNPCKHPDrr
  { 2769,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x2a800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2769 = UNPCKHPSrm
  { 2770,	3,	1,	379,	0,	0, 0x2a800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2770 = UNPCKHPSrr
  { 2771,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x29000146ULL, NULL, NULL, OperandInfo34 },  // Inst #2771 = UNPCKLPDrm
  { 2772,	3,	1,	379,	0,	0, 0x29000145ULL, NULL, NULL, OperandInfo35 },  // Inst #2772 = UNPCKLPDrr
  { 2773,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x28800106ULL, NULL, NULL, OperandInfo34 },  // Inst #2773 = UNPCKLPSrm
  { 2774,	3,	1,	379,	0,	0, 0x28800105ULL, NULL, NULL, OperandInfo35 },  // Inst #2774 = UNPCKLPSrr
  { 2775,	9,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo225 },  // Inst #2775 = VAARG_64
  { 2776,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4ab1000146ULL, NULL, NULL, OperandInfo226 },  // Inst #2776 = VADDPDYrm
  { 2777,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4ab1000145ULL, NULL, NULL, OperandInfo227 },  // Inst #2777 = VADDPDYrr
  { 2778,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xab1000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2778 = VADDPDrm
  { 2779,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xab1000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2779 = VADDPDrr
  { 2780,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4ab0800106ULL, NULL, NULL, OperandInfo226 },  // Inst #2780 = VADDPSYrm
  { 2781,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4ab0800105ULL, NULL, NULL, OperandInfo227 },  // Inst #2781 = VADDPSYrr
  { 2782,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xab0800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2782 = VADDPSrm
  { 2783,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xab0800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2783 = VADDPSrr
  { 2784,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #2784 = VADDSDrm
  { 2785,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab0000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2785 = VADDSDrm_Int
  { 2786,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8ab0000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #2786 = VADDSDrr
  { 2787,	3,	1,	15,	0,	0, 0x8ab0000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2787 = VADDSDrr_Int
  { 2788,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #2788 = VADDSSrm
  { 2789,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab0000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #2789 = VADDSSrm_Int
  { 2790,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8ab0000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #2790 = VADDSSrr
  { 2791,	3,	1,	17,	0,	0, 0x8ab0000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #2791 = VADDSSrr_Int
  { 2792,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0x4ba1000146ULL, NULL, NULL, OperandInfo226 },  // Inst #2792 = VADDSUBPDYrm
  { 2793,	3,	1,	11,	0,	0, 0x4ba1000145ULL, NULL, NULL, OperandInfo227 },  // Inst #2793 = VADDSUBPDYrr
  { 2794,	7,	1,	18,	0,	0|(1<<MCID::MayLoad), 0xba1000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2794 = VADDSUBPDrm
  { 2795,	3,	1,	11,	0,	0, 0xba1000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2795 = VADDSUBPDrr
  { 2796,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0x4ba0800b06ULL, NULL, NULL, OperandInfo226 },  // Inst #2796 = VADDSUBPSYrm
  { 2797,	3,	1,	13,	0,	0, 0x4ba0800b05ULL, NULL, NULL, OperandInfo227 },  // Inst #2797 = VADDSUBPSYrr
  { 2798,	7,	1,	19,	0,	0|(1<<MCID::MayLoad), 0xba0800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2798 = VADDSUBPSrm
  { 2799,	3,	1,	13,	0,	0, 0xba0800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2799 = VADDSUBPSrr
  { 2800,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbf800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2800 = VAESDECLASTrm
  { 2801,	3,	1,	0,	0,	0, 0xbbf800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2801 = VAESDECLASTrr
  { 2802,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbd800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2802 = VAESDECrm
  { 2803,	3,	1,	0,	0,	0, 0xbbd800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2803 = VAESDECrr
  { 2804,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbbb800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2804 = VAESENCLASTrm
  { 2805,	3,	1,	0,	0,	0, 0xbbb800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2805 = VAESENCLASTrr
  { 2806,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xbb9800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #2806 = VAESENCrm
  { 2807,	3,	1,	0,	0,	0, 0xbb9800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #2807 = VAESENCrr
  { 2808,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3b7800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2808 = VAESIMCrm
  { 2809,	2,	1,	0,	0,	0, 0x3b7800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2809 = VAESIMCrr
  { 2810,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x3bf804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #2810 = VAESKEYGENASSIST128rm
  { 2811,	3,	1,	0,	0,	0, 0x3bf804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #2811 = VAESKEYGENASSIST128rr
  { 2812,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aab000146ULL, NULL, NULL, OperandInfo226 },  // Inst #2812 = VANDNPDYrm
  { 2813,	3,	1,	22,	0,	0, 0x4aab000145ULL, NULL, NULL, OperandInfo227 },  // Inst #2813 = VANDNPDYrr
  { 2814,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2814 = VANDNPDrm
  { 2815,	3,	1,	22,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2815 = VANDNPDrr
  { 2816,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aaa800106ULL, NULL, NULL, OperandInfo226 },  // Inst #2816 = VANDNPSYrm
  { 2817,	3,	1,	22,	0,	0, 0x4aaa800105ULL, NULL, NULL, OperandInfo227 },  // Inst #2817 = VANDNPSYrr
  { 2818,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2818 = VANDNPSrm
  { 2819,	3,	1,	22,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2819 = VANDNPSrr
  { 2820,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aa9000146ULL, NULL, NULL, OperandInfo226 },  // Inst #2820 = VANDPDYrm
  { 2821,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aa9000145ULL, NULL, NULL, OperandInfo227 },  // Inst #2821 = VANDPDYrr
  { 2822,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2822 = VANDPDrm
  { 2823,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2823 = VANDPDrr
  { 2824,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aa8800106ULL, NULL, NULL, OperandInfo226 },  // Inst #2824 = VANDPSYrm
  { 2825,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aa8800105ULL, NULL, NULL, OperandInfo227 },  // Inst #2825 = VANDPSYrr
  { 2826,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2826 = VANDPSrm
  { 2827,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2827 = VANDPSrr
  { 2828,	3,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter)|(1<<MCID::Variadic), 0x0ULL, NULL, NULL, OperandInfo232 },  // Inst #2828 = VASTART_SAVE_XMM_REGS
  { 2829,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1b004e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2829 = VBLENDPDYrmi
  { 2830,	4,	1,	0,	0,	0, 0x4a1b004e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2830 = VBLENDPDYrri
  { 2831,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1b004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2831 = VBLENDPDrmi
  { 2832,	4,	1,	0,	0,	0, 0xa1b004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2832 = VBLENDPDrri
  { 2833,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a18804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2833 = VBLENDPSYrmi
  { 2834,	4,	1,	0,	0,	0, 0x4a18804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2834 = VBLENDPSYrri
  { 2835,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa18804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2835 = VBLENDPSrmi
  { 2836,	4,	1,	0,	0,	0, 0xa18804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2836 = VBLENDPSrri
  { 2837,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a97004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #2837 = VBLENDVPDYrm
  { 2838,	4,	1,	0,	0,	0, 0x6a97004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #2838 = VBLENDVPDYrr
  { 2839,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a97004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #2839 = VBLENDVPDrm
  { 2840,	4,	1,	0,	0,	0, 0x2a97004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #2840 = VBLENDVPDrr
  { 2841,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a94804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #2841 = VBLENDVPSYrm
  { 2842,	4,	1,	0,	0,	0, 0x6a94804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #2842 = VBLENDVPSYrr
  { 2843,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a94804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #2843 = VBLENDVPSrm
  { 2844,	4,	1,	0,	0,	0, 0x2a94804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #2844 = VBLENDVPSrr
  { 2845,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4235800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2845 = VBROADCASTF128
  { 2846,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b5800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2846 = VBROADCASTI128
  { 2847,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4233000d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2847 = VBROADCASTSDYrm
  { 2848,	2,	1,	0,	0,	0, 0x4233000d45ULL, NULL, NULL, OperandInfo239 },  // Inst #2848 = VBROADCASTSDYrr
  { 2849,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4230800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2849 = VBROADCASTSSYrm
  { 2850,	2,	1,	0,	0,	0, 0x4230800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #2850 = VBROADCASTSSYrr
  { 2851,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x230800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2851 = VBROADCASTSSrm
  { 2852,	2,	1,	0,	0,	0, 0x230800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2852 = VBROADCASTSSrr
  { 2853,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x4b85004146ULL, NULL, NULL, OperandInfo233 },  // Inst #2853 = VCMPPDYrmi
  { 2854,	8,	1,	53,	0,	0, 0x4b85004146ULL, NULL, NULL, OperandInfo233 },  // Inst #2854 = VCMPPDYrmi_alt
  { 2855,	4,	1,	54,	0,	0, 0x4b85004145ULL, NULL, NULL, OperandInfo86 },  // Inst #2855 = VCMPPDYrri
  { 2856,	4,	1,	54,	0,	0, 0x4b85004145ULL, NULL, NULL, OperandInfo86 },  // Inst #2856 = VCMPPDYrri_alt
  { 2857,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0xb85004146ULL, NULL, NULL, OperandInfo137 },  // Inst #2857 = VCMPPDrmi
  { 2858,	8,	1,	53,	0,	0, 0xb85004146ULL, NULL, NULL, OperandInfo137 },  // Inst #2858 = VCMPPDrmi_alt
  { 2859,	4,	1,	54,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo85 },  // Inst #2859 = VCMPPDrri
  { 2860,	4,	1,	54,	0,	0, 0xb85004145ULL, NULL, NULL, OperandInfo85 },  // Inst #2860 = VCMPPDrri_alt
  { 2861,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0x4b84804106ULL, NULL, NULL, OperandInfo233 },  // Inst #2861 = VCMPPSYrmi
  { 2862,	8,	1,	53,	0,	0, 0x4b84804106ULL, NULL, NULL, OperandInfo233 },  // Inst #2862 = VCMPPSYrmi_alt
  { 2863,	4,	1,	54,	0,	0, 0x4b84804105ULL, NULL, NULL, OperandInfo86 },  // Inst #2863 = VCMPPSYrri
  { 2864,	4,	1,	54,	0,	0, 0x4b84804105ULL, NULL, NULL, OperandInfo86 },  // Inst #2864 = VCMPPSYrri_alt
  { 2865,	8,	1,	53,	0,	0|(1<<MCID::MayLoad), 0xb84804106ULL, NULL, NULL, OperandInfo137 },  // Inst #2865 = VCMPPSrmi
  { 2866,	8,	1,	53,	0,	0, 0xb84804106ULL, NULL, NULL, OperandInfo137 },  // Inst #2866 = VCMPPSrmi_alt
  { 2867,	4,	1,	54,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo85 },  // Inst #2867 = VCMPPSrri
  { 2868,	4,	1,	54,	0,	0, 0xb84804105ULL, NULL, NULL, OperandInfo85 },  // Inst #2868 = VCMPPSrri_alt
  { 2869,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo240 },  // Inst #2869 = VCMPSDrm
  { 2870,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004b06ULL, NULL, NULL, OperandInfo240 },  // Inst #2870 = VCMPSDrm_alt
  { 2871,	4,	1,	17,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo78 },  // Inst #2871 = VCMPSDrr
  { 2872,	4,	1,	17,	0,	0, 0x8b84004b05ULL, NULL, NULL, OperandInfo78 },  // Inst #2872 = VCMPSDrr_alt
  { 2873,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo241 },  // Inst #2873 = VCMPSSrm
  { 2874,	8,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8b84004c06ULL, NULL, NULL, OperandInfo241 },  // Inst #2874 = VCMPSSrm_alt
  { 2875,	4,	1,	17,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo77 },  // Inst #2875 = VCMPSSrr
  { 2876,	4,	1,	17,	0,	0, 0x8b84004c05ULL, NULL, NULL, OperandInfo77 },  // Inst #2876 = VCMPSSrr_alt
  { 2877,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825f000146ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #2877 = VCOMISDrm
  { 2878,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825f000145ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #2878 = VCOMISDrr
  { 2879,	6,	0,	62,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e800106ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #2879 = VCOMISSrm
  { 2880,	2,	0,	63,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x825e800105ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #2880 = VCOMISSrr
  { 2881,	6,	1,	452,	0,	0|(1<<MCID::MayLoad), 0x43cc000c06ULL, NULL, NULL, OperandInfo238 },  // Inst #2881 = VCVTDQ2PDYrm
  { 2882,	2,	1,	453,	0,	0, 0x43cc000c05ULL, NULL, NULL, OperandInfo239 },  // Inst #2882 = VCVTDQ2PDYrr
  { 2883,	6,	1,	452,	0,	0|(1<<MCID::MayLoad), 0x3cc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2883 = VCVTDQ2PDrm
  { 2884,	2,	1,	453,	0,	0, 0x3cc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2884 = VCVTDQ2PDrr
  { 2885,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0x42b6800106ULL, NULL, NULL, OperandInfo238 },  // Inst #2885 = VCVTDQ2PSYrm
  { 2886,	2,	1,	69,	0,	0, 0x42b6800105ULL, NULL, NULL, OperandInfo242 },  // Inst #2886 = VCVTDQ2PSYrr
  { 2887,	6,	1,	68,	0,	0|(1<<MCID::MayLoad), 0x2b6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #2887 = VCVTDQ2PSrm
  { 2888,	2,	1,	69,	0,	0, 0x2b6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #2888 = VCVTDQ2PSrr
  { 2889,	6,	1,	454,	0,	0|(1<<MCID::MayLoad), 0x3cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2889 = VCVTPD2DQXrm
  { 2890,	6,	1,	454,	0,	0|(1<<MCID::MayLoad), 0x43cc000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #2890 = VCVTPD2DQYrm
  { 2891,	2,	1,	455,	0,	0, 0x43cc000b05ULL, NULL, NULL, OperandInfo243 },  // Inst #2891 = VCVTPD2DQYrr
  { 2892,	2,	1,	455,	0,	0, 0x3cc000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #2892 = VCVTPD2DQrr
  { 2893,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x2b5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2893 = VCVTPD2PSXrm
  { 2894,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x42b5000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2894 = VCVTPD2PSYrm
  { 2895,	2,	1,	73,	0,	0, 0x42b5000145ULL, NULL, NULL, OperandInfo243 },  // Inst #2895 = VCVTPD2PSYrr
  { 2896,	2,	1,	73,	0,	0, 0x2b5000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2896 = VCVTPD2PSrr
  { 2897,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4226000d46ULL, NULL, NULL, OperandInfo238 },  // Inst #2897 = VCVTPH2PSYrm
  { 2898,	2,	1,	0,	0,	0, 0x4226000d45ULL, NULL, NULL, OperandInfo239 },  // Inst #2898 = VCVTPH2PSYrr
  { 2899,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x226000d46ULL, NULL, NULL, OperandInfo49 },  // Inst #2899 = VCVTPH2PSrm
  { 2900,	2,	1,	0,	0,	0, 0x226000d45ULL, NULL, NULL, OperandInfo50 },  // Inst #2900 = VCVTPH2PSrr
  { 2901,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x42b7000146ULL, NULL, NULL, OperandInfo238 },  // Inst #2901 = VCVTPS2DQYrm
  { 2902,	2,	1,	75,	0,	0, 0x42b7000145ULL, NULL, NULL, OperandInfo242 },  // Inst #2902 = VCVTPS2DQYrr
  { 2903,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x2b7000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2903 = VCVTPS2DQrm
  { 2904,	2,	1,	75,	0,	0, 0x2b7000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2904 = VCVTPS2DQrr
  { 2905,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x42b4000106ULL, NULL, NULL, OperandInfo238 },  // Inst #2905 = VCVTPS2PDYrm
  { 2906,	2,	1,	73,	0,	0, 0x42b4000105ULL, NULL, NULL, OperandInfo239 },  // Inst #2906 = VCVTPS2PDYrr
  { 2907,	6,	1,	72,	0,	0|(1<<MCID::MayLoad), 0x2b4000106ULL, NULL, NULL, OperandInfo49 },  // Inst #2907 = VCVTPS2PDrm
  { 2908,	2,	1,	73,	0,	0, 0x2b4000105ULL, NULL, NULL, OperandInfo50 },  // Inst #2908 = VCVTPS2PDrr
  { 2909,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x423a004e44ULL, NULL, NULL, OperandInfo244 },  // Inst #2909 = VCVTPS2PHYmr
  { 2910,	3,	1,	0,	0,	0, 0x423a004e43ULL, NULL, NULL, OperandInfo245 },  // Inst #2910 = VCVTPS2PHYrr
  { 2911,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x23a004e44ULL, NULL, NULL, OperandInfo114 },  // Inst #2911 = VCVTPS2PHmr
  { 2912,	3,	1,	0,	0,	0, 0x23a004e43ULL, NULL, NULL, OperandInfo52 },  // Inst #2912 = VCVTPS2PHrr
  { 2913,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x865a000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2913 = VCVTSD2SI64rm
  { 2914,	2,	1,	77,	0,	0, 0x865a000b05ULL, NULL, NULL, OperandInfo96 },  // Inst #2914 = VCVTSD2SI64rr
  { 2915,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x825a000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2915 = VCVTSD2SIrm
  { 2916,	2,	1,	77,	0,	0, 0x825a000b05ULL, NULL, NULL, OperandInfo97 },  // Inst #2916 = VCVTSD2SIrr
  { 2917,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0x8ab4000b06ULL, NULL, NULL, OperandInfo246 },  // Inst #2917 = VCVTSD2SSrm
  { 2918,	3,	1,	79,	0,	0, 0x8ab4000b05ULL, NULL, NULL, OperandInfo247 },  // Inst #2918 = VCVTSD2SSrr
  { 2919,	7,	1,	456,	0,	0|(1<<MCID::MayLoad), 0x8e54000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #2919 = VCVTSI2SD64rm
  { 2920,	3,	1,	453,	0,	0, 0x8e54000b05ULL, NULL, NULL, OperandInfo248 },  // Inst #2920 = VCVTSI2SD64rr
  { 2921,	7,	1,	456,	0,	0|(1<<MCID::MayLoad), 0x8a54000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #2921 = VCVTSI2SDrm
  { 2922,	3,	1,	453,	0,	0, 0x8a54000b05ULL, NULL, NULL, OperandInfo249 },  // Inst #2922 = VCVTSI2SDrr
  { 2923,	7,	1,	456,	0,	0|(1<<MCID::MayLoad), 0x8e54000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #2923 = VCVTSI2SS64rm
  { 2924,	3,	1,	453,	0,	0, 0x8e54000c05ULL, NULL, NULL, OperandInfo250 },  // Inst #2924 = VCVTSI2SS64rr
  { 2925,	7,	1,	456,	0,	0|(1<<MCID::MayLoad), 0x8a54000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #2925 = VCVTSI2SSrm
  { 2926,	3,	1,	453,	0,	0, 0x8a54000c05ULL, NULL, NULL, OperandInfo251 },  // Inst #2926 = VCVTSI2SSrr
  { 2927,	7,	1,	180,	0,	0|(1<<MCID::MayLoad), 0x8ab4000c06ULL, NULL, NULL, OperandInfo252 },  // Inst #2927 = VCVTSS2SDrm
  { 2928,	3,	1,	79,	0,	0, 0x8ab4000c05ULL, NULL, NULL, OperandInfo253 },  // Inst #2928 = VCVTSS2SDrr
  { 2929,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x865a000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2929 = VCVTSS2SI64rm
  { 2930,	2,	1,	83,	0,	0, 0x865a000c05ULL, NULL, NULL, OperandInfo96 },  // Inst #2930 = VCVTSS2SI64rr
  { 2931,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x825a000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2931 = VCVTSS2SIrm
  { 2932,	2,	1,	85,	0,	0, 0x825a000c05ULL, NULL, NULL, OperandInfo97 },  // Inst #2932 = VCVTSS2SIrr
  { 2933,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x3cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2933 = VCVTTPD2DQXrm
  { 2934,	6,	1,	70,	0,	0|(1<<MCID::MayLoad), 0x43cd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #2934 = VCVTTPD2DQYrm
  { 2935,	2,	1,	71,	0,	0, 0x43cd000145ULL, NULL, NULL, OperandInfo243 },  // Inst #2935 = VCVTTPD2DQYrr
  { 2936,	2,	1,	71,	0,	0, 0x3cd000145ULL, NULL, NULL, OperandInfo50 },  // Inst #2936 = VCVTTPD2DQrr
  { 2937,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x42b6000c06ULL, NULL, NULL, OperandInfo238 },  // Inst #2937 = VCVTTPS2DQYrm
  { 2938,	2,	1,	75,	0,	0, 0x42b6000c05ULL, NULL, NULL, OperandInfo242 },  // Inst #2938 = VCVTTPS2DQYrr
  { 2939,	6,	1,	74,	0,	0|(1<<MCID::MayLoad), 0x2b6000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #2939 = VCVTTPS2DQrm
  { 2940,	2,	1,	75,	0,	0, 0x2b6000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #2940 = VCVTTPS2DQrr
  { 2941,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x8658000b06ULL, NULL, NULL, OperandInfo13 },  // Inst #2941 = VCVTTSD2SI64rm
  { 2942,	2,	1,	77,	0,	0, 0x8658000b05ULL, NULL, NULL, OperandInfo106 },  // Inst #2942 = VCVTTSD2SI64rr
  { 2943,	6,	1,	76,	0,	0|(1<<MCID::MayLoad), 0x8258000b06ULL, NULL, NULL, OperandInfo12 },  // Inst #2943 = VCVTTSD2SIrm
  { 2944,	2,	1,	77,	0,	0, 0x8258000b05ULL, NULL, NULL, OperandInfo107 },  // Inst #2944 = VCVTTSD2SIrr
  { 2945,	6,	1,	82,	0,	0|(1<<MCID::MayLoad), 0x8658000c06ULL, NULL, NULL, OperandInfo13 },  // Inst #2945 = VCVTTSS2SI64rm
  { 2946,	2,	1,	83,	0,	0, 0x8658000c05ULL, NULL, NULL, OperandInfo108 },  // Inst #2946 = VCVTTSS2SI64rr
  { 2947,	6,	1,	84,	0,	0|(1<<MCID::MayLoad), 0x8258000c06ULL, NULL, NULL, OperandInfo12 },  // Inst #2947 = VCVTTSS2SIrm
  { 2948,	2,	1,	85,	0,	0, 0x8258000c05ULL, NULL, NULL, OperandInfo109 },  // Inst #2948 = VCVTTSS2SIrr
  { 2949,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0x4abd000146ULL, NULL, NULL, OperandInfo226 },  // Inst #2949 = VDIVPDYrm
  { 2950,	3,	1,	99,	0,	0, 0x4abd000145ULL, NULL, NULL, OperandInfo227 },  // Inst #2950 = VDIVPDYrr
  { 2951,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xabd000146ULL, NULL, NULL, OperandInfo138 },  // Inst #2951 = VDIVPDrm
  { 2952,	3,	1,	99,	0,	0, 0xabd000145ULL, NULL, NULL, OperandInfo139 },  // Inst #2952 = VDIVPDrr
  { 2953,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0x4abc800106ULL, NULL, NULL, OperandInfo226 },  // Inst #2953 = VDIVPSYrm
  { 2954,	3,	1,	100,	0,	0, 0x4abc800105ULL, NULL, NULL, OperandInfo227 },  // Inst #2954 = VDIVPSYrr
  { 2955,	7,	1,	98,	0,	0|(1<<MCID::MayLoad), 0xabc800106ULL, NULL, NULL, OperandInfo138 },  // Inst #2955 = VDIVPSrm
  { 2956,	3,	1,	100,	0,	0, 0xabc800105ULL, NULL, NULL, OperandInfo139 },  // Inst #2956 = VDIVPSrr
  { 2957,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #2957 = VDIVSDrm
  { 2958,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #2958 = VDIVSDrm_Int
  { 2959,	3,	1,	102,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #2959 = VDIVSDrr
  { 2960,	3,	1,	102,	0,	0, 0x8abc000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #2960 = VDIVSDrr_Int
  { 2961,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #2961 = VDIVSSrm
  { 2962,	7,	1,	101,	0,	0|(1<<MCID::MayLoad), 0x8abc000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #2962 = VDIVSSrm_Int
  { 2963,	3,	1,	103,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #2963 = VDIVSSrr
  { 2964,	3,	1,	103,	0,	0, 0x8abc000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #2964 = VDIVSSrr_Int
  { 2965,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa83004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2965 = VDPPDrmi
  { 2966,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa83004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2966 = VDPPDrri
  { 2967,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a80804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #2967 = VDPPSYrmi
  { 2968,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a80804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #2968 = VDPPSYrri
  { 2969,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa80804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #2969 = VDPPSrmi
  { 2970,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa80804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #2970 = VDPPSrri
  { 2971,	5,	0,	457,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11cULL, NULL, NULL, OperandInfo40 },  // Inst #2971 = VERRm
  { 2972,	1,	0,	457,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x114ULL, NULL, NULL, OperandInfo112 },  // Inst #2972 = VERRr
  { 2973,	5,	0,	458,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x11dULL, NULL, NULL, OperandInfo40 },  // Inst #2973 = VERWm
  { 2974,	1,	0,	459,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x115ULL, NULL, NULL, OperandInfo112 },  // Inst #2974 = VERWr
  { 2975,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x4232804e44ULL, NULL, NULL, OperandInfo244 },  // Inst #2975 = VEXTRACTF128mr
  { 2976,	3,	1,	0,	0,	0, 0x4232804e43ULL, NULL, NULL, OperandInfo245 },  // Inst #2976 = VEXTRACTF128rr
  { 2977,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x4273804e44ULL, NULL, NULL, OperandInfo244 },  // Inst #2977 = VEXTRACTI128mr
  { 2978,	3,	1,	0,	0,	0, 0x4273804e43ULL, NULL, NULL, OperandInfo245 },  // Inst #2978 = VEXTRACTI128rr
  { 2979,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22e804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #2979 = VEXTRACTPSmr
  { 2980,	3,	1,	0,	0,	0, 0x22e804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #2980 = VEXTRACTPSrr
  { 2981,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x22e804e43ULL, NULL, NULL, OperandInfo210 },  // Inst #2981 = VEXTRACTPSrr64
  { 2982,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad3004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #2982 = VFMADDPD4mr
  { 2983,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad3004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #2983 = VFMADDPD4mrY
  { 2984,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed3004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #2984 = VFMADDPD4rm
  { 2985,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ed3004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #2985 = VFMADDPD4rmY
  { 2986,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed3004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #2986 = VFMADDPD4rr
  { 2987,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ed3004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #2987 = VFMADDPD4rrY
  { 2988,	4,	1,	0,	0,	0, 0x6ad3004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #2988 = VFMADDPD4rrY_REV
  { 2989,	4,	1,	0,	0,	0, 0x2ad3004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #2989 = VFMADDPD4rr_REV
  { 2990,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf31000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #2990 = VFMADDPDr132m
  { 2991,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f31000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #2991 = VFMADDPDr132mY
  { 2992,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf31000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #2992 = VFMADDPDr132r
  { 2993,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f31000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #2993 = VFMADDPDr132rY
  { 2994,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf51000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #2994 = VFMADDPDr213m
  { 2995,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f51000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #2995 = VFMADDPDr213mY
  { 2996,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf51000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #2996 = VFMADDPDr213r
  { 2997,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f51000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #2997 = VFMADDPDr213rY
  { 2998,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf71000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #2998 = VFMADDPDr231m
  { 2999,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f71000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #2999 = VFMADDPDr231mY
  { 3000,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf71000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3000 = VFMADDPDr231r
  { 3001,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f71000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3001 = VFMADDPDr231rY
  { 3002,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad0804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3002 = VFMADDPS4mr
  { 3003,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad0804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3003 = VFMADDPS4mrY
  { 3004,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed0804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3004 = VFMADDPS4rm
  { 3005,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ed0804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3005 = VFMADDPS4rmY
  { 3006,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed0804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3006 = VFMADDPS4rr
  { 3007,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ed0804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3007 = VFMADDPS4rrY
  { 3008,	4,	1,	0,	0,	0, 0x6ad0804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3008 = VFMADDPS4rrY_REV
  { 3009,	4,	1,	0,	0,	0, 0x2ad0804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3009 = VFMADDPS4rr_REV
  { 3010,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb30800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3010 = VFMADDPSr132m
  { 3011,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b30800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3011 = VFMADDPSr132mY
  { 3012,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb30800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3012 = VFMADDPSr132r
  { 3013,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b30800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3013 = VFMADDPSr132rY
  { 3014,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb50800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3014 = VFMADDPSr213m
  { 3015,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b50800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3015 = VFMADDPSr213mY
  { 3016,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb50800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3016 = VFMADDPSr213r
  { 3017,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b50800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3017 = VFMADDPSr213rY
  { 3018,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb70800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3018 = VFMADDPSr231m
  { 3019,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b70800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3019 = VFMADDPSr231mY
  { 3020,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb70800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3020 = VFMADDPSr231r
  { 3021,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b70800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3021 = VFMADDPSr231rY
  { 3022,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad6004e46ULL, NULL, NULL, OperandInfo260 },  // Inst #3022 = VFMADDSD4mr
  { 3023,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad6004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3023 = VFMADDSD4mr_Int
  { 3024,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed6004e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3024 = VFMADDSD4rm
  { 3025,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed6004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3025 = VFMADDSD4rm_Int
  { 3026,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed6004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3026 = VFMADDSD4rr
  { 3027,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed6004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3027 = VFMADDSD4rr_Int
  { 3028,	4,	1,	0,	0,	0, 0x2ad6004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3028 = VFMADDSD4rr_REV
  { 3029,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f32000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3029 = VFMADDSDr132m
  { 3030,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f32000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3030 = VFMADDSDr132r
  { 3031,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f52000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3031 = VFMADDSDr213m
  { 3032,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f52000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3032 = VFMADDSDr213m_Int
  { 3033,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f52000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3033 = VFMADDSDr213r
  { 3034,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f52000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3034 = VFMADDSDr213r_Int
  { 3035,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f72000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3035 = VFMADDSDr231m
  { 3036,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f72000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3036 = VFMADDSDr231r
  { 3037,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad4004e46ULL, NULL, NULL, OperandInfo265 },  // Inst #3037 = VFMADDSS4mr
  { 3038,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad4004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3038 = VFMADDSS4mr_Int
  { 3039,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed4004e46ULL, NULL, NULL, OperandInfo266 },  // Inst #3039 = VFMADDSS4rm
  { 3040,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed4004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3040 = VFMADDSS4rm_Int
  { 3041,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed4004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3041 = VFMADDSS4rr
  { 3042,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed4004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3042 = VFMADDSS4rr_Int
  { 3043,	4,	1,	0,	0,	0, 0x2ad4004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3043 = VFMADDSS4rr_REV
  { 3044,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b32000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3044 = VFMADDSSr132m
  { 3045,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b32000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3045 = VFMADDSSr132r
  { 3046,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b52000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3046 = VFMADDSSr213m
  { 3047,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b52000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3047 = VFMADDSSr213m_Int
  { 3048,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b52000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3048 = VFMADDSSr213r
  { 3049,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b52000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3049 = VFMADDSSr213r_Int
  { 3050,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b72000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3050 = VFMADDSSr231m
  { 3051,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b72000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3051 = VFMADDSSr231r
  { 3052,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abb004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3052 = VFMADDSUBPD4mr
  { 3053,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abb004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3053 = VFMADDSUBPD4mrY
  { 3054,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ebb004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3054 = VFMADDSUBPD4rm
  { 3055,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ebb004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3055 = VFMADDSUBPD4rmY
  { 3056,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ebb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3056 = VFMADDSUBPD4rr
  { 3057,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ebb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3057 = VFMADDSUBPD4rrY
  { 3058,	4,	1,	0,	0,	0, 0x6abb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3058 = VFMADDSUBPD4rrY_REV
  { 3059,	4,	1,	0,	0,	0, 0x2abb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3059 = VFMADDSUBPD4rr_REV
  { 3060,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf2d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3060 = VFMADDSUBPDr132m
  { 3061,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f2d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3061 = VFMADDSUBPDr132mY
  { 3062,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf2d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3062 = VFMADDSUBPDr132r
  { 3063,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f2d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3063 = VFMADDSUBPDr132rY
  { 3064,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf4d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3064 = VFMADDSUBPDr213m
  { 3065,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f4d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3065 = VFMADDSUBPDr213mY
  { 3066,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf4d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3066 = VFMADDSUBPDr213r
  { 3067,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f4d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3067 = VFMADDSUBPDr213rY
  { 3068,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf6d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3068 = VFMADDSUBPDr231m
  { 3069,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f6d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3069 = VFMADDSUBPDr231mY
  { 3070,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf6d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3070 = VFMADDSUBPDr231r
  { 3071,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f6d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3071 = VFMADDSUBPDr231rY
  { 3072,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ab8804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3072 = VFMADDSUBPS4mr
  { 3073,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ab8804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3073 = VFMADDSUBPS4mrY
  { 3074,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22eb8804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3074 = VFMADDSUBPS4rm
  { 3075,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26eb8804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3075 = VFMADDSUBPS4rmY
  { 3076,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22eb8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3076 = VFMADDSUBPS4rr
  { 3077,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26eb8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3077 = VFMADDSUBPS4rrY
  { 3078,	4,	1,	0,	0,	0, 0x6ab8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3078 = VFMADDSUBPS4rrY_REV
  { 3079,	4,	1,	0,	0,	0, 0x2ab8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3079 = VFMADDSUBPS4rr_REV
  { 3080,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb2c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3080 = VFMADDSUBPSr132m
  { 3081,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b2c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3081 = VFMADDSUBPSr132mY
  { 3082,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb2c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3082 = VFMADDSUBPSr132r
  { 3083,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b2c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3083 = VFMADDSUBPSr132rY
  { 3084,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb4c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3084 = VFMADDSUBPSr213m
  { 3085,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b4c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3085 = VFMADDSUBPSr213mY
  { 3086,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb4c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3086 = VFMADDSUBPSr213r
  { 3087,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b4c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3087 = VFMADDSUBPSr213rY
  { 3088,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb6c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3088 = VFMADDSUBPSr231m
  { 3089,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b6c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3089 = VFMADDSUBPSr231mY
  { 3090,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb6c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3090 = VFMADDSUBPSr231r
  { 3091,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b6c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3091 = VFMADDSUBPSr231rY
  { 3092,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abf004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3092 = VFMSUBADDPD4mr
  { 3093,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abf004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3093 = VFMSUBADDPD4mrY
  { 3094,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ebf004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3094 = VFMSUBADDPD4rm
  { 3095,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ebf004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3095 = VFMSUBADDPD4rmY
  { 3096,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ebf004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3096 = VFMSUBADDPD4rr
  { 3097,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ebf004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3097 = VFMSUBADDPD4rrY
  { 3098,	4,	1,	0,	0,	0, 0x6abf004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3098 = VFMSUBADDPD4rrY_REV
  { 3099,	4,	1,	0,	0,	0, 0x2abf004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3099 = VFMSUBADDPD4rr_REV
  { 3100,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf2f000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3100 = VFMSUBADDPDr132m
  { 3101,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f2f000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3101 = VFMSUBADDPDr132mY
  { 3102,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf2f000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3102 = VFMSUBADDPDr132r
  { 3103,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f2f000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3103 = VFMSUBADDPDr132rY
  { 3104,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf4f000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3104 = VFMSUBADDPDr213m
  { 3105,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f4f000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3105 = VFMSUBADDPDr213mY
  { 3106,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf4f000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3106 = VFMSUBADDPDr213r
  { 3107,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f4f000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3107 = VFMSUBADDPDr213rY
  { 3108,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf6f000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3108 = VFMSUBADDPDr231m
  { 3109,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f6f000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3109 = VFMSUBADDPDr231mY
  { 3110,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf6f000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3110 = VFMSUBADDPDr231r
  { 3111,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f6f000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3111 = VFMSUBADDPDr231rY
  { 3112,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2abc804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3112 = VFMSUBADDPS4mr
  { 3113,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6abc804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3113 = VFMSUBADDPS4mrY
  { 3114,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ebc804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3114 = VFMSUBADDPS4rm
  { 3115,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ebc804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3115 = VFMSUBADDPS4rmY
  { 3116,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ebc804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3116 = VFMSUBADDPS4rr
  { 3117,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ebc804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3117 = VFMSUBADDPS4rrY
  { 3118,	4,	1,	0,	0,	0, 0x6abc804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3118 = VFMSUBADDPS4rrY_REV
  { 3119,	4,	1,	0,	0,	0, 0x2abc804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3119 = VFMSUBADDPS4rr_REV
  { 3120,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb2e800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3120 = VFMSUBADDPSr132m
  { 3121,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b2e800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3121 = VFMSUBADDPSr132mY
  { 3122,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb2e800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3122 = VFMSUBADDPSr132r
  { 3123,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b2e800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3123 = VFMSUBADDPSr132rY
  { 3124,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb4e800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3124 = VFMSUBADDPSr213m
  { 3125,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b4e800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3125 = VFMSUBADDPSr213mY
  { 3126,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb4e800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3126 = VFMSUBADDPSr213r
  { 3127,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b4e800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3127 = VFMSUBADDPSr213rY
  { 3128,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb6e800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3128 = VFMSUBADDPSr231m
  { 3129,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b6e800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3129 = VFMSUBADDPSr231mY
  { 3130,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb6e800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3130 = VFMSUBADDPSr231r
  { 3131,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b6e800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3131 = VFMSUBADDPSr231rY
  { 3132,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adb004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3132 = VFMSUBPD4mr
  { 3133,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6adb004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3133 = VFMSUBPD4mrY
  { 3134,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22edb004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3134 = VFMSUBPD4rm
  { 3135,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26edb004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3135 = VFMSUBPD4rmY
  { 3136,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22edb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3136 = VFMSUBPD4rr
  { 3137,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26edb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3137 = VFMSUBPD4rrY
  { 3138,	4,	1,	0,	0,	0, 0x6adb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3138 = VFMSUBPD4rrY_REV
  { 3139,	4,	1,	0,	0,	0, 0x2adb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3139 = VFMSUBPD4rr_REV
  { 3140,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf35000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3140 = VFMSUBPDr132m
  { 3141,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f35000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3141 = VFMSUBPDr132mY
  { 3142,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf35000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3142 = VFMSUBPDr132r
  { 3143,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f35000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3143 = VFMSUBPDr132rY
  { 3144,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf55000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3144 = VFMSUBPDr213m
  { 3145,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f55000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3145 = VFMSUBPDr213mY
  { 3146,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf55000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3146 = VFMSUBPDr213r
  { 3147,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f55000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3147 = VFMSUBPDr213rY
  { 3148,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf75000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3148 = VFMSUBPDr231m
  { 3149,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f75000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3149 = VFMSUBPDr231mY
  { 3150,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf75000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3150 = VFMSUBPDr231r
  { 3151,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f75000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3151 = VFMSUBPDr231rY
  { 3152,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ad8804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3152 = VFMSUBPS4mr
  { 3153,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6ad8804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3153 = VFMSUBPS4mrY
  { 3154,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ed8804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3154 = VFMSUBPS4rm
  { 3155,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ed8804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3155 = VFMSUBPS4rmY
  { 3156,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ed8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3156 = VFMSUBPS4rr
  { 3157,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ed8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3157 = VFMSUBPS4rrY
  { 3158,	4,	1,	0,	0,	0, 0x6ad8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3158 = VFMSUBPS4rrY_REV
  { 3159,	4,	1,	0,	0,	0, 0x2ad8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3159 = VFMSUBPS4rr_REV
  { 3160,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb34800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3160 = VFMSUBPSr132m
  { 3161,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b34800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3161 = VFMSUBPSr132mY
  { 3162,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb34800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3162 = VFMSUBPSr132r
  { 3163,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b34800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3163 = VFMSUBPSr132rY
  { 3164,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb54800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3164 = VFMSUBPSr213m
  { 3165,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b54800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3165 = VFMSUBPSr213mY
  { 3166,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb54800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3166 = VFMSUBPSr213r
  { 3167,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b54800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3167 = VFMSUBPSr213rY
  { 3168,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb74800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3168 = VFMSUBPSr231m
  { 3169,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b74800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3169 = VFMSUBPSr231mY
  { 3170,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb74800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3170 = VFMSUBPSr231r
  { 3171,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b74800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3171 = VFMSUBPSr231rY
  { 3172,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ade004e46ULL, NULL, NULL, OperandInfo260 },  // Inst #3172 = VFMSUBSD4mr
  { 3173,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2ade004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3173 = VFMSUBSD4mr_Int
  { 3174,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ede004e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3174 = VFMSUBSD4rm
  { 3175,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ede004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3175 = VFMSUBSD4rm_Int
  { 3176,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ede004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3176 = VFMSUBSD4rr
  { 3177,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ede004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3177 = VFMSUBSD4rr_Int
  { 3178,	4,	1,	0,	0,	0, 0x2ade004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3178 = VFMSUBSD4rr_REV
  { 3179,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f36000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3179 = VFMSUBSDr132m
  { 3180,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f36000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3180 = VFMSUBSDr132r
  { 3181,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f56000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3181 = VFMSUBSDr213m
  { 3182,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f56000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3182 = VFMSUBSDr213m_Int
  { 3183,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f56000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3183 = VFMSUBSDr213r
  { 3184,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f56000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3184 = VFMSUBSDr213r_Int
  { 3185,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f76000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3185 = VFMSUBSDr231m
  { 3186,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f76000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3186 = VFMSUBSDr231r
  { 3187,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adc004e46ULL, NULL, NULL, OperandInfo265 },  // Inst #3187 = VFMSUBSS4mr
  { 3188,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2adc004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3188 = VFMSUBSS4mr_Int
  { 3189,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22edc004e46ULL, NULL, NULL, OperandInfo266 },  // Inst #3189 = VFMSUBSS4rm
  { 3190,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22edc004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3190 = VFMSUBSS4rm_Int
  { 3191,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22edc004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3191 = VFMSUBSS4rr
  { 3192,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22edc004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3192 = VFMSUBSS4rr_Int
  { 3193,	4,	1,	0,	0,	0, 0x2adc004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3193 = VFMSUBSS4rr_REV
  { 3194,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b36000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3194 = VFMSUBSSr132m
  { 3195,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b36000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3195 = VFMSUBSSr132r
  { 3196,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b56000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3196 = VFMSUBSSr213m
  { 3197,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b56000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3197 = VFMSUBSSr213m_Int
  { 3198,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b56000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3198 = VFMSUBSSr213r
  { 3199,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b56000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3199 = VFMSUBSSr213r_Int
  { 3200,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b76000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3200 = VFMSUBSSr231m
  { 3201,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b76000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3201 = VFMSUBSSr231r
  { 3202,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af3004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3202 = VFNMADDPD4mr
  { 3203,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af3004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3203 = VFNMADDPD4mrY
  { 3204,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef3004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3204 = VFNMADDPD4rm
  { 3205,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ef3004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3205 = VFNMADDPD4rmY
  { 3206,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef3004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3206 = VFNMADDPD4rr
  { 3207,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ef3004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3207 = VFNMADDPD4rrY
  { 3208,	4,	1,	0,	0,	0, 0x6af3004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3208 = VFNMADDPD4rrY_REV
  { 3209,	4,	1,	0,	0,	0, 0x2af3004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3209 = VFNMADDPD4rr_REV
  { 3210,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf39000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3210 = VFNMADDPDr132m
  { 3211,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f39000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3211 = VFNMADDPDr132mY
  { 3212,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf39000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3212 = VFNMADDPDr132r
  { 3213,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f39000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3213 = VFNMADDPDr132rY
  { 3214,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf59000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3214 = VFNMADDPDr213m
  { 3215,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f59000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3215 = VFNMADDPDr213mY
  { 3216,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf59000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3216 = VFNMADDPDr213r
  { 3217,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f59000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3217 = VFNMADDPDr213rY
  { 3218,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf79000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3218 = VFNMADDPDr231m
  { 3219,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f79000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3219 = VFNMADDPDr231mY
  { 3220,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf79000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3220 = VFNMADDPDr231r
  { 3221,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f79000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3221 = VFNMADDPDr231rY
  { 3222,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af0804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3222 = VFNMADDPS4mr
  { 3223,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af0804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3223 = VFNMADDPS4mrY
  { 3224,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef0804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3224 = VFNMADDPS4rm
  { 3225,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ef0804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3225 = VFNMADDPS4rmY
  { 3226,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef0804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3226 = VFNMADDPS4rr
  { 3227,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ef0804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3227 = VFNMADDPS4rrY
  { 3228,	4,	1,	0,	0,	0, 0x6af0804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3228 = VFNMADDPS4rrY_REV
  { 3229,	4,	1,	0,	0,	0, 0x2af0804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3229 = VFNMADDPS4rr_REV
  { 3230,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb38800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3230 = VFNMADDPSr132m
  { 3231,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b38800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3231 = VFNMADDPSr132mY
  { 3232,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb38800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3232 = VFNMADDPSr132r
  { 3233,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b38800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3233 = VFNMADDPSr132rY
  { 3234,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb58800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3234 = VFNMADDPSr213m
  { 3235,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b58800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3235 = VFNMADDPSr213mY
  { 3236,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb58800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3236 = VFNMADDPSr213r
  { 3237,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b58800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3237 = VFNMADDPSr213rY
  { 3238,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb78800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3238 = VFNMADDPSr231m
  { 3239,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b78800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3239 = VFNMADDPSr231mY
  { 3240,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb78800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3240 = VFNMADDPSr231r
  { 3241,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b78800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3241 = VFNMADDPSr231rY
  { 3242,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af6004e46ULL, NULL, NULL, OperandInfo260 },  // Inst #3242 = VFNMADDSD4mr
  { 3243,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af6004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3243 = VFNMADDSD4mr_Int
  { 3244,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef6004e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3244 = VFNMADDSD4rm
  { 3245,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef6004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3245 = VFNMADDSD4rm_Int
  { 3246,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef6004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3246 = VFNMADDSD4rr
  { 3247,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef6004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3247 = VFNMADDSD4rr_Int
  { 3248,	4,	1,	0,	0,	0, 0x2af6004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3248 = VFNMADDSD4rr_REV
  { 3249,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f3a000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3249 = VFNMADDSDr132m
  { 3250,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f3a000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3250 = VFNMADDSDr132r
  { 3251,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5a000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3251 = VFNMADDSDr213m
  { 3252,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5a000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3252 = VFNMADDSDr213m_Int
  { 3253,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5a000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3253 = VFNMADDSDr213r
  { 3254,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5a000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3254 = VFNMADDSDr213r_Int
  { 3255,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f7a000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3255 = VFNMADDSDr231m
  { 3256,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f7a000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3256 = VFNMADDSDr231r
  { 3257,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af4004e46ULL, NULL, NULL, OperandInfo265 },  // Inst #3257 = VFNMADDSS4mr
  { 3258,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af4004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3258 = VFNMADDSS4mr_Int
  { 3259,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef4004e46ULL, NULL, NULL, OperandInfo266 },  // Inst #3259 = VFNMADDSS4rm
  { 3260,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef4004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3260 = VFNMADDSS4rm_Int
  { 3261,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef4004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3261 = VFNMADDSS4rr
  { 3262,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef4004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3262 = VFNMADDSS4rr_Int
  { 3263,	4,	1,	0,	0,	0, 0x2af4004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3263 = VFNMADDSS4rr_REV
  { 3264,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b3a000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3264 = VFNMADDSSr132m
  { 3265,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b3a000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3265 = VFNMADDSSr132r
  { 3266,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5a000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3266 = VFNMADDSSr213m
  { 3267,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5a000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3267 = VFNMADDSSr213m_Int
  { 3268,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5a000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3268 = VFNMADDSSr213r
  { 3269,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5a000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3269 = VFNMADDSSr213r_Int
  { 3270,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b7a000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3270 = VFNMADDSSr231m
  { 3271,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b7a000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3271 = VFNMADDSSr231r
  { 3272,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afb004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3272 = VFNMSUBPD4mr
  { 3273,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6afb004e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3273 = VFNMSUBPD4mrY
  { 3274,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22efb004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3274 = VFNMSUBPD4rm
  { 3275,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26efb004e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3275 = VFNMSUBPD4rmY
  { 3276,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22efb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3276 = VFNMSUBPD4rr
  { 3277,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26efb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3277 = VFNMSUBPD4rrY
  { 3278,	4,	1,	0,	0,	0, 0x6afb004e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3278 = VFNMSUBPD4rrY_REV
  { 3279,	4,	1,	0,	0,	0, 0x2afb004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3279 = VFNMSUBPD4rr_REV
  { 3280,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf3d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3280 = VFNMSUBPDr132m
  { 3281,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f3d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3281 = VFNMSUBPDr132mY
  { 3282,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf3d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3282 = VFNMSUBPDr132r
  { 3283,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f3d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3283 = VFNMSUBPDr132rY
  { 3284,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf5d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3284 = VFNMSUBPDr213m
  { 3285,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f5d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3285 = VFNMSUBPDr213mY
  { 3286,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf5d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3286 = VFNMSUBPDr213r
  { 3287,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f5d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3287 = VFNMSUBPDr213rY
  { 3288,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf7d000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3288 = VFNMSUBPDr231m
  { 3289,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f7d000d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3289 = VFNMSUBPDr231mY
  { 3290,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xf7d000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3290 = VFNMSUBPDr231r
  { 3291,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4f7d000d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3291 = VFNMSUBPDr231rY
  { 3292,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2af8804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3292 = VFNMSUBPS4mr
  { 3293,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6af8804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3293 = VFNMSUBPS4mrY
  { 3294,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22ef8804e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3294 = VFNMSUBPS4rm
  { 3295,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26ef8804e46ULL, NULL, NULL, OperandInfo255 },  // Inst #3295 = VFNMSUBPS4rmY
  { 3296,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22ef8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3296 = VFNMSUBPS4rr
  { 3297,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x26ef8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3297 = VFNMSUBPS4rrY
  { 3298,	4,	1,	0,	0,	0, 0x6af8804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3298 = VFNMSUBPS4rrY_REV
  { 3299,	4,	1,	0,	0,	0, 0x2af8804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3299 = VFNMSUBPS4rr_REV
  { 3300,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb3c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3300 = VFNMSUBPSr132m
  { 3301,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b3c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3301 = VFNMSUBPSr132mY
  { 3302,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb3c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3302 = VFNMSUBPSr132r
  { 3303,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b3c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3303 = VFNMSUBPSr132rY
  { 3304,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb5c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3304 = VFNMSUBPSr213m
  { 3305,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b5c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3305 = VFNMSUBPSr213mY
  { 3306,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb5c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3306 = VFNMSUBPSr213r
  { 3307,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b5c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3307 = VFNMSUBPSr213rY
  { 3308,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb7c800d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3308 = VFNMSUBPSr231m
  { 3309,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b7c800d46ULL, NULL, NULL, OperandInfo257 },  // Inst #3309 = VFNMSUBPSr231mY
  { 3310,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0xb7c800d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3310 = VFNMSUBPSr231r
  { 3311,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4b7c800d45ULL, NULL, NULL, OperandInfo259 },  // Inst #3311 = VFNMSUBPSr231rY
  { 3312,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afe004e46ULL, NULL, NULL, OperandInfo260 },  // Inst #3312 = VFNMSUBSD4mr
  { 3313,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afe004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3313 = VFNMSUBSD4mr_Int
  { 3314,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22efe004e46ULL, NULL, NULL, OperandInfo261 },  // Inst #3314 = VFNMSUBSD4rm
  { 3315,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22efe004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3315 = VFNMSUBSD4rm_Int
  { 3316,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22efe004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3316 = VFNMSUBSD4rr
  { 3317,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22efe004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3317 = VFNMSUBSD4rr_Int
  { 3318,	4,	1,	0,	0,	0, 0x2afe004e45ULL, NULL, NULL, OperandInfo262 },  // Inst #3318 = VFNMSUBSD4rr_REV
  { 3319,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f3e000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3319 = VFNMSUBSDr132m
  { 3320,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f3e000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3320 = VFNMSUBSDr132r
  { 3321,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5e000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3321 = VFNMSUBSDr213m
  { 3322,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f5e000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3322 = VFNMSUBSDr213m_Int
  { 3323,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5e000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3323 = VFNMSUBSDr213r
  { 3324,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f5e000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3324 = VFNMSUBSDr213r_Int
  { 3325,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8f7e000d46ULL, NULL, NULL, OperandInfo263 },  // Inst #3325 = VFNMSUBSDr231m
  { 3326,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8f7e000d45ULL, NULL, NULL, OperandInfo264 },  // Inst #3326 = VFNMSUBSDr231r
  { 3327,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afc004e46ULL, NULL, NULL, OperandInfo265 },  // Inst #3327 = VFNMSUBSS4mr
  { 3328,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2afc004e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3328 = VFNMSUBSS4mr_Int
  { 3329,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22efc004e46ULL, NULL, NULL, OperandInfo266 },  // Inst #3329 = VFNMSUBSS4rm
  { 3330,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22efc004e46ULL, NULL, NULL, OperandInfo254 },  // Inst #3330 = VFNMSUBSS4rm_Int
  { 3331,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22efc004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3331 = VFNMSUBSS4rr
  { 3332,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x22efc004e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3332 = VFNMSUBSS4rr_Int
  { 3333,	4,	1,	0,	0,	0, 0x2afc004e45ULL, NULL, NULL, OperandInfo267 },  // Inst #3333 = VFNMSUBSS4rr_REV
  { 3334,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b3e000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3334 = VFNMSUBSSr132m
  { 3335,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b3e000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3335 = VFNMSUBSSr132r
  { 3336,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5e000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3336 = VFNMSUBSSr213m
  { 3337,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b5e000d46ULL, NULL, NULL, OperandInfo256 },  // Inst #3337 = VFNMSUBSSr213m_Int
  { 3338,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5e000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3338 = VFNMSUBSSr213r
  { 3339,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b5e000d45ULL, NULL, NULL, OperandInfo258 },  // Inst #3339 = VFNMSUBSSr213r_Int
  { 3340,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8b7e000d46ULL, NULL, NULL, OperandInfo268 },  // Inst #3340 = VFNMSUBSSr231m
  { 3341,	4,	1,	0,	0,	0|(1<<MCID::Commutable), 0x8b7e000d45ULL, NULL, NULL, OperandInfo269 },  // Inst #3341 = VFNMSUBSSr231r
  { 3342,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40303001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3342 = VFRCZPDrm
  { 3343,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x44303001506ULL, NULL, NULL, OperandInfo238 },  // Inst #3343 = VFRCZPDrmY
  { 3344,	2,	1,	0,	0,	0, 0x40303001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3344 = VFRCZPDrr
  { 3345,	2,	1,	0,	0,	0, 0x44303001505ULL, NULL, NULL, OperandInfo242 },  // Inst #3345 = VFRCZPDrrY
  { 3346,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40301001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3346 = VFRCZPSrm
  { 3347,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x44301001506ULL, NULL, NULL, OperandInfo238 },  // Inst #3347 = VFRCZPSrmY
  { 3348,	2,	1,	0,	0,	0, 0x40301001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3348 = VFRCZPSrr
  { 3349,	2,	1,	0,	0,	0, 0x44301001505ULL, NULL, NULL, OperandInfo242 },  // Inst #3349 = VFRCZPSrrY
  { 3350,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40307001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3350 = VFRCZSDrm
  { 3351,	2,	1,	0,	0,	0, 0x40307001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3351 = VFRCZSDrr
  { 3352,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40305001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3352 = VFRCZSSrm
  { 3353,	2,	1,	0,	0,	0, 0x40305001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3353 = VFRCZSSrr
  { 3354,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaab000146ULL, NULL, NULL, OperandInfo228 },  // Inst #3354 = VFsANDNPDrm
  { 3355,	3,	1,	138,	0,	0, 0xaab000145ULL, NULL, NULL, OperandInfo229 },  // Inst #3355 = VFsANDNPDrr
  { 3356,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaaa800106ULL, NULL, NULL, OperandInfo230 },  // Inst #3356 = VFsANDNPSrm
  { 3357,	3,	1,	138,	0,	0, 0xaaa800105ULL, NULL, NULL, OperandInfo231 },  // Inst #3357 = VFsANDNPSrr
  { 3358,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa9000146ULL, NULL, NULL, OperandInfo228 },  // Inst #3358 = VFsANDPDrm
  { 3359,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaa9000145ULL, NULL, NULL, OperandInfo229 },  // Inst #3359 = VFsANDPDrr
  { 3360,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaa8800106ULL, NULL, NULL, OperandInfo230 },  // Inst #3360 = VFsANDPSrm
  { 3361,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaa8800105ULL, NULL, NULL, OperandInfo231 },  // Inst #3361 = VFsANDPSrr
  { 3362,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo228 },  // Inst #3362 = VFsORPDrm
  { 3363,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo229 },  // Inst #3363 = VFsORPDrr
  { 3364,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo230 },  // Inst #3364 = VFsORPSrm
  { 3365,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo231 },  // Inst #3365 = VFsORPSrr
  { 3366,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo228 },  // Inst #3366 = VFsXORPDrm
  { 3367,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo229 },  // Inst #3367 = VFsXORPDrr
  { 3368,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo230 },  // Inst #3368 = VFsXORPSrm
  { 3369,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo231 },  // Inst #3369 = VFsXORPSrr
  { 3370,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5725800d46ULL, NULL, NULL, OperandInfo270 },  // Inst #3370 = VGATHERDPDYrm
  { 3371,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1725800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3371 = VGATHERDPDrm
  { 3372,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5325800d46ULL, NULL, NULL, OperandInfo272 },  // Inst #3372 = VGATHERDPSYrm
  { 3373,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1325800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3373 = VGATHERDPSrm
  { 3374,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5727800d46ULL, NULL, NULL, OperandInfo272 },  // Inst #3374 = VGATHERQPDYrm
  { 3375,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1727800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3375 = VGATHERQPDrm
  { 3376,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5327800d46ULL, NULL, NULL, OperandInfo273 },  // Inst #3376 = VGATHERQPSYrm
  { 3377,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1327800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3377 = VGATHERQPSrm
  { 3378,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4af9000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3378 = VHADDPDYrm
  { 3379,	3,	1,	142,	0,	0, 0x4af9000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3379 = VHADDPDYrr
  { 3380,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xaf9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3380 = VHADDPDrm
  { 3381,	3,	1,	142,	0,	0, 0xaf9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3381 = VHADDPDrr
  { 3382,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4af8800b06ULL, NULL, NULL, OperandInfo226 },  // Inst #3382 = VHADDPSYrm
  { 3383,	3,	1,	142,	0,	0, 0x4af8800b05ULL, NULL, NULL, OperandInfo227 },  // Inst #3383 = VHADDPSYrr
  { 3384,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xaf8800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3384 = VHADDPSrm
  { 3385,	3,	1,	142,	0,	0, 0xaf8800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3385 = VHADDPSrr
  { 3386,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4afb000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3386 = VHSUBPDYrm
  { 3387,	3,	1,	142,	0,	0, 0x4afb000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3387 = VHSUBPDYrr
  { 3388,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xafb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3388 = VHSUBPDrm
  { 3389,	3,	1,	142,	0,	0, 0xafb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3389 = VHSUBPDrr
  { 3390,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0x4afa800b06ULL, NULL, NULL, OperandInfo226 },  // Inst #3390 = VHSUBPSYrm
  { 3391,	3,	1,	142,	0,	0, 0x4afa800b05ULL, NULL, NULL, OperandInfo227 },  // Inst #3391 = VHSUBPSYrr
  { 3392,	7,	1,	141,	0,	0|(1<<MCID::MayLoad), 0xafa800b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3392 = VHSUBPSrm
  { 3393,	3,	1,	142,	0,	0, 0xafa800b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3393 = VHSUBPSrr
  { 3394,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a30804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3394 = VINSERTF128rm
  { 3395,	4,	1,	0,	0,	0, 0x4a30804e45ULL, NULL, NULL, OperandInfo274 },  // Inst #3395 = VINSERTF128rr
  { 3396,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a71804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3396 = VINSERTI128rm
  { 3397,	4,	1,	0,	0,	0, 0x4a71804e45ULL, NULL, NULL, OperandInfo274 },  // Inst #3397 = VINSERTI128rr
  { 3398,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa42804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3398 = VINSERTPSrm
  { 3399,	4,	1,	0,	0,	0, 0xa42804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3399 = VINSERTPSrr
  { 3400,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x43e1000b06ULL, NULL, NULL, OperandInfo238 },  // Inst #3400 = VLDDQUYrm
  { 3401,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x3e1000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #3401 = VLDDQUrm
  { 3402,	5,	0,	196,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011aULL, NULL, NULL, OperandInfo40 },  // Inst #3402 = VLDMXCSR
  { 3403,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList40, NULL, OperandInfo50 },  // Inst #3403 = VMASKMOVDQU
  { 3404,	2,	0,	225,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x3ef800145ULL, ImplicitList41, NULL, OperandInfo50 },  // Inst #3404 = VMASKMOVDQU64
  { 3405,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4a5f000d44ULL, NULL, NULL, OperandInfo275 },  // Inst #3405 = VMASKMOVPDYmr
  { 3406,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a5b000d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3406 = VMASKMOVPDYrm
  { 3407,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xa5f000d44ULL, NULL, NULL, OperandInfo276 },  // Inst #3407 = VMASKMOVPDmr
  { 3408,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa5b000d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3408 = VMASKMOVPDrm
  { 3409,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4a5c800d44ULL, NULL, NULL, OperandInfo275 },  // Inst #3409 = VMASKMOVPSYmr
  { 3410,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a58800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3410 = VMASKMOVPSYrm
  { 3411,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xa5c800d44ULL, NULL, NULL, OperandInfo276 },  // Inst #3411 = VMASKMOVPSmr
  { 3412,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa58800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3412 = VMASKMOVPSrm
  { 3413,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abf000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3413 = VMAXCPDYrm
  { 3414,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4abf000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3414 = VMAXCPDYrr
  { 3415,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3415 = VMAXCPDrm
  { 3416,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xabf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3416 = VMAXCPDrr
  { 3417,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4abe800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3417 = VMAXCPSYrm
  { 3418,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4abe800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3418 = VMAXCPSYrr
  { 3419,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3419 = VMAXCPSrm
  { 3420,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xabe800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3420 = VMAXCPSrr
  { 3421,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #3421 = VMAXCSDrm
  { 3422,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8abe000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #3422 = VMAXCSDrr
  { 3423,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #3423 = VMAXCSSrm
  { 3424,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8abe000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #3424 = VMAXCSSrr
  { 3425,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abf000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3425 = VMAXPDYrm
  { 3426,	3,	1,	11,	0,	0, 0x4abf000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3426 = VMAXPDYrr
  { 3427,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3427 = VMAXPDrm
  { 3428,	3,	1,	11,	0,	0, 0xabf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3428 = VMAXPDrr
  { 3429,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4abe800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3429 = VMAXPSYrm
  { 3430,	3,	1,	13,	0,	0, 0x4abe800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3430 = VMAXPSYrr
  { 3431,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xabe800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3431 = VMAXPSrm
  { 3432,	3,	1,	13,	0,	0, 0xabe800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3432 = VMAXPSrr
  { 3433,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #3433 = VMAXSDrm
  { 3434,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8abe000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3434 = VMAXSDrm_Int
  { 3435,	3,	1,	15,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #3435 = VMAXSDrr
  { 3436,	3,	1,	15,	0,	0, 0x8abe000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3436 = VMAXSDrr_Int
  { 3437,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #3437 = VMAXSSrm
  { 3438,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8abe000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3438 = VMAXSSrm_Int
  { 3439,	3,	1,	17,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #3439 = VMAXSSrr
  { 3440,	3,	1,	17,	0,	0, 0x8abe000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3440 = VMAXSSrr_Int
  { 3441,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000121ULL, NULL, NULL, 0 },  // Inst #3441 = VMCALL
  { 3442,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00015eULL, NULL, NULL, OperandInfo40 },  // Inst #3442 = VMCLEARm
  { 3443,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000131ULL, NULL, NULL, 0 },  // Inst #3443 = VMFUNC
  { 3444,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abb000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3444 = VMINCPDYrm
  { 3445,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0x4abb000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3445 = VMINCPDYrr
  { 3446,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3446 = VMINCPDrm
  { 3447,	3,	1,	11,	0,	0|(1<<MCID::Commutable), 0xabb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3447 = VMINCPDrr
  { 3448,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4aba800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3448 = VMINCPSYrm
  { 3449,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0x4aba800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3449 = VMINCPSYrr
  { 3450,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3450 = VMINCPSrm
  { 3451,	3,	1,	13,	0,	0|(1<<MCID::Commutable), 0xaba800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3451 = VMINCPSrr
  { 3452,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #3452 = VMINCSDrm
  { 3453,	3,	1,	15,	0,	0|(1<<MCID::Commutable), 0x8aba000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #3453 = VMINCSDrr
  { 3454,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #3454 = VMINCSSrm
  { 3455,	3,	1,	17,	0,	0|(1<<MCID::Commutable), 0x8aba000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #3455 = VMINCSSrr
  { 3456,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4abb000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3456 = VMINPDYrm
  { 3457,	3,	1,	11,	0,	0, 0x4abb000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3457 = VMINPDYrr
  { 3458,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xabb000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3458 = VMINPDrm
  { 3459,	3,	1,	11,	0,	0, 0xabb000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3459 = VMINPDrr
  { 3460,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4aba800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3460 = VMINPSYrm
  { 3461,	3,	1,	13,	0,	0, 0x4aba800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3461 = VMINPSYrr
  { 3462,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xaba800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3462 = VMINPSrm
  { 3463,	3,	1,	13,	0,	0, 0xaba800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3463 = VMINPSrr
  { 3464,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #3464 = VMINSDrm
  { 3465,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8aba000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3465 = VMINSDrm_Int
  { 3466,	3,	1,	15,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #3466 = VMINSDrr
  { 3467,	3,	1,	15,	0,	0, 0x8aba000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3467 = VMINSDrr_Int
  { 3468,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #3468 = VMINSSrm
  { 3469,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8aba000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3469 = VMINSSrm_Int
  { 3470,	3,	1,	17,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #3470 = VMINSSrr
  { 3471,	3,	1,	17,	0,	0, 0x8aba000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3471 = VMINSSrr_Int
  { 3472,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000122ULL, NULL, NULL, 0 },  // Inst #3472 = VMLAUNCH
  { 3473,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000136ULL, ImplicitList4, NULL, 0 },  // Inst #3473 = VMLOAD32
  { 3474,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000136ULL, ImplicitList5, NULL, 0 },  // Inst #3474 = VMLOAD64
  { 3475,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000135ULL, NULL, NULL, 0 },  // Inst #3475 = VMMCALL
  { 3476,	2,	1,	285,	0,	0, 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3476 = VMOV64toPQIrr
  { 3477,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo100 },  // Inst #3477 = VMOV64toSDrm
  { 3478,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x6dd000145ULL, NULL, NULL, OperandInfo101 },  // Inst #3478 = VMOV64toSDrr
  { 3479,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x4253000144ULL, NULL, NULL, OperandInfo277 },  // Inst #3479 = VMOVAPDYmr
  { 3480,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4251000146ULL, NULL, NULL, OperandInfo238 },  // Inst #3480 = VMOVAPDYrm
  { 3481,	2,	1,	140,	0,	0, 0x4251000145ULL, NULL, NULL, OperandInfo242 },  // Inst #3481 = VMOVAPDYrr
  { 3482,	2,	1,	140,	0,	0, 0x4253000143ULL, NULL, NULL, OperandInfo242 },  // Inst #3482 = VMOVAPDYrr_REV
  { 3483,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x253000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3483 = VMOVAPDmr
  { 3484,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x251000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3484 = VMOVAPDrm
  { 3485,	2,	1,	140,	0,	0, 0x251000145ULL, NULL, NULL, OperandInfo50 },  // Inst #3485 = VMOVAPDrr
  { 3486,	2,	1,	140,	0,	0, 0x253000143ULL, NULL, NULL, OperandInfo50 },  // Inst #3486 = VMOVAPDrr_REV
  { 3487,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x4252800104ULL, NULL, NULL, OperandInfo277 },  // Inst #3487 = VMOVAPSYmr
  { 3488,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4250800106ULL, NULL, NULL, OperandInfo238 },  // Inst #3488 = VMOVAPSYrm
  { 3489,	2,	1,	140,	0,	0, 0x4250800105ULL, NULL, NULL, OperandInfo242 },  // Inst #3489 = VMOVAPSYrr
  { 3490,	2,	1,	140,	0,	0, 0x4252800103ULL, NULL, NULL, OperandInfo242 },  // Inst #3490 = VMOVAPSYrr_REV
  { 3491,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x252800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3491 = VMOVAPSmr
  { 3492,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x250800106ULL, NULL, NULL, OperandInfo49 },  // Inst #3492 = VMOVAPSrm
  { 3493,	2,	1,	140,	0,	0, 0x250800105ULL, NULL, NULL, OperandInfo50 },  // Inst #3493 = VMOVAPSrr
  { 3494,	2,	1,	140,	0,	0, 0x252800103ULL, NULL, NULL, OperandInfo50 },  // Inst #3494 = VMOVAPSrr_REV
  { 3495,	6,	1,	460,	0,	0|(1<<MCID::MayLoad), 0x4225000b06ULL, NULL, NULL, OperandInfo238 },  // Inst #3495 = VMOVDDUPYrm
  { 3496,	2,	1,	461,	0,	0, 0x4225000b05ULL, NULL, NULL, OperandInfo242 },  // Inst #3496 = VMOVDDUPYrr
  { 3497,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x225000b06ULL, NULL, NULL, OperandInfo49 },  // Inst #3497 = VMOVDDUPrm
  { 3498,	2,	1,	291,	0,	0, 0x225000b05ULL, NULL, NULL, OperandInfo50 },  // Inst #3498 = VMOVDDUPrr
  { 3499,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3499 = VMOVDI2PDIrm
  { 3500,	2,	1,	285,	0,	0, 0x2dd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #3500 = VMOVDI2PDIrr
  { 3501,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo98 },  // Inst #3501 = VMOVDI2SSrm
  { 3502,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x2dd000145ULL, NULL, NULL, OperandInfo104 },  // Inst #3502 = VMOVDI2SSrr
  { 3503,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x42ff800144ULL, NULL, NULL, OperandInfo277 },  // Inst #3503 = VMOVDQAYmr
  { 3504,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x42df800146ULL, NULL, NULL, OperandInfo238 },  // Inst #3504 = VMOVDQAYrm
  { 3505,	2,	1,	140,	0,	0, 0x42df800145ULL, NULL, NULL, OperandInfo242 },  // Inst #3505 = VMOVDQAYrr
  { 3506,	2,	1,	140,	0,	0, 0x42ff800143ULL, NULL, NULL, OperandInfo242 },  // Inst #3506 = VMOVDQAYrr_REV
  { 3507,	6,	0,	287,	0,	0|(1<<MCID::MayStore), 0x2ff800144ULL, NULL, NULL, OperandInfo189 },  // Inst #3507 = VMOVDQAmr
  { 3508,	6,	1,	139,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x2df800146ULL, NULL, NULL, OperandInfo49 },  // Inst #3508 = VMOVDQArm
  { 3509,	2,	1,	140,	0,	0, 0x2df800145ULL, NULL, NULL, OperandInfo50 },  // Inst #3509 = VMOVDQArr
  { 3510,	2,	1,	140,	0,	0, 0x2ff800143ULL, NULL, NULL, OperandInfo50 },  // Inst #3510 = VMOVDQArr_REV
  { 3511,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x42ff800c04ULL, NULL, NULL, OperandInfo277 },  // Inst #3511 = VMOVDQUYmr
  { 3512,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x42df800c06ULL, NULL, NULL, OperandInfo238 },  // Inst #3512 = VMOVDQUYrm
  { 3513,	2,	1,	294,	0,	0, 0x42df800c05ULL, NULL, NULL, OperandInfo242 },  // Inst #3513 = VMOVDQUYrr
  { 3514,	2,	1,	294,	0,	0, 0x42ff800c03ULL, NULL, NULL, OperandInfo242 },  // Inst #3514 = VMOVDQUYrr_REV
  { 3515,	6,	0,	292,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x2ff800c04ULL, NULL, NULL, OperandInfo189 },  // Inst #3515 = VMOVDQUmr
  { 3516,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x2df800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3516 = VMOVDQUrm
  { 3517,	2,	1,	294,	0,	0, 0x2df800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3517 = VMOVDQUrr
  { 3518,	2,	1,	294,	0,	0, 0x2ff800c03ULL, NULL, NULL, OperandInfo50 },  // Inst #3518 = VMOVDQUrr_REV
  { 3519,	3,	1,	291,	0,	0, 0xa24800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3519 = VMOVHLPSrr
  { 3520,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x22f000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3520 = VMOVHPDmr
  { 3521,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa2d000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3521 = VMOVHPDrm
  { 3522,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x22e800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3522 = VMOVHPSmr
  { 3523,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa2c800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3523 = VMOVHPSrm
  { 3524,	3,	1,	291,	0,	0, 0xa2c800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3524 = VMOVLHPSrr
  { 3525,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x227000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3525 = VMOVLPDmr
  { 3526,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa25000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3526 = VMOVLPDrm
  { 3527,	6,	0,	295,	0,	0|(1<<MCID::MayStore), 0x226800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3527 = VMOVLPSmr
  { 3528,	7,	1,	296,	0,	0|(1<<MCID::MayLoad), 0xa24800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3528 = VMOVLPSrm
  { 3529,	6,	0,	462,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x3ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3529 = VMOVLQ128mr
  { 3530,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a1000145ULL, NULL, NULL, OperandInfo278 },  // Inst #3530 = VMOVMSKPDYr64r
  { 3531,	2,	1,	298,	0,	0, 0x42a1000145ULL, NULL, NULL, OperandInfo279 },  // Inst #3531 = VMOVMSKPDYrr32
  { 3532,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a1002145ULL, NULL, NULL, OperandInfo278 },  // Inst #3532 = VMOVMSKPDYrr64
  { 3533,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1000145ULL, NULL, NULL, OperandInfo96 },  // Inst #3533 = VMOVMSKPDr64r
  { 3534,	2,	1,	298,	0,	0, 0x2a1000145ULL, NULL, NULL, OperandInfo97 },  // Inst #3534 = VMOVMSKPDrr32
  { 3535,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a1002145ULL, NULL, NULL, OperandInfo96 },  // Inst #3535 = VMOVMSKPDrr64
  { 3536,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a0800105ULL, NULL, NULL, OperandInfo278 },  // Inst #3536 = VMOVMSKPSYr64r
  { 3537,	2,	1,	298,	0,	0, 0x42a0800105ULL, NULL, NULL, OperandInfo279 },  // Inst #3537 = VMOVMSKPSYrr32
  { 3538,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x42a0802105ULL, NULL, NULL, OperandInfo278 },  // Inst #3538 = VMOVMSKPSYrr64
  { 3539,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0800105ULL, NULL, NULL, OperandInfo96 },  // Inst #3539 = VMOVMSKPSr64r
  { 3540,	2,	1,	298,	0,	0, 0x2a0800105ULL, NULL, NULL, OperandInfo97 },  // Inst #3540 = VMOVMSKPSrr32
  { 3541,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2a0802105ULL, NULL, NULL, OperandInfo96 },  // Inst #3541 = VMOVMSKPSrr64
  { 3542,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4255800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3542 = VMOVNTDQAYrm
  { 3543,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x255800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3543 = VMOVNTDQArm
  { 3544,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x43cf800144ULL, NULL, NULL, OperandInfo277 },  // Inst #3544 = VMOVNTDQYmr
  { 3545,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x3cf800144ULL, NULL, NULL, OperandInfo189 },  // Inst #3545 = VMOVNTDQmr
  { 3546,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x4257000144ULL, NULL, NULL, OperandInfo277 },  // Inst #3546 = VMOVNTPDYmr
  { 3547,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x257000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3547 = VMOVNTPDmr
  { 3548,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x4256800104ULL, NULL, NULL, OperandInfo277 },  // Inst #3548 = VMOVNTPSYmr
  { 3549,	6,	0,	299,	0,	0|(1<<MCID::MayStore), 0x256800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3549 = VMOVNTPSmr
  { 3550,	6,	0,	286,	0,	0|(1<<MCID::MayStore), 0x2fd000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3550 = VMOVPDI2DImr
  { 3551,	2,	1,	300,	0,	0, 0x2fd000143ULL, NULL, NULL, OperandInfo97 },  // Inst #3551 = VMOVPDI2DIrr
  { 3552,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x3ad000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3552 = VMOVPQI2QImr
  { 3553,	2,	1,	300,	0,	0, 0x6fd000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3553 = VMOVPQIto64rr
  { 3554,	6,	1,	182,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3554 = VMOVQI2PQIrm
  { 3555,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fd000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3555 = VMOVQd64rr
  { 3556,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6fd000143ULL, NULL, NULL, OperandInfo96 },  // Inst #3556 = VMOVQd64rr_alt
  { 3557,	2,	1,	285,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3557 = VMOVQs64rr
  { 3558,	2,	1,	238,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2fc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3558 = VMOVQxrxr
  { 3559,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x8222000b04ULL, NULL, NULL, OperandInfo191 },  // Inst #3559 = VMOVSDmr
  { 3560,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000b06ULL, NULL, NULL, OperandInfo100 },  // Inst #3560 = VMOVSDrm
  { 3561,	3,	1,	305,	0,	0, 0x8a20000b05ULL, NULL, NULL, OperandInfo280 },  // Inst #3561 = VMOVSDrr
  { 3562,	3,	1,	305,	0,	0, 0x8a22000b03ULL, NULL, NULL, OperandInfo280 },  // Inst #3562 = VMOVSDrr_REV
  { 3563,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x6fd000144ULL, NULL, NULL, OperandInfo191 },  // Inst #3563 = VMOVSDto64mr
  { 3564,	2,	1,	285,	0,	0|(1<<MCID::Bitcast), 0x6fd000143ULL, NULL, NULL, OperandInfo106 },  // Inst #3564 = VMOVSDto64rr
  { 3565,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x422c800c06ULL, NULL, NULL, OperandInfo238 },  // Inst #3565 = VMOVSHDUPYrm
  { 3566,	2,	1,	291,	0,	0, 0x422c800c05ULL, NULL, NULL, OperandInfo242 },  // Inst #3566 = VMOVSHDUPYrr
  { 3567,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x22c800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3567 = VMOVSHDUPrm
  { 3568,	2,	1,	291,	0,	0, 0x22c800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3568 = VMOVSHDUPrr
  { 3569,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x4224800c06ULL, NULL, NULL, OperandInfo238 },  // Inst #3569 = VMOVSLDUPYrm
  { 3570,	2,	1,	291,	0,	0, 0x4224800c05ULL, NULL, NULL, OperandInfo242 },  // Inst #3570 = VMOVSLDUPYrr
  { 3571,	6,	1,	290,	0,	0|(1<<MCID::MayLoad), 0x224800c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3571 = VMOVSLDUPrm
  { 3572,	2,	1,	291,	0,	0, 0x224800c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3572 = VMOVSLDUPrr
  { 3573,	6,	0,	297,	0,	0|(1<<MCID::MayStore), 0x2fd000144ULL, NULL, NULL, OperandInfo193 },  // Inst #3573 = VMOVSS2DImr
  { 3574,	2,	1,	300,	0,	0|(1<<MCID::Bitcast), 0x2fd000143ULL, NULL, NULL, OperandInfo109 },  // Inst #3574 = VMOVSS2DIrr
  { 3575,	6,	0,	303,	0,	0|(1<<MCID::MayStore), 0x8222000c04ULL, NULL, NULL, OperandInfo193 },  // Inst #3575 = VMOVSSmr
  { 3576,	6,	1,	304,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x8220000c06ULL, NULL, NULL, OperandInfo98 },  // Inst #3576 = VMOVSSrm
  { 3577,	3,	1,	305,	0,	0, 0x8a20000c05ULL, NULL, NULL, OperandInfo281 },  // Inst #3577 = VMOVSSrr
  { 3578,	3,	1,	305,	0,	0, 0x8a22000c03ULL, NULL, NULL, OperandInfo281 },  // Inst #3578 = VMOVSSrr_REV
  { 3579,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x4223000144ULL, NULL, NULL, OperandInfo277 },  // Inst #3579 = VMOVUPDYmr
  { 3580,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x4221000146ULL, NULL, NULL, OperandInfo238 },  // Inst #3580 = VMOVUPDYrm
  { 3581,	2,	1,	294,	0,	0, 0x4221000145ULL, NULL, NULL, OperandInfo242 },  // Inst #3581 = VMOVUPDYrr
  { 3582,	2,	1,	294,	0,	0, 0x4223000143ULL, NULL, NULL, OperandInfo242 },  // Inst #3582 = VMOVUPDYrr_REV
  { 3583,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x223000144ULL, NULL, NULL, OperandInfo189 },  // Inst #3583 = VMOVUPDmr
  { 3584,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad), 0x221000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3584 = VMOVUPDrm
  { 3585,	2,	1,	294,	0,	0, 0x221000145ULL, NULL, NULL, OperandInfo50 },  // Inst #3585 = VMOVUPDrr
  { 3586,	2,	1,	294,	0,	0, 0x223000143ULL, NULL, NULL, OperandInfo50 },  // Inst #3586 = VMOVUPDrr_REV
  { 3587,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x4222800104ULL, NULL, NULL, OperandInfo277 },  // Inst #3587 = VMOVUPSYmr
  { 3588,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x4220800106ULL, NULL, NULL, OperandInfo238 },  // Inst #3588 = VMOVUPSYrm
  { 3589,	2,	1,	294,	0,	0, 0x4220800105ULL, NULL, NULL, OperandInfo242 },  // Inst #3589 = VMOVUPSYrr
  { 3590,	2,	1,	294,	0,	0, 0x4222800103ULL, NULL, NULL, OperandInfo242 },  // Inst #3590 = VMOVUPSYrr_REV
  { 3591,	6,	0,	292,	0,	0|(1<<MCID::MayStore), 0x222800104ULL, NULL, NULL, OperandInfo189 },  // Inst #3591 = VMOVUPSmr
  { 3592,	6,	1,	293,	0,	0|(1<<MCID::FoldableAsLoad)|(1<<MCID::MayLoad)|(1<<MCID::Rematerializable), 0x220800106ULL, NULL, NULL, OperandInfo49 },  // Inst #3592 = VMOVUPSrm
  { 3593,	2,	1,	294,	0,	0, 0x220800105ULL, NULL, NULL, OperandInfo50 },  // Inst #3593 = VMOVUPSrr
  { 3594,	2,	1,	294,	0,	0, 0x222800103ULL, NULL, NULL, OperandInfo50 },  // Inst #3594 = VMOVUPSrr_REV
  { 3595,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2dd000146ULL, NULL, NULL, OperandInfo49 },  // Inst #3595 = VMOVZDI2PDIrm
  { 3596,	2,	1,	285,	0,	0, 0x2dd000145ULL, NULL, NULL, OperandInfo190 },  // Inst #3596 = VMOVZDI2PDIrr
  { 3597,	6,	1,	310,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3597 = VMOVZPQILo2PQIrm
  { 3598,	2,	1,	311,	0,	0, 0x2fc000c05ULL, NULL, NULL, OperandInfo50 },  // Inst #3598 = VMOVZPQILo2PQIrr
  { 3599,	6,	1,	286,	0,	0|(1<<MCID::MayLoad), 0x2fc000c06ULL, NULL, NULL, OperandInfo49 },  // Inst #3599 = VMOVZQI2PQIrm
  { 3600,	2,	1,	285,	0,	0, 0x6dd000145ULL, NULL, NULL, OperandInfo185 },  // Inst #3600 = VMOVZQI2PQIrr
  { 3601,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a85804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3601 = VMPSADBWYrmi
  { 3602,	4,	1,	0,	0,	0, 0x4a85804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3602 = VMPSADBWYrri
  { 3603,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa85804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3603 = VMPSADBWrmi
  { 3604,	4,	1,	0,	0,	0, 0xa85804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3604 = VMPSADBWrri
  { 3605,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011eULL, NULL, NULL, OperandInfo40 },  // Inst #3605 = VMPTRLDm
  { 3606,	5,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e00011fULL, NULL, NULL, OperandInfo40 },  // Inst #3606 = VMPTRSTm
  { 3607,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo20 },  // Inst #3607 = VMREAD32rm
  { 3608,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo32 },  // Inst #3608 = VMREAD32rr
  { 3609,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000104ULL, NULL, NULL, OperandInfo24 },  // Inst #3609 = VMREAD64rm
  { 3610,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf0000103ULL, NULL, NULL, OperandInfo33 },  // Inst #3610 = VMREAD64rr
  { 3611,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000123ULL, NULL, NULL, 0 },  // Inst #3611 = VMRESUME
  { 3612,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000134ULL, ImplicitList4, NULL, 0 },  // Inst #3612 = VMRUN32
  { 3613,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000134ULL, ImplicitList5, NULL, 0 },  // Inst #3613 = VMRUN64
  { 3614,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList4, NULL, 0 },  // Inst #3614 = VMSAVE32
  { 3615,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000137ULL, ImplicitList5, NULL, 0 },  // Inst #3615 = VMSAVE64
  { 3616,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0x4ab3000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3616 = VMULPDYrm
  { 3617,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0x4ab3000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3617 = VMULPDYrr
  { 3618,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xab3000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3618 = VMULPDrm
  { 3619,	3,	1,	325,	0,	0|(1<<MCID::Commutable), 0xab3000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3619 = VMULPDrr
  { 3620,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0x4ab2800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3620 = VMULPSYrm
  { 3621,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0x4ab2800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3621 = VMULPSYrr
  { 3622,	7,	1,	324,	0,	0|(1<<MCID::MayLoad), 0xab2800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3622 = VMULPSrm
  { 3623,	3,	1,	326,	0,	0|(1<<MCID::Commutable), 0xab2800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3623 = VMULPSrr
  { 3624,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #3624 = VMULSDrm
  { 3625,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #3625 = VMULSDrm_Int
  { 3626,	3,	1,	328,	0,	0|(1<<MCID::Commutable), 0x8ab2000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #3626 = VMULSDrr
  { 3627,	3,	1,	328,	0,	0, 0x8ab2000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #3627 = VMULSDrr_Int
  { 3628,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #3628 = VMULSSrm
  { 3629,	7,	1,	327,	0,	0|(1<<MCID::MayLoad), 0x8ab2000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #3629 = VMULSSrm_Int
  { 3630,	3,	1,	329,	0,	0|(1<<MCID::Commutable), 0x8ab2000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #3630 = VMULSSrr
  { 3631,	3,	1,	329,	0,	0, 0x8ab2000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #3631 = VMULSSrr_Int
  { 3632,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo12 },  // Inst #3632 = VMWRITE32rm
  { 3633,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo32 },  // Inst #3633 = VMWRITE32rr
  { 3634,	6,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000106ULL, NULL, NULL, OperandInfo13 },  // Inst #3634 = VMWRITE64rm
  { 3635,	2,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xf2000105ULL, NULL, NULL, OperandInfo33 },  // Inst #3635 = VMWRITE64rr
  { 3636,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000124ULL, NULL, NULL, 0 },  // Inst #3636 = VMXOFF
  { 3637,	5,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x18e000c1eULL, NULL, NULL, OperandInfo40 },  // Inst #3637 = VMXON
  { 3638,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aad000146ULL, NULL, NULL, OperandInfo226 },  // Inst #3638 = VORPDYrm
  { 3639,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aad000145ULL, NULL, NULL, OperandInfo227 },  // Inst #3639 = VORPDYrr
  { 3640,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaad000146ULL, NULL, NULL, OperandInfo138 },  // Inst #3640 = VORPDrm
  { 3641,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaad000145ULL, NULL, NULL, OperandInfo139 },  // Inst #3641 = VORPDrr
  { 3642,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aac800106ULL, NULL, NULL, OperandInfo226 },  // Inst #3642 = VORPSYrm
  { 3643,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aac800105ULL, NULL, NULL, OperandInfo227 },  // Inst #3643 = VORPSYrr
  { 3644,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaac800106ULL, NULL, NULL, OperandInfo138 },  // Inst #3644 = VORPSrm
  { 3645,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaac800105ULL, NULL, NULL, OperandInfo139 },  // Inst #3645 = VORPSrr
  { 3646,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x239800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3646 = VPABSBrm128
  { 3647,	6,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x4239800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3647 = VPABSBrm256
  { 3648,	2,	1,	337,	0,	0, 0x239800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3648 = VPABSBrr128
  { 3649,	2,	1,	349,	0,	0, 0x4239800d45ULL, NULL, NULL, OperandInfo242 },  // Inst #3649 = VPABSBrr256
  { 3650,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x23d800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3650 = VPABSDrm128
  { 3651,	6,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x423d800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3651 = VPABSDrm256
  { 3652,	2,	1,	337,	0,	0, 0x23d800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3652 = VPABSDrr128
  { 3653,	2,	1,	349,	0,	0, 0x423d800d45ULL, NULL, NULL, OperandInfo242 },  // Inst #3653 = VPABSDrr256
  { 3654,	6,	1,	336,	0,	0|(1<<MCID::MayLoad), 0x23b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3654 = VPABSWrm128
  { 3655,	6,	1,	463,	0,	0|(1<<MCID::MayLoad), 0x423b800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3655 = VPABSWrm256
  { 3656,	2,	1,	337,	0,	0, 0x23b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3656 = VPABSWrr128
  { 3657,	2,	1,	349,	0,	0, 0x423b800d45ULL, NULL, NULL, OperandInfo242 },  // Inst #3657 = VPABSWrr256
  { 3658,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4ad7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3658 = VPACKSSDWYrm
  { 3659,	3,	1,	339,	0,	0, 0x4ad7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3659 = VPACKSSDWYrr
  { 3660,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xad7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3660 = VPACKSSDWrm
  { 3661,	3,	1,	339,	0,	0, 0xad7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3661 = VPACKSSDWrr
  { 3662,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4ac7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3662 = VPACKSSWBYrm
  { 3663,	3,	1,	339,	0,	0, 0x4ac7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3663 = VPACKSSWBYrr
  { 3664,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xac7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3664 = VPACKSSWBrm
  { 3665,	3,	1,	339,	0,	0, 0xac7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3665 = VPACKSSWBrr
  { 3666,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a57800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3666 = VPACKUSDWYrm
  { 3667,	3,	1,	0,	0,	0, 0x4a57800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3667 = VPACKUSDWYrr
  { 3668,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa57800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3668 = VPACKUSDWrm
  { 3669,	3,	1,	0,	0,	0, 0xa57800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3669 = VPACKUSDWrr
  { 3670,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4acf800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3670 = VPACKUSWBYrm
  { 3671,	3,	1,	339,	0,	0, 0x4acf800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3671 = VPACKUSWBYrr
  { 3672,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xacf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3672 = VPACKUSWBrm
  { 3673,	3,	1,	339,	0,	0, 0xacf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3673 = VPACKUSWBrr
  { 3674,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bf9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3674 = VPADDBYrm
  { 3675,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bf9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3675 = VPADDBYrr
  { 3676,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbf9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3676 = VPADDBrm
  { 3677,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbf9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3677 = VPADDBrr
  { 3678,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bfd800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3678 = VPADDDYrm
  { 3679,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bfd800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3679 = VPADDDYrr
  { 3680,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbfd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3680 = VPADDDrm
  { 3681,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbfd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3681 = VPADDDrr
  { 3682,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0x4ba9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3682 = VPADDQYrm
  { 3683,	3,	1,	341,	0,	0|(1<<MCID::Commutable), 0x4ba9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3683 = VPADDQYrr
  { 3684,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0xba9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3684 = VPADDQrm
  { 3685,	3,	1,	341,	0,	0|(1<<MCID::Commutable), 0xba9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3685 = VPADDQrr
  { 3686,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bd9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3686 = VPADDSBYrm
  { 3687,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bd9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3687 = VPADDSBYrr
  { 3688,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbd9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3688 = VPADDSBrm
  { 3689,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbd9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3689 = VPADDSBrr
  { 3690,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bdb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3690 = VPADDSWYrm
  { 3691,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bdb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3691 = VPADDSWYrr
  { 3692,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbdb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3692 = VPADDSWrm
  { 3693,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbdb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3693 = VPADDSWrr
  { 3694,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bb9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3694 = VPADDUSBYrm
  { 3695,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bb9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3695 = VPADDUSBYrr
  { 3696,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbb9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3696 = VPADDUSBrm
  { 3697,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbb9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3697 = VPADDUSBrr
  { 3698,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bbb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3698 = VPADDUSWYrm
  { 3699,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bbb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3699 = VPADDUSWYrr
  { 3700,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbbb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3700 = VPADDUSWrm
  { 3701,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbbb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3701 = VPADDUSWrr
  { 3702,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bfb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3702 = VPADDWYrm
  { 3703,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bfb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3703 = VPADDWYrr
  { 3704,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbfb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3704 = VPADDWrm
  { 3705,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbfb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3705 = VPADDWrr
  { 3706,	8,	1,	342,	0,	0|(1<<MCID::MayLoad), 0xa1f804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3706 = VPALIGNR128rm
  { 3707,	4,	1,	343,	0,	0, 0xa1f804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3707 = VPALIGNR128rr
  { 3708,	8,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4a1f804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3708 = VPALIGNR256rm
  { 3709,	4,	1,	461,	0,	0, 0x4a1f804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3709 = VPALIGNR256rr
  { 3710,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bbf800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3710 = VPANDNYrm
  { 3711,	3,	1,	138,	0,	0, 0x4bbf800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3711 = VPANDNYrr
  { 3712,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbbf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3712 = VPANDNrm
  { 3713,	3,	1,	138,	0,	0, 0xbbf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3713 = VPANDNrr
  { 3714,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bb7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3714 = VPANDYrm
  { 3715,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bb7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3715 = VPANDYrr
  { 3716,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbb7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3716 = VPANDrm
  { 3717,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbb7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3717 = VPANDrr
  { 3718,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bc1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3718 = VPAVGBYrm
  { 3719,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bc1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3719 = VPAVGBYrr
  { 3720,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbc1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3720 = VPAVGBrm
  { 3721,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbc1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3721 = VPAVGBrr
  { 3722,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bc7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3722 = VPAVGWYrm
  { 3723,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bc7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3723 = VPAVGWYrr
  { 3724,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbc7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3724 = VPAVGWrm
  { 3725,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbc7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3725 = VPAVGWrr
  { 3726,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a05804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3726 = VPBLENDDYrmi
  { 3727,	4,	1,	0,	0,	0, 0x4a05804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3727 = VPBLENDDYrri
  { 3728,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa05804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3728 = VPBLENDDrmi
  { 3729,	4,	1,	0,	0,	0, 0xa05804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3729 = VPBLENDDrri
  { 3730,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a99804e46ULL, NULL, NULL, OperandInfo234 },  // Inst #3730 = VPBLENDVBYrm
  { 3731,	4,	1,	0,	0,	0, 0x6a99804e45ULL, NULL, NULL, OperandInfo235 },  // Inst #3731 = VPBLENDVBYrr
  { 3732,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a99804e46ULL, NULL, NULL, OperandInfo236 },  // Inst #3732 = VPBLENDVBrm
  { 3733,	4,	1,	0,	0,	0, 0x2a99804e45ULL, NULL, NULL, OperandInfo237 },  // Inst #3733 = VPBLENDVBrr
  { 3734,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1d804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3734 = VPBLENDWYrmi
  { 3735,	4,	1,	0,	0,	0, 0x4a1d804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3735 = VPBLENDWYrri
  { 3736,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1d804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3736 = VPBLENDWrmi
  { 3737,	4,	1,	0,	0,	0, 0xa1d804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3737 = VPBLENDWrri
  { 3738,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42f1800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3738 = VPBROADCASTBYrm
  { 3739,	2,	1,	0,	0,	0, 0x42f1800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3739 = VPBROADCASTBYrr
  { 3740,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2f1800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3740 = VPBROADCASTBrm
  { 3741,	2,	1,	0,	0,	0, 0x2f1800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3741 = VPBROADCASTBrr
  { 3742,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b1800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3742 = VPBROADCASTDYrm
  { 3743,	2,	1,	0,	0,	0, 0x42b1800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3743 = VPBROADCASTDYrr
  { 3744,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b1800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3744 = VPBROADCASTDrm
  { 3745,	2,	1,	0,	0,	0, 0x2b1800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3745 = VPBROADCASTDrr
  { 3746,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b3800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3746 = VPBROADCASTQYrm
  { 3747,	2,	1,	0,	0,	0, 0x42b3800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3747 = VPBROADCASTQYrr
  { 3748,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2b3800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3748 = VPBROADCASTQrm
  { 3749,	2,	1,	0,	0,	0, 0x2b3800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3749 = VPBROADCASTQrr
  { 3750,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42f3800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #3750 = VPBROADCASTWYrm
  { 3751,	2,	1,	0,	0,	0, 0x42f3800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #3751 = VPBROADCASTWYrr
  { 3752,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2f3800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3752 = VPBROADCASTWrm
  { 3753,	2,	1,	0,	0,	0, 0x2f3800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3753 = VPBROADCASTWrr
  { 3754,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa89804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3754 = VPCLMULQDQrm
  { 3755,	4,	1,	0,	0,	0, 0xa89804e45ULL, NULL, NULL, OperandInfo85 },  // Inst #3755 = VPCLMULQDQrr
  { 3756,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b45005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3756 = VPCMOVmr
  { 3757,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x46b45005406ULL, NULL, NULL, OperandInfo234 },  // Inst #3757 = VPCMOVmrY
  { 3758,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x62f45005406ULL, NULL, NULL, OperandInfo254 },  // Inst #3758 = VPCMOVrm
  { 3759,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x66f45005406ULL, NULL, NULL, OperandInfo255 },  // Inst #3759 = VPCMOVrmY
  { 3760,	4,	1,	0,	0,	0, 0x42b45005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3760 = VPCMOVrr
  { 3761,	4,	1,	0,	0,	0, 0x46b45005405ULL, NULL, NULL, OperandInfo235 },  // Inst #3761 = VPCMOVrrY
  { 3762,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4ae9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3762 = VPCMPEQBYrm
  { 3763,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4ae9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3763 = VPCMPEQBYrr
  { 3764,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xae9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3764 = VPCMPEQBrm
  { 3765,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xae9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3765 = VPCMPEQBrr
  { 3766,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4aed800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3766 = VPCMPEQDYrm
  { 3767,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4aed800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3767 = VPCMPEQDYrr
  { 3768,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xaed800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3768 = VPCMPEQDrm
  { 3769,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xaed800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3769 = VPCMPEQDrr
  { 3770,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a53800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3770 = VPCMPEQQYrm
  { 3771,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a53800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3771 = VPCMPEQQYrr
  { 3772,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa53800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3772 = VPCMPEQQrm
  { 3773,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa53800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3773 = VPCMPEQQrr
  { 3774,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4aeb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3774 = VPCMPEQWYrm
  { 3775,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4aeb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3775 = VPCMPEQWYrr
  { 3776,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xaeb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3776 = VPCMPEQWrm
  { 3777,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xaeb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3777 = VPCMPEQWrr
  { 3778,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo208 },  // Inst #3778 = VPCMPESTRIMEM
  { 3779,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo209 },  // Inst #3779 = VPCMPESTRIREG
  { 3780,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c3804e46ULL, ImplicitList17, ImplicitList56, OperandInfo51 },  // Inst #3780 = VPCMPESTRIrm
  { 3781,	3,	0,	0,	0,	0, 0x2c3804e45ULL, ImplicitList17, ImplicitList56, OperandInfo52 },  // Inst #3781 = VPCMPESTRIrr
  { 3782,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo137 },  // Inst #3782 = VPCMPESTRM128MEM
  { 3783,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList17, ImplicitList2, OperandInfo85 },  // Inst #3783 = VPCMPESTRM128REG
  { 3784,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c1804e46ULL, ImplicitList17, ImplicitList57, OperandInfo51 },  // Inst #3784 = VPCMPESTRM128rm
  { 3785,	3,	0,	0,	0,	0, 0x2c1804e45ULL, ImplicitList17, ImplicitList57, OperandInfo52 },  // Inst #3785 = VPCMPESTRM128rr
  { 3786,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4ac9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3786 = VPCMPGTBYrm
  { 3787,	3,	1,	339,	0,	0, 0x4ac9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3787 = VPCMPGTBYrr
  { 3788,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xac9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3788 = VPCMPGTBrm
  { 3789,	3,	1,	339,	0,	0, 0xac9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3789 = VPCMPGTBrr
  { 3790,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4acd800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3790 = VPCMPGTDYrm
  { 3791,	3,	1,	339,	0,	0, 0x4acd800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3791 = VPCMPGTDYrr
  { 3792,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xacd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3792 = VPCMPGTDrm
  { 3793,	3,	1,	339,	0,	0, 0xacd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3793 = VPCMPGTDrr
  { 3794,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a6f800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3794 = VPCMPGTQYrm
  { 3795,	3,	1,	0,	0,	0, 0x4a6f800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3795 = VPCMPGTQYrr
  { 3796,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa6f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3796 = VPCMPGTQrm
  { 3797,	3,	1,	0,	0,	0, 0xa6f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3797 = VPCMPGTQrr
  { 3798,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4acb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3798 = VPCMPGTWYrm
  { 3799,	3,	1,	339,	0,	0, 0x4acb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3799 = VPCMPGTWYrr
  { 3800,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xacb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3800 = VPCMPGTWrm
  { 3801,	3,	1,	339,	0,	0, 0xacb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3801 = VPCMPGTWrr
  { 3802,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo208 },  // Inst #3802 = VPCMPISTRIMEM
  { 3803,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo209 },  // Inst #3803 = VPCMPISTRIREG
  { 3804,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c7804e46ULL, NULL, ImplicitList56, OperandInfo51 },  // Inst #3804 = VPCMPISTRIrm
  { 3805,	3,	0,	0,	0,	0, 0x2c7804e45ULL, NULL, ImplicitList56, OperandInfo52 },  // Inst #3805 = VPCMPISTRIrr
  { 3806,	8,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo137 },  // Inst #3806 = VPCMPISTRM128MEM
  { 3807,	4,	1,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, NULL, ImplicitList2, OperandInfo85 },  // Inst #3807 = VPCMPISTRM128REG
  { 3808,	7,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x2c5804e46ULL, NULL, ImplicitList57, OperandInfo51 },  // Inst #3808 = VPCMPISTRM128rm
  { 3809,	3,	0,	0,	0,	0, 0x2c5804e45ULL, NULL, ImplicitList57, OperandInfo52 },  // Inst #3809 = VPCMPISTRM128rr
  { 3810,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40b99005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3810 = VPCOMBmi
  { 3811,	4,	1,	0,	0,	0, 0x40b99005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3811 = VPCOMBri
  { 3812,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40b9d005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3812 = VPCOMDmi
  { 3813,	4,	1,	0,	0,	0, 0x40b9d005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3813 = VPCOMDri
  { 3814,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40b9f005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3814 = VPCOMQmi
  { 3815,	4,	1,	0,	0,	0, 0x40b9f005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3815 = VPCOMQri
  { 3816,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40bd9005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3816 = VPCOMUBmi
  { 3817,	4,	1,	0,	0,	0, 0x40bd9005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3817 = VPCOMUBri
  { 3818,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40bdd005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3818 = VPCOMUDmi
  { 3819,	4,	1,	0,	0,	0, 0x40bdd005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3819 = VPCOMUDri
  { 3820,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40bdf005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3820 = VPCOMUQmi
  { 3821,	4,	1,	0,	0,	0, 0x40bdf005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3821 = VPCOMUQri
  { 3822,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40bdb005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3822 = VPCOMUWmi
  { 3823,	4,	1,	0,	0,	0, 0x40bdb005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3823 = VPCOMUWri
  { 3824,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40b9b005406ULL, NULL, NULL, OperandInfo137 },  // Inst #3824 = VPCOMWmi
  { 3825,	4,	1,	0,	0,	0, 0x40b9b005405ULL, NULL, NULL, OperandInfo85 },  // Inst #3825 = VPCOMWri
  { 3826,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a0c804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3826 = VPERM2F128rm
  { 3827,	4,	1,	0,	0,	0, 0x4a0c804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3827 = VPERM2F128rr
  { 3828,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8d804e46ULL, NULL, NULL, OperandInfo233 },  // Inst #3828 = VPERM2I128rm
  { 3829,	4,	1,	0,	0,	0, 0x4a8d804e45ULL, NULL, NULL, OperandInfo86 },  // Inst #3829 = VPERM2I128rr
  { 3830,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a6d800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3830 = VPERMDYrm
  { 3831,	3,	1,	0,	0,	0, 0x4a6d800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3831 = VPERMDYrr
  { 3832,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a93804e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3832 = VPERMIL2PDmr
  { 3833,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a93804e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3833 = VPERMIL2PDmrY
  { 3834,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22e93804e46ULL, NULL, NULL, OperandInfo284 },  // Inst #3834 = VPERMIL2PDrm
  { 3835,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26e93804e46ULL, NULL, NULL, OperandInfo285 },  // Inst #3835 = VPERMIL2PDrmY
  { 3836,	5,	1,	0,	0,	0, 0x2a93804e45ULL, NULL, NULL, OperandInfo286 },  // Inst #3836 = VPERMIL2PDrr
  { 3837,	5,	1,	0,	0,	0, 0x6a93804e45ULL, NULL, NULL, OperandInfo287 },  // Inst #3837 = VPERMIL2PDrrY
  { 3838,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x2a91804e46ULL, NULL, NULL, OperandInfo282 },  // Inst #3838 = VPERMIL2PSmr
  { 3839,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x6a91804e46ULL, NULL, NULL, OperandInfo283 },  // Inst #3839 = VPERMIL2PSmrY
  { 3840,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x22e91804e46ULL, NULL, NULL, OperandInfo284 },  // Inst #3840 = VPERMIL2PSrm
  { 3841,	9,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26e91804e46ULL, NULL, NULL, OperandInfo285 },  // Inst #3841 = VPERMIL2PSrmY
  { 3842,	5,	1,	0,	0,	0, 0x2a91804e45ULL, NULL, NULL, OperandInfo286 },  // Inst #3842 = VPERMIL2PSrr
  { 3843,	5,	1,	0,	0,	0, 0x6a91804e45ULL, NULL, NULL, OperandInfo287 },  // Inst #3843 = VPERMIL2PSrrY
  { 3844,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x420b004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3844 = VPERMILPDYmi
  { 3845,	3,	1,	0,	0,	0, 0x420b004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3845 = VPERMILPDYri
  { 3846,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a1b000d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3846 = VPERMILPDYrm
  { 3847,	3,	1,	0,	0,	0, 0x4a1b000d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3847 = VPERMILPDYrr
  { 3848,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x20b004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #3848 = VPERMILPDmi
  { 3849,	3,	1,	0,	0,	0, 0x20b004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #3849 = VPERMILPDri
  { 3850,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa1b000d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3850 = VPERMILPDrm
  { 3851,	3,	1,	0,	0,	0, 0xa1b000d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3851 = VPERMILPDrr
  { 3852,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4208804e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3852 = VPERMILPSYmi
  { 3853,	3,	1,	0,	0,	0, 0x4208804e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3853 = VPERMILPSYri
  { 3854,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a18800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3854 = VPERMILPSYrm
  { 3855,	3,	1,	0,	0,	0, 0x4a18800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3855 = VPERMILPSYrr
  { 3856,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x208804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #3856 = VPERMILPSmi
  { 3857,	3,	1,	0,	0,	0, 0x208804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #3857 = VPERMILPSri
  { 3858,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa18800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3858 = VPERMILPSrm
  { 3859,	3,	1,	0,	0,	0, 0xa18800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3859 = VPERMILPSrr
  { 3860,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4603004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3860 = VPERMPDYmi
  { 3861,	3,	1,	0,	0,	0, 0x4603004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3861 = VPERMPDYri
  { 3862,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a2c800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3862 = VPERMPSYrm
  { 3863,	3,	1,	0,	0,	0, 0x4a2c800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3863 = VPERMPSYrr
  { 3864,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4601804e46ULL, NULL, NULL, OperandInfo288 },  // Inst #3864 = VPERMQYmi
  { 3865,	3,	1,	0,	0,	0, 0x4601804e45ULL, NULL, NULL, OperandInfo289 },  // Inst #3865 = VPERMQYri
  { 3866,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x229804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3866 = VPEXTRBmr
  { 3867,	3,	1,	0,	0,	0, 0x229804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #3867 = VPEXTRBrr
  { 3868,	3,	1,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x229804e43ULL, NULL, NULL, OperandInfo210 },  // Inst #3868 = VPEXTRBrr64
  { 3869,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22d804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3869 = VPEXTRDmr
  { 3870,	3,	1,	0,	0,	0, 0x22d804e43ULL, NULL, NULL, OperandInfo115 },  // Inst #3870 = VPEXTRDrr
  { 3871,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x62d806e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3871 = VPEXTRQmr
  { 3872,	3,	1,	0,	0,	0, 0x62d806e43ULL, NULL, NULL, OperandInfo210 },  // Inst #3872 = VPEXTRQrr
  { 3873,	7,	0,	0,	0,	0|(1<<MCID::MayStore), 0x22b804e44ULL, NULL, NULL, OperandInfo114 },  // Inst #3873 = VPEXTRWmr
  { 3874,	3,	1,	461,	0,	0, 0x38b804145ULL, NULL, NULL, OperandInfo115 },  // Inst #3874 = VPEXTRWri
  { 3875,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5321800d46ULL, NULL, NULL, OperandInfo272 },  // Inst #3875 = VPGATHERDDYrm
  { 3876,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1321800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3876 = VPGATHERDDrm
  { 3877,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5721800d46ULL, NULL, NULL, OperandInfo270 },  // Inst #3877 = VPGATHERDQYrm
  { 3878,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1721800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3878 = VPGATHERDQrm
  { 3879,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5323800d46ULL, NULL, NULL, OperandInfo273 },  // Inst #3879 = VPGATHERQDYrm
  { 3880,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1323800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3880 = VPGATHERQDrm
  { 3881,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x5723800d46ULL, NULL, NULL, OperandInfo272 },  // Inst #3881 = VPGATHERQQYrm
  { 3882,	9,	2,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::UnmodeledSideEffects), 0x1723800d46ULL, NULL, NULL, OperandInfo271 },  // Inst #3882 = VPGATHERQQrm
  { 3883,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40385001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3883 = VPHADDBDrm
  { 3884,	2,	1,	0,	0,	0, 0x40385001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3884 = VPHADDBDrr
  { 3885,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40387001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3885 = VPHADDBQrm
  { 3886,	2,	1,	0,	0,	0, 0x40387001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3886 = VPHADDBQrr
  { 3887,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40383001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3887 = VPHADDBWrm
  { 3888,	2,	1,	0,	0,	0, 0x40383001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3888 = VPHADDBWrr
  { 3889,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40397001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3889 = VPHADDDQrm
  { 3890,	2,	1,	0,	0,	0, 0x40397001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3890 = VPHADDDQrr
  { 3891,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a05800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3891 = VPHADDDYrm
  { 3892,	3,	1,	351,	0,	0, 0x4a05800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3892 = VPHADDDYrr
  { 3893,	7,	1,	346,	0,	0|(1<<MCID::MayLoad), 0xa05800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3893 = VPHADDDrm
  { 3894,	3,	1,	347,	0,	0, 0xa05800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3894 = VPHADDDrr
  { 3895,	7,	1,	348,	0,	0|(1<<MCID::MayLoad), 0xa07800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3895 = VPHADDSWrm128
  { 3896,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a07800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3896 = VPHADDSWrm256
  { 3897,	3,	1,	349,	0,	0, 0xa07800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3897 = VPHADDSWrr128
  { 3898,	3,	1,	0,	0,	0, 0x4a07800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3898 = VPHADDSWrr256
  { 3899,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403a5001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3899 = VPHADDUBDrm
  { 3900,	2,	1,	0,	0,	0, 0x403a5001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3900 = VPHADDUBDrr
  { 3901,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403a7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3901 = VPHADDUBQrm
  { 3902,	2,	1,	0,	0,	0, 0x403a7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3902 = VPHADDUBQrr
  { 3903,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403a3001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3903 = VPHADDUBWrm
  { 3904,	2,	1,	0,	0,	0, 0x403a3001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3904 = VPHADDUBWrr
  { 3905,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403b7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3905 = VPHADDUDQrm
  { 3906,	2,	1,	0,	0,	0, 0x403b7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3906 = VPHADDUDQrr
  { 3907,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403ad001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3907 = VPHADDUWDrm
  { 3908,	2,	1,	0,	0,	0, 0x403ad001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3908 = VPHADDUWDrr
  { 3909,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403af001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3909 = VPHADDUWQrm
  { 3910,	2,	1,	0,	0,	0, 0x403af001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3910 = VPHADDUWQrr
  { 3911,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4038d001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3911 = VPHADDWDrm
  { 3912,	2,	1,	0,	0,	0, 0x4038d001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3912 = VPHADDWDrr
  { 3913,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4038f001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3913 = VPHADDWQrm
  { 3914,	2,	1,	0,	0,	0, 0x4038f001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3914 = VPHADDWQrr
  { 3915,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a03800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3915 = VPHADDWYrm
  { 3916,	3,	1,	351,	0,	0, 0x4a03800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3916 = VPHADDWYrr
  { 3917,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0xa03800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3917 = VPHADDWrm
  { 3918,	3,	1,	351,	0,	0, 0xa03800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3918 = VPHADDWrr
  { 3919,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x283800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #3919 = VPHMINPOSUWrm128
  { 3920,	2,	1,	0,	0,	0, 0x283800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #3920 = VPHMINPOSUWrr128
  { 3921,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403c3001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3921 = VPHSUBBWrm
  { 3922,	2,	1,	0,	0,	0, 0x403c3001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3922 = VPHSUBBWrr
  { 3923,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403c7001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3923 = VPHSUBDQrm
  { 3924,	2,	1,	0,	0,	0, 0x403c7001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3924 = VPHSUBDQrr
  { 3925,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a0d800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3925 = VPHSUBDYrm
  { 3926,	3,	1,	351,	0,	0, 0x4a0d800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3926 = VPHSUBDYrr
  { 3927,	7,	1,	346,	0,	0|(1<<MCID::MayLoad), 0xa0d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3927 = VPHSUBDrm
  { 3928,	3,	1,	347,	0,	0, 0xa0d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3928 = VPHSUBDrr
  { 3929,	7,	1,	348,	0,	0|(1<<MCID::MayLoad), 0xa0f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3929 = VPHSUBSWrm128
  { 3930,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a0f800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3930 = VPHSUBSWrm256
  { 3931,	3,	1,	349,	0,	0, 0xa0f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3931 = VPHSUBSWrr128
  { 3932,	3,	1,	0,	0,	0, 0x4a0f800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3932 = VPHSUBSWrr256
  { 3933,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x403c5001506ULL, NULL, NULL, OperandInfo49 },  // Inst #3933 = VPHSUBWDrm
  { 3934,	2,	1,	0,	0,	0, 0x403c5001505ULL, NULL, NULL, OperandInfo50 },  // Inst #3934 = VPHSUBWDrr
  { 3935,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a0b800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3935 = VPHSUBWYrm
  { 3936,	3,	1,	351,	0,	0, 0x4a0b800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3936 = VPHSUBWYrr
  { 3937,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0xa0b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3937 = VPHSUBWrm
  { 3938,	3,	1,	351,	0,	0, 0xa0b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3938 = VPHSUBWrr
  { 3939,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa41804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3939 = VPINSRBrm
  { 3940,	4,	1,	0,	0,	0, 0xa41804e45ULL, NULL, NULL, OperandInfo290 },  // Inst #3940 = VPINSRBrr
  { 3941,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa45804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3941 = VPINSRDrm
  { 3942,	4,	1,	0,	0,	0, 0xa45804e45ULL, NULL, NULL, OperandInfo290 },  // Inst #3942 = VPINSRDrr
  { 3943,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe45804e46ULL, NULL, NULL, OperandInfo137 },  // Inst #3943 = VPINSRQrm
  { 3944,	4,	1,	0,	0,	0, 0xe45804e45ULL, NULL, NULL, OperandInfo291 },  // Inst #3944 = VPINSRQrr
  { 3945,	8,	1,	352,	0,	0|(1<<MCID::MayLoad), 0xb89804146ULL, NULL, NULL, OperandInfo137 },  // Inst #3945 = VPINSRWrmi
  { 3946,	4,	1,	461,	0,	0|(1<<MCID::UnmodeledSideEffects), 0xb89804145ULL, NULL, NULL, OperandInfo291 },  // Inst #3946 = VPINSRWrr64i
  { 3947,	4,	1,	353,	0,	0, 0xb89804145ULL, NULL, NULL, OperandInfo290 },  // Inst #3947 = VPINSRWrri
  { 3948,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b3d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3948 = VPMACSDDrm
  { 3949,	4,	1,	0,	0,	0, 0x42b3d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3949 = VPMACSDDrr
  { 3950,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b3f005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3950 = VPMACSDQHrm
  { 3951,	4,	1,	0,	0,	0, 0x42b3f005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3951 = VPMACSDQHrr
  { 3952,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b2f005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3952 = VPMACSDQLrm
  { 3953,	4,	1,	0,	0,	0, 0x42b2f005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3953 = VPMACSDQLrr
  { 3954,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b1d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3954 = VPMACSSDDrm
  { 3955,	4,	1,	0,	0,	0, 0x42b1d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3955 = VPMACSSDDrr
  { 3956,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b1f005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3956 = VPMACSSDQHrm
  { 3957,	4,	1,	0,	0,	0, 0x42b1f005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3957 = VPMACSSDQHrr
  { 3958,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b0f005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3958 = VPMACSSDQLrm
  { 3959,	4,	1,	0,	0,	0, 0x42b0f005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3959 = VPMACSSDQLrr
  { 3960,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b0d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3960 = VPMACSSWDrm
  { 3961,	4,	1,	0,	0,	0, 0x42b0d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3961 = VPMACSSWDrr
  { 3962,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b0b005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3962 = VPMACSSWWrm
  { 3963,	4,	1,	0,	0,	0, 0x42b0b005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3963 = VPMACSSWWrr
  { 3964,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b2d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3964 = VPMACSWDrm
  { 3965,	4,	1,	0,	0,	0, 0x42b2d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3965 = VPMACSWDrr
  { 3966,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b2b005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3966 = VPMACSWWrm
  { 3967,	4,	1,	0,	0,	0, 0x42b2b005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3967 = VPMACSWWrr
  { 3968,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b4d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3968 = VPMADCSSWDrm
  { 3969,	4,	1,	0,	0,	0, 0x42b4d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3969 = VPMADCSSWDrr
  { 3970,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b6d005406ULL, NULL, NULL, OperandInfo236 },  // Inst #3970 = VPMADCSWDrm
  { 3971,	4,	1,	0,	0,	0, 0x42b6d005405ULL, NULL, NULL, OperandInfo237 },  // Inst #3971 = VPMADCSWDrr
  { 3972,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0xa09800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3972 = VPMADDUBSWrm128
  { 3973,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a09800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3973 = VPMADDUBSWrm256
  { 3974,	3,	1,	355,	0,	0, 0xa09800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3974 = VPMADDUBSWrr128
  { 3975,	3,	1,	0,	0,	0, 0x4a09800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3975 = VPMADDUBSWrr256
  { 3976,	7,	1,	356,	0,	0|(1<<MCID::MayLoad), 0x4beb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3976 = VPMADDWDYrm
  { 3977,	3,	1,	357,	0,	0|(1<<MCID::Commutable), 0x4beb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3977 = VPMADDWDYrr
  { 3978,	7,	1,	356,	0,	0|(1<<MCID::MayLoad), 0xbeb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3978 = VPMADDWDrm
  { 3979,	3,	1,	357,	0,	0|(1<<MCID::Commutable), 0xbeb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3979 = VPMADDWDrr
  { 3980,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4b1d800d44ULL, NULL, NULL, OperandInfo275 },  // Inst #3980 = VPMASKMOVDYmr
  { 3981,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4b19800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3981 = VPMASKMOVDYrm
  { 3982,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xb1d800d44ULL, NULL, NULL, OperandInfo276 },  // Inst #3982 = VPMASKMOVDmr
  { 3983,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xb19800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3983 = VPMASKMOVDrm
  { 3984,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x4f1d800d44ULL, NULL, NULL, OperandInfo275 },  // Inst #3984 = VPMASKMOVQYmr
  { 3985,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4f19800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3985 = VPMASKMOVQYrm
  { 3986,	7,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0xf1d800d44ULL, NULL, NULL, OperandInfo276 },  // Inst #3986 = VPMASKMOVQmr
  { 3987,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xf19800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3987 = VPMASKMOVQrm
  { 3988,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a79800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3988 = VPMAXSBYrm
  { 3989,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a79800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3989 = VPMAXSBYrr
  { 3990,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa79800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3990 = VPMAXSBrm
  { 3991,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa79800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3991 = VPMAXSBrr
  { 3992,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7b800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #3992 = VPMAXSDYrm
  { 3993,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7b800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #3993 = VPMAXSDYrr
  { 3994,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #3994 = VPMAXSDrm
  { 3995,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #3995 = VPMAXSDrr
  { 3996,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bdd800146ULL, NULL, NULL, OperandInfo226 },  // Inst #3996 = VPMAXSWYrm
  { 3997,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bdd800145ULL, NULL, NULL, OperandInfo227 },  // Inst #3997 = VPMAXSWYrr
  { 3998,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbdd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #3998 = VPMAXSWrm
  { 3999,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbdd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #3999 = VPMAXSWrr
  { 4000,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bbd800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4000 = VPMAXUBYrm
  { 4001,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bbd800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4001 = VPMAXUBYrr
  { 4002,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbbd800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4002 = VPMAXUBrm
  { 4003,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbbd800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4003 = VPMAXUBrr
  { 4004,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7f800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4004 = VPMAXUDYrm
  { 4005,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7f800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4005 = VPMAXUDYrr
  { 4006,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4006 = VPMAXUDrm
  { 4007,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4007 = VPMAXUDrr
  { 4008,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a7d800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4008 = VPMAXUWYrm
  { 4009,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a7d800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4009 = VPMAXUWYrr
  { 4010,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa7d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4010 = VPMAXUWrm
  { 4011,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa7d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4011 = VPMAXUWrr
  { 4012,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a71800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4012 = VPMINSBYrm
  { 4013,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a71800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4013 = VPMINSBYrr
  { 4014,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa71800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4014 = VPMINSBrm
  { 4015,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa71800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4015 = VPMINSBrr
  { 4016,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a73800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4016 = VPMINSDYrm
  { 4017,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a73800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4017 = VPMINSDYrr
  { 4018,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa73800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4018 = VPMINSDrm
  { 4019,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa73800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4019 = VPMINSDrr
  { 4020,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bd5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4020 = VPMINSWYrm
  { 4021,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bd5800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4021 = VPMINSWYrr
  { 4022,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbd5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4022 = VPMINSWrm
  { 4023,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbd5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4023 = VPMINSWrr
  { 4024,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bb5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4024 = VPMINUBYrm
  { 4025,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bb5800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4025 = VPMINUBYrr
  { 4026,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbb5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4026 = VPMINUBrm
  { 4027,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbb5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4027 = VPMINUBrr
  { 4028,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a77800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4028 = VPMINUDYrm
  { 4029,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a77800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4029 = VPMINUDYrr
  { 4030,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa77800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4030 = VPMINUDrm
  { 4031,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa77800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4031 = VPMINUDrr
  { 4032,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a75800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4032 = VPMINUWYrm
  { 4033,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a75800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4033 = VPMINUWYrr
  { 4034,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa75800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4034 = VPMINUWrm
  { 4035,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa75800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4035 = VPMINUWrr
  { 4036,	2,	1,	22,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x43af800145ULL, NULL, NULL, OperandInfo278 },  // Inst #4036 = VPMOVMSKBYr64r
  { 4037,	2,	1,	22,	0,	0, 0x43af800145ULL, NULL, NULL, OperandInfo279 },  // Inst #4037 = VPMOVMSKBYrr
  { 4038,	2,	1,	298,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x3af800145ULL, NULL, NULL, OperandInfo96 },  // Inst #4038 = VPMOVMSKBr64r
  { 4039,	2,	1,	298,	0,	0, 0x3af800145ULL, NULL, NULL, OperandInfo97 },  // Inst #4039 = VPMOVMSKBrr
  { 4040,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4243800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4040 = VPMOVSXBDYrm
  { 4041,	2,	1,	0,	0,	0, 0x4243800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4041 = VPMOVSXBDYrr
  { 4042,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x243800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4042 = VPMOVSXBDrm
  { 4043,	2,	1,	0,	0,	0, 0x243800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4043 = VPMOVSXBDrr
  { 4044,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4245800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4044 = VPMOVSXBQYrm
  { 4045,	2,	1,	0,	0,	0, 0x4245800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4045 = VPMOVSXBQYrr
  { 4046,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x245800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4046 = VPMOVSXBQrm
  { 4047,	2,	1,	0,	0,	0, 0x245800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4047 = VPMOVSXBQrr
  { 4048,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4241800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4048 = VPMOVSXBWYrm
  { 4049,	2,	1,	0,	0,	0, 0x4241800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4049 = VPMOVSXBWYrr
  { 4050,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x241800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4050 = VPMOVSXBWrm
  { 4051,	2,	1,	0,	0,	0, 0x241800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4051 = VPMOVSXBWrr
  { 4052,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x424b800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4052 = VPMOVSXDQYrm
  { 4053,	2,	1,	0,	0,	0, 0x424b800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4053 = VPMOVSXDQYrr
  { 4054,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x24b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4054 = VPMOVSXDQrm
  { 4055,	2,	1,	0,	0,	0, 0x24b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4055 = VPMOVSXDQrr
  { 4056,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4247800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4056 = VPMOVSXWDYrm
  { 4057,	2,	1,	0,	0,	0, 0x4247800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4057 = VPMOVSXWDYrr
  { 4058,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x247800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4058 = VPMOVSXWDrm
  { 4059,	2,	1,	0,	0,	0, 0x247800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4059 = VPMOVSXWDrr
  { 4060,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4249800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4060 = VPMOVSXWQYrm
  { 4061,	2,	1,	0,	0,	0, 0x4249800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4061 = VPMOVSXWQYrr
  { 4062,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x249800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4062 = VPMOVSXWQrm
  { 4063,	2,	1,	0,	0,	0, 0x249800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4063 = VPMOVSXWQrr
  { 4064,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4263800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4064 = VPMOVZXBDYrm
  { 4065,	2,	1,	0,	0,	0, 0x4263800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4065 = VPMOVZXBDYrr
  { 4066,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x263800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4066 = VPMOVZXBDrm
  { 4067,	2,	1,	0,	0,	0, 0x263800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4067 = VPMOVZXBDrr
  { 4068,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4265800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4068 = VPMOVZXBQYrm
  { 4069,	2,	1,	0,	0,	0, 0x4265800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4069 = VPMOVZXBQYrr
  { 4070,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x265800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4070 = VPMOVZXBQrm
  { 4071,	2,	1,	0,	0,	0, 0x265800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4071 = VPMOVZXBQrr
  { 4072,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4261800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4072 = VPMOVZXBWYrm
  { 4073,	2,	1,	0,	0,	0, 0x4261800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4073 = VPMOVZXBWYrr
  { 4074,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x261800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4074 = VPMOVZXBWrm
  { 4075,	2,	1,	0,	0,	0, 0x261800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4075 = VPMOVZXBWrr
  { 4076,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x426b800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4076 = VPMOVZXDQYrm
  { 4077,	2,	1,	0,	0,	0, 0x426b800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4077 = VPMOVZXDQYrr
  { 4078,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x26b800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4078 = VPMOVZXDQrm
  { 4079,	2,	1,	0,	0,	0, 0x26b800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4079 = VPMOVZXDQrr
  { 4080,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4267800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4080 = VPMOVZXWDYrm
  { 4081,	2,	1,	0,	0,	0, 0x4267800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4081 = VPMOVZXWDYrr
  { 4082,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x267800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4082 = VPMOVZXWDrm
  { 4083,	2,	1,	0,	0,	0, 0x267800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4083 = VPMOVZXWDrr
  { 4084,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4269800d46ULL, NULL, NULL, OperandInfo238 },  // Inst #4084 = VPMOVZXWQYrm
  { 4085,	2,	1,	0,	0,	0, 0x4269800d45ULL, NULL, NULL, OperandInfo239 },  // Inst #4085 = VPMOVZXWQYrr
  { 4086,	6,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x269800d46ULL, NULL, NULL, OperandInfo49 },  // Inst #4086 = VPMOVZXWQrm
  { 4087,	2,	1,	0,	0,	0, 0x269800d45ULL, NULL, NULL, OperandInfo50 },  // Inst #4087 = VPMOVZXWQrr
  { 4088,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a51800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4088 = VPMULDQYrm
  { 4089,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a51800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4089 = VPMULDQYrr
  { 4090,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa51800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4090 = VPMULDQrm
  { 4091,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa51800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4091 = VPMULDQrr
  { 4092,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0xa17800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4092 = VPMULHRSWrm128
  { 4093,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a17800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4093 = VPMULHRSWrm256
  { 4094,	3,	1,	355,	0,	0|(1<<MCID::Commutable), 0xa17800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4094 = VPMULHRSWrr128
  { 4095,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a17800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4095 = VPMULHRSWrr256
  { 4096,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x4bc9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4096 = VPMULHUWYrm
  { 4097,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x4bc9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4097 = VPMULHUWYrr
  { 4098,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0xbc9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4098 = VPMULHUWrm
  { 4099,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0xbc9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4099 = VPMULHUWrr
  { 4100,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x4bcb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4100 = VPMULHWYrm
  { 4101,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x4bcb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4101 = VPMULHWYrr
  { 4102,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0xbcb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4102 = VPMULHWrm
  { 4103,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0xbcb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4103 = VPMULHWrr
  { 4104,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a81800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4104 = VPMULLDYrm
  { 4105,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0x4a81800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4105 = VPMULLDYrr
  { 4106,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa81800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4106 = VPMULLDrm
  { 4107,	3,	1,	0,	0,	0|(1<<MCID::Commutable), 0xa81800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4107 = VPMULLDrr
  { 4108,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0x4bab800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4108 = VPMULLWYrm
  { 4109,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0x4bab800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4109 = VPMULLWYrr
  { 4110,	7,	1,	358,	0,	0|(1<<MCID::MayLoad), 0xbab800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4110 = VPMULLWrm
  { 4111,	3,	1,	359,	0,	0|(1<<MCID::Commutable), 0xbab800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4111 = VPMULLWrr
  { 4112,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0x4be9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4112 = VPMULUDQYrm
  { 4113,	3,	1,	355,	0,	0|(1<<MCID::Commutable), 0x4be9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4113 = VPMULUDQYrr
  { 4114,	7,	1,	354,	0,	0|(1<<MCID::MayLoad), 0xbe9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4114 = VPMULUDQrm
  { 4115,	3,	1,	355,	0,	0|(1<<MCID::Commutable), 0xbe9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4115 = VPMULUDQrr
  { 4116,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bd7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4116 = VPORYrm
  { 4117,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bd7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4117 = VPORYrr
  { 4118,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbd7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4118 = VPORrm
  { 4119,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbd7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4119 = VPORrr
  { 4120,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x42b47005406ULL, NULL, NULL, OperandInfo236 },  // Inst #4120 = VPPERMmr
  { 4121,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x62f47005406ULL, NULL, NULL, OperandInfo254 },  // Inst #4121 = VPPERMrm
  { 4122,	4,	1,	0,	0,	0, 0x42b47005405ULL, NULL, NULL, OperandInfo237 },  // Inst #4122 = VPPERMrr
  { 4123,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40381005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4123 = VPROTBmi
  { 4124,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41321001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4124 = VPROTBmr
  { 4125,	3,	1,	0,	0,	0, 0x40381005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4125 = VPROTBri
  { 4126,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f21001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4126 = VPROTBrm
  { 4127,	3,	1,	0,	0,	0, 0x41321001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4127 = VPROTBrr
  { 4128,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40385005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4128 = VPROTDmi
  { 4129,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41325001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4129 = VPROTDmr
  { 4130,	3,	1,	0,	0,	0, 0x40385005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4130 = VPROTDri
  { 4131,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f25001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4131 = VPROTDrm
  { 4132,	3,	1,	0,	0,	0, 0x41325001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4132 = VPROTDrr
  { 4133,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40387005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4133 = VPROTQmi
  { 4134,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41327001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4134 = VPROTQmr
  { 4135,	3,	1,	0,	0,	0, 0x40387005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4135 = VPROTQri
  { 4136,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f27001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4136 = VPROTQrm
  { 4137,	3,	1,	0,	0,	0, 0x41327001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4137 = VPROTQrr
  { 4138,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40383005406ULL, NULL, NULL, OperandInfo51 },  // Inst #4138 = VPROTWmi
  { 4139,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41323001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4139 = VPROTWmr
  { 4140,	3,	1,	0,	0,	0, 0x40383005405ULL, NULL, NULL, OperandInfo52 },  // Inst #4140 = VPROTWri
  { 4141,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f23001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4141 = VPROTWrm
  { 4142,	3,	1,	0,	0,	0, 0x41323001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4142 = VPROTWrr
  { 4143,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bed800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4143 = VPSADBWYrm
  { 4144,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0x4bed800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4144 = VPSADBWYrr
  { 4145,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbed800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4145 = VPSADBWrm
  { 4146,	3,	1,	339,	0,	0|(1<<MCID::Commutable), 0xbed800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4146 = VPSADBWrr
  { 4147,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41331001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4147 = VPSHABmr
  { 4148,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f31001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4148 = VPSHABrm
  { 4149,	3,	1,	0,	0,	0, 0x41331001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4149 = VPSHABrr
  { 4150,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41335001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4150 = VPSHADmr
  { 4151,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f35001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4151 = VPSHADrm
  { 4152,	3,	1,	0,	0,	0, 0x41335001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4152 = VPSHADrr
  { 4153,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41337001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4153 = VPSHAQmr
  { 4154,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f37001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4154 = VPSHAQrm
  { 4155,	3,	1,	0,	0,	0, 0x41337001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4155 = VPSHAQrr
  { 4156,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41333001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4156 = VPSHAWmr
  { 4157,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f33001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4157 = VPSHAWrm
  { 4158,	3,	1,	0,	0,	0, 0x41333001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4158 = VPSHAWrr
  { 4159,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x41329001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4159 = VPSHLBmr
  { 4160,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f29001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4160 = VPSHLBrm
  { 4161,	3,	1,	0,	0,	0, 0x41329001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4161 = VPSHLBrr
  { 4162,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4132d001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4162 = VPSHLDmr
  { 4163,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f2d001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4163 = VPSHLDrm
  { 4164,	3,	1,	0,	0,	0, 0x4132d001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4164 = VPSHLDrr
  { 4165,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4132f001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4165 = VPSHLQmr
  { 4166,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f2f001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4166 = VPSHLQrm
  { 4167,	3,	1,	0,	0,	0, 0x4132f001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4167 = VPSHLQrr
  { 4168,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4132b001506ULL, NULL, NULL, OperandInfo292 },  // Inst #4168 = VPSHLWmr
  { 4169,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x40f2b001506ULL, NULL, NULL, OperandInfo138 },  // Inst #4169 = VPSHLWrm
  { 4170,	3,	1,	0,	0,	0, 0x4132b001505ULL, NULL, NULL, OperandInfo139 },  // Inst #4170 = VPSHLWrr
  { 4171,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a01800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4171 = VPSHUFBYrm
  { 4172,	3,	1,	351,	0,	0, 0x4a01800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4172 = VPSHUFBYrr
  { 4173,	7,	1,	368,	0,	0|(1<<MCID::MayLoad), 0xa01800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4173 = VPSHUFBrm
  { 4174,	3,	1,	369,	0,	0, 0xa01800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4174 = VPSHUFBrr
  { 4175,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x42e1804146ULL, NULL, NULL, OperandInfo288 },  // Inst #4175 = VPSHUFDYmi
  { 4176,	3,	1,	371,	0,	0, 0x42e1804145ULL, NULL, NULL, OperandInfo289 },  // Inst #4176 = VPSHUFDYri
  { 4177,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x2e1804146ULL, NULL, NULL, OperandInfo51 },  // Inst #4177 = VPSHUFDmi
  { 4178,	3,	1,	371,	0,	0, 0x2e1804145ULL, NULL, NULL, OperandInfo52 },  // Inst #4178 = VPSHUFDri
  { 4179,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x42e1804c06ULL, NULL, NULL, OperandInfo288 },  // Inst #4179 = VPSHUFHWYmi
  { 4180,	3,	1,	371,	0,	0, 0x42e1804c05ULL, NULL, NULL, OperandInfo289 },  // Inst #4180 = VPSHUFHWYri
  { 4181,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x2e1804c06ULL, NULL, NULL, OperandInfo51 },  // Inst #4181 = VPSHUFHWmi
  { 4182,	3,	1,	371,	0,	0, 0x2e1804c05ULL, NULL, NULL, OperandInfo52 },  // Inst #4182 = VPSHUFHWri
  { 4183,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x42e1804b06ULL, NULL, NULL, OperandInfo288 },  // Inst #4183 = VPSHUFLWYmi
  { 4184,	3,	1,	371,	0,	0, 0x42e1804b05ULL, NULL, NULL, OperandInfo289 },  // Inst #4184 = VPSHUFLWYri
  { 4185,	7,	1,	370,	0,	0|(1<<MCID::MayLoad), 0x2e1804b06ULL, NULL, NULL, OperandInfo51 },  // Inst #4185 = VPSHUFLWmi
  { 4186,	3,	1,	371,	0,	0, 0x2e1804b05ULL, NULL, NULL, OperandInfo52 },  // Inst #4186 = VPSHUFLWri
  { 4187,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a11800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4187 = VPSIGNBYrm
  { 4188,	3,	1,	351,	0,	0, 0x4a11800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4188 = VPSIGNBYrr
  { 4189,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0xa11800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4189 = VPSIGNBrm
  { 4190,	3,	1,	373,	0,	0, 0xa11800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4190 = VPSIGNBrr
  { 4191,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a15800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4191 = VPSIGNDYrm
  { 4192,	3,	1,	351,	0,	0, 0x4a15800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4192 = VPSIGNDYrr
  { 4193,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0xa15800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4193 = VPSIGNDrm
  { 4194,	3,	1,	373,	0,	0, 0xa15800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4194 = VPSIGNDrr
  { 4195,	7,	1,	350,	0,	0|(1<<MCID::MayLoad), 0x4a13800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4195 = VPSIGNWYrm
  { 4196,	3,	1,	351,	0,	0, 0x4a13800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4196 = VPSIGNWYrr
  { 4197,	7,	1,	372,	0,	0|(1<<MCID::MayLoad), 0xa13800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4197 = VPSIGNWrm
  { 4198,	3,	1,	373,	0,	0, 0xa13800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4198 = VPSIGNWrr
  { 4199,	3,	1,	374,	0,	0, 0x4ae7804157ULL, NULL, NULL, OperandInfo289 },  // Inst #4199 = VPSLLDQYri
  { 4200,	3,	1,	374,	0,	0, 0xae7804157ULL, NULL, NULL, OperandInfo52 },  // Inst #4200 = VPSLLDQri
  { 4201,	3,	1,	375,	0,	0, 0x4ae5804156ULL, NULL, NULL, OperandInfo289 },  // Inst #4201 = VPSLLDYri
  { 4202,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4be5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4202 = VPSLLDYrm
  { 4203,	3,	1,	377,	0,	0, 0x4be5800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4203 = VPSLLDYrr
  { 4204,	3,	1,	375,	0,	0, 0xae5804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4204 = VPSLLDri
  { 4205,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xbe5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4205 = VPSLLDrm
  { 4206,	3,	1,	377,	0,	0, 0xbe5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4206 = VPSLLDrr
  { 4207,	3,	1,	375,	0,	0, 0x4ae7804156ULL, NULL, NULL, OperandInfo289 },  // Inst #4207 = VPSLLQYri
  { 4208,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4be7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4208 = VPSLLQYrm
  { 4209,	3,	1,	377,	0,	0, 0x4be7800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4209 = VPSLLQYrr
  { 4210,	3,	1,	375,	0,	0, 0xae7804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4210 = VPSLLQri
  { 4211,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xbe7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4211 = VPSLLQrm
  { 4212,	3,	1,	377,	0,	0, 0xbe7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4212 = VPSLLQrr
  { 4213,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8f800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4213 = VPSLLVDYrm
  { 4214,	3,	1,	0,	0,	0, 0x4a8f800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4214 = VPSLLVDYrr
  { 4215,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4215 = VPSLLVDrm
  { 4216,	3,	1,	0,	0,	0, 0xa8f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4216 = VPSLLVDrr
  { 4217,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4e8f800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4217 = VPSLLVQYrm
  { 4218,	3,	1,	0,	0,	0, 0x4e8f800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4218 = VPSLLVQYrr
  { 4219,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe8f800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4219 = VPSLLVQrm
  { 4220,	3,	1,	0,	0,	0, 0xe8f800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4220 = VPSLLVQrr
  { 4221,	3,	1,	375,	0,	0, 0x4ae3804156ULL, NULL, NULL, OperandInfo289 },  // Inst #4221 = VPSLLWYri
  { 4222,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4be3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4222 = VPSLLWYrm
  { 4223,	3,	1,	377,	0,	0, 0x4be3800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4223 = VPSLLWYrr
  { 4224,	3,	1,	375,	0,	0, 0xae3804156ULL, NULL, NULL, OperandInfo52 },  // Inst #4224 = VPSLLWri
  { 4225,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xbe3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4225 = VPSLLWrm
  { 4226,	3,	1,	377,	0,	0, 0xbe3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4226 = VPSLLWrr
  { 4227,	3,	1,	375,	0,	0, 0x4ae5804154ULL, NULL, NULL, OperandInfo289 },  // Inst #4227 = VPSRADYri
  { 4228,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4bc5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4228 = VPSRADYrm
  { 4229,	3,	1,	377,	0,	0, 0x4bc5800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4229 = VPSRADYrr
  { 4230,	3,	1,	375,	0,	0, 0xae5804154ULL, NULL, NULL, OperandInfo52 },  // Inst #4230 = VPSRADri
  { 4231,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xbc5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4231 = VPSRADrm
  { 4232,	3,	1,	377,	0,	0, 0xbc5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4232 = VPSRADrr
  { 4233,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8d800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4233 = VPSRAVDYrm
  { 4234,	3,	1,	0,	0,	0, 0x4a8d800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4234 = VPSRAVDYrr
  { 4235,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8d800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4235 = VPSRAVDrm
  { 4236,	3,	1,	0,	0,	0, 0xa8d800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4236 = VPSRAVDrr
  { 4237,	3,	1,	375,	0,	0, 0x4ae3804154ULL, NULL, NULL, OperandInfo289 },  // Inst #4237 = VPSRAWYri
  { 4238,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4bc3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4238 = VPSRAWYrm
  { 4239,	3,	1,	377,	0,	0, 0x4bc3800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4239 = VPSRAWYrr
  { 4240,	3,	1,	375,	0,	0, 0xae3804154ULL, NULL, NULL, OperandInfo52 },  // Inst #4240 = VPSRAWri
  { 4241,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xbc3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4241 = VPSRAWrm
  { 4242,	3,	1,	377,	0,	0, 0xbc3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4242 = VPSRAWrr
  { 4243,	3,	1,	374,	0,	0, 0x4ae7804153ULL, NULL, NULL, OperandInfo289 },  // Inst #4243 = VPSRLDQYri
  { 4244,	3,	1,	374,	0,	0, 0xae7804153ULL, NULL, NULL, OperandInfo52 },  // Inst #4244 = VPSRLDQri
  { 4245,	3,	1,	375,	0,	0, 0x4ae5804152ULL, NULL, NULL, OperandInfo289 },  // Inst #4245 = VPSRLDYri
  { 4246,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4ba5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4246 = VPSRLDYrm
  { 4247,	3,	1,	377,	0,	0, 0x4ba5800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4247 = VPSRLDYrr
  { 4248,	3,	1,	375,	0,	0, 0xae5804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4248 = VPSRLDri
  { 4249,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xba5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4249 = VPSRLDrm
  { 4250,	3,	1,	377,	0,	0, 0xba5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4250 = VPSRLDrr
  { 4251,	3,	1,	375,	0,	0, 0x4ae7804152ULL, NULL, NULL, OperandInfo289 },  // Inst #4251 = VPSRLQYri
  { 4252,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4ba7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4252 = VPSRLQYrm
  { 4253,	3,	1,	377,	0,	0, 0x4ba7800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4253 = VPSRLQYrr
  { 4254,	3,	1,	375,	0,	0, 0xae7804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4254 = VPSRLQri
  { 4255,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xba7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4255 = VPSRLQrm
  { 4256,	3,	1,	377,	0,	0, 0xba7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4256 = VPSRLQrr
  { 4257,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4a8b800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4257 = VPSRLVDYrm
  { 4258,	3,	1,	0,	0,	0, 0x4a8b800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4258 = VPSRLVDYrr
  { 4259,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xa8b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4259 = VPSRLVDrm
  { 4260,	3,	1,	0,	0,	0, 0xa8b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4260 = VPSRLVDrr
  { 4261,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4e8b800d46ULL, NULL, NULL, OperandInfo226 },  // Inst #4261 = VPSRLVQYrm
  { 4262,	3,	1,	0,	0,	0, 0x4e8b800d45ULL, NULL, NULL, OperandInfo227 },  // Inst #4262 = VPSRLVQYrr
  { 4263,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0xe8b800d46ULL, NULL, NULL, OperandInfo138 },  // Inst #4263 = VPSRLVQrm
  { 4264,	3,	1,	0,	0,	0, 0xe8b800d45ULL, NULL, NULL, OperandInfo139 },  // Inst #4264 = VPSRLVQrr
  { 4265,	3,	1,	375,	0,	0, 0x4ae3804152ULL, NULL, NULL, OperandInfo289 },  // Inst #4265 = VPSRLWYri
  { 4266,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0x4ba3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4266 = VPSRLWYrm
  { 4267,	3,	1,	377,	0,	0, 0x4ba3800145ULL, NULL, NULL, OperandInfo293 },  // Inst #4267 = VPSRLWYrr
  { 4268,	3,	1,	375,	0,	0, 0xae3804152ULL, NULL, NULL, OperandInfo52 },  // Inst #4268 = VPSRLWri
  { 4269,	7,	1,	376,	0,	0|(1<<MCID::MayLoad), 0xba3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4269 = VPSRLWrm
  { 4270,	3,	1,	377,	0,	0, 0xba3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4270 = VPSRLWrr
  { 4271,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bf1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4271 = VPSUBBYrm
  { 4272,	3,	1,	339,	0,	0, 0x4bf1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4272 = VPSUBBYrr
  { 4273,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbf1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4273 = VPSUBBrm
  { 4274,	3,	1,	339,	0,	0, 0xbf1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4274 = VPSUBBrr
  { 4275,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bf5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4275 = VPSUBDYrm
  { 4276,	3,	1,	339,	0,	0, 0x4bf5800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4276 = VPSUBDYrr
  { 4277,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbf5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4277 = VPSUBDrm
  { 4278,	3,	1,	339,	0,	0, 0xbf5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4278 = VPSUBDrr
  { 4279,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0x4bf7800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4279 = VPSUBQYrm
  { 4280,	3,	1,	341,	0,	0, 0x4bf7800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4280 = VPSUBQYrr
  { 4281,	7,	1,	340,	0,	0|(1<<MCID::MayLoad), 0xbf7800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4281 = VPSUBQrm
  { 4282,	3,	1,	341,	0,	0, 0xbf7800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4282 = VPSUBQrr
  { 4283,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bd1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4283 = VPSUBSBYrm
  { 4284,	3,	1,	339,	0,	0, 0x4bd1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4284 = VPSUBSBYrr
  { 4285,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbd1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4285 = VPSUBSBrm
  { 4286,	3,	1,	339,	0,	0, 0xbd1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4286 = VPSUBSBrr
  { 4287,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bd3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4287 = VPSUBSWYrm
  { 4288,	3,	1,	339,	0,	0, 0x4bd3800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4288 = VPSUBSWYrr
  { 4289,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbd3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4289 = VPSUBSWrm
  { 4290,	3,	1,	339,	0,	0, 0xbd3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4290 = VPSUBSWrr
  { 4291,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bb1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4291 = VPSUBUSBYrm
  { 4292,	3,	1,	339,	0,	0, 0x4bb1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4292 = VPSUBUSBYrr
  { 4293,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbb1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4293 = VPSUBUSBrm
  { 4294,	3,	1,	339,	0,	0, 0xbb1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4294 = VPSUBUSBrr
  { 4295,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bb3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4295 = VPSUBUSWYrm
  { 4296,	3,	1,	339,	0,	0, 0x4bb3800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4296 = VPSUBUSWYrr
  { 4297,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbb3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4297 = VPSUBUSWrm
  { 4298,	3,	1,	339,	0,	0, 0xbb3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4298 = VPSUBUSWrr
  { 4299,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0x4bf3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4299 = VPSUBWYrm
  { 4300,	3,	1,	339,	0,	0, 0x4bf3800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4300 = VPSUBWYrr
  { 4301,	7,	1,	338,	0,	0|(1<<MCID::MayLoad), 0xbf3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4301 = VPSUBWrm
  { 4302,	3,	1,	339,	0,	0, 0xbf3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4302 = VPSUBWrr
  { 4303,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x422f800d46ULL, NULL, ImplicitList2, OperandInfo238 },  // Inst #4303 = VPTESTYrm
  { 4304,	2,	0,	0,	0,	0, 0x422f800d45ULL, NULL, ImplicitList2, OperandInfo242 },  // Inst #4304 = VPTESTYrr
  { 4305,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x22f800d46ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #4305 = VPTESTrm
  { 4306,	2,	0,	0,	0,	0, 0x22f800d45ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #4306 = VPTESTrr
  { 4307,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ad1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4307 = VPUNPCKHBWYrm
  { 4308,	3,	1,	461,	0,	0, 0x4ad1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4308 = VPUNPCKHBWYrr
  { 4309,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xad1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4309 = VPUNPCKHBWrm
  { 4310,	3,	1,	379,	0,	0, 0xad1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4310 = VPUNPCKHBWrr
  { 4311,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ad5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4311 = VPUNPCKHDQYrm
  { 4312,	3,	1,	461,	0,	0, 0x4ad5800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4312 = VPUNPCKHDQYrr
  { 4313,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xad5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4313 = VPUNPCKHDQrm
  { 4314,	3,	1,	379,	0,	0, 0xad5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4314 = VPUNPCKHDQrr
  { 4315,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4adb800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4315 = VPUNPCKHQDQYrm
  { 4316,	3,	1,	461,	0,	0, 0x4adb800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4316 = VPUNPCKHQDQYrr
  { 4317,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xadb800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4317 = VPUNPCKHQDQrm
  { 4318,	3,	1,	379,	0,	0, 0xadb800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4318 = VPUNPCKHQDQrr
  { 4319,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ad3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4319 = VPUNPCKHWDYrm
  { 4320,	3,	1,	461,	0,	0, 0x4ad3800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4320 = VPUNPCKHWDYrr
  { 4321,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xad3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4321 = VPUNPCKHWDrm
  { 4322,	3,	1,	379,	0,	0, 0xad3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4322 = VPUNPCKHWDrr
  { 4323,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ac1800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4323 = VPUNPCKLBWYrm
  { 4324,	3,	1,	461,	0,	0, 0x4ac1800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4324 = VPUNPCKLBWYrr
  { 4325,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xac1800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4325 = VPUNPCKLBWrm
  { 4326,	3,	1,	379,	0,	0, 0xac1800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4326 = VPUNPCKLBWrr
  { 4327,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ac5800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4327 = VPUNPCKLDQYrm
  { 4328,	3,	1,	461,	0,	0, 0x4ac5800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4328 = VPUNPCKLDQYrr
  { 4329,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xac5800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4329 = VPUNPCKLDQrm
  { 4330,	3,	1,	379,	0,	0, 0xac5800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4330 = VPUNPCKLDQrr
  { 4331,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ad9800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4331 = VPUNPCKLQDQYrm
  { 4332,	3,	1,	461,	0,	0, 0x4ad9800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4332 = VPUNPCKLQDQYrr
  { 4333,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xad9800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4333 = VPUNPCKLQDQrm
  { 4334,	3,	1,	379,	0,	0, 0xad9800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4334 = VPUNPCKLQDQrr
  { 4335,	7,	1,	464,	0,	0|(1<<MCID::MayLoad), 0x4ac3800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4335 = VPUNPCKLWDYrm
  { 4336,	3,	1,	461,	0,	0, 0x4ac3800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4336 = VPUNPCKLWDYrr
  { 4337,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xac3800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4337 = VPUNPCKLWDrm
  { 4338,	3,	1,	379,	0,	0, 0xac3800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4338 = VPUNPCKLWDrr
  { 4339,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0x4bdf800146ULL, NULL, NULL, OperandInfo226 },  // Inst #4339 = VPXORYrm
  { 4340,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0x4bdf800145ULL, NULL, NULL, OperandInfo227 },  // Inst #4340 = VPXORYrr
  { 4341,	7,	1,	137,	0,	0|(1<<MCID::MayLoad), 0xbdf800146ULL, NULL, NULL, OperandInfo138 },  // Inst #4341 = VPXORrm
  { 4342,	3,	1,	138,	0,	0|(1<<MCID::Commutable), 0xbdf800145ULL, NULL, NULL, OperandInfo139 },  // Inst #4342 = VPXORrr
  { 4343,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0x42a6800106ULL, NULL, NULL, OperandInfo238 },  // Inst #4343 = VRCPPSYm
  { 4344,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0x42a6800106ULL, NULL, NULL, OperandInfo238 },  // Inst #4344 = VRCPPSYm_Int
  { 4345,	2,	1,	390,	0,	0, 0x42a6800105ULL, NULL, NULL, OperandInfo242 },  // Inst #4345 = VRCPPSYr
  { 4346,	2,	1,	390,	0,	0, 0x42a6800105ULL, NULL, NULL, OperandInfo242 },  // Inst #4346 = VRCPPSYr_Int
  { 4347,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4347 = VRCPPSm
  { 4348,	6,	1,	389,	0,	0|(1<<MCID::MayLoad), 0x2a6800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4348 = VRCPPSm_Int
  { 4349,	2,	1,	390,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4349 = VRCPPSr
  { 4350,	2,	1,	390,	0,	0, 0x2a6800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4350 = VRCPPSr_Int
  { 4351,	7,	1,	465,	0,	0|(1<<MCID::MayLoad), 0x8aa6000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #4351 = VRCPSSm
  { 4352,	7,	1,	465,	0,	0|(1<<MCID::MayLoad), 0x8aa6000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4352 = VRCPSSm_Int
  { 4353,	3,	1,	393,	0,	0, 0x8aa6000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #4353 = VRCPSSr
  { 4354,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x213004e46ULL, NULL, NULL, OperandInfo51 },  // Inst #4354 = VROUNDPDm
  { 4355,	3,	1,	0,	0,	0, 0x213004e45ULL, NULL, NULL, OperandInfo52 },  // Inst #4355 = VROUNDPDr
  { 4356,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x210804e46ULL, NULL, NULL, OperandInfo51 },  // Inst #4356 = VROUNDPSm
  { 4357,	3,	1,	0,	0,	0, 0x210804e45ULL, NULL, NULL, OperandInfo52 },  // Inst #4357 = VROUNDPSr
  { 4358,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8a16004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4358 = VROUNDSDm
  { 4359,	4,	1,	0,	0,	0, 0x8a16004e45ULL, NULL, NULL, OperandInfo78 },  // Inst #4359 = VROUNDSDr
  { 4360,	4,	1,	0,	0,	0, 0x8a16004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #4360 = VROUNDSDr_Int
  { 4361,	8,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x8a14004e46ULL, NULL, NULL, OperandInfo137 },  // Inst #4361 = VROUNDSSm
  { 4362,	4,	1,	0,	0,	0, 0x8a14004e45ULL, NULL, NULL, OperandInfo77 },  // Inst #4362 = VROUNDSSr
  { 4363,	4,	1,	0,	0,	0, 0x8a14004e45ULL, NULL, NULL, OperandInfo85 },  // Inst #4363 = VROUNDSSr_Int
  { 4364,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4213004e46ULL, NULL, NULL, OperandInfo288 },  // Inst #4364 = VROUNDYPDm
  { 4365,	3,	1,	0,	0,	0, 0x4213004e45ULL, NULL, NULL, OperandInfo289 },  // Inst #4365 = VROUNDYPDr
  { 4366,	7,	1,	0,	0,	0|(1<<MCID::MayLoad), 0x4210804e46ULL, NULL, NULL, OperandInfo288 },  // Inst #4366 = VROUNDYPSm
  { 4367,	3,	1,	0,	0,	0, 0x4210804e45ULL, NULL, NULL, OperandInfo289 },  // Inst #4367 = VROUNDYPSr
  { 4368,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x42a4800106ULL, NULL, NULL, OperandInfo238 },  // Inst #4368 = VRSQRTPSYm
  { 4369,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x42a4800106ULL, NULL, NULL, OperandInfo238 },  // Inst #4369 = VRSQRTPSYm_Int
  { 4370,	2,	1,	405,	0,	0, 0x42a4800105ULL, NULL, NULL, OperandInfo242 },  // Inst #4370 = VRSQRTPSYr
  { 4371,	2,	1,	405,	0,	0, 0x42a4800105ULL, NULL, NULL, OperandInfo242 },  // Inst #4371 = VRSQRTPSYr_Int
  { 4372,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4372 = VRSQRTPSm
  { 4373,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x2a4800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4373 = VRSQRTPSm_Int
  { 4374,	2,	1,	405,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4374 = VRSQRTPSr
  { 4375,	2,	1,	405,	0,	0, 0x2a4800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4375 = VRSQRTPSr_Int
  { 4376,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa4000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #4376 = VRSQRTSSm
  { 4377,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa4000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4377 = VRSQRTSSm_Int
  { 4378,	3,	1,	408,	0,	0, 0x8aa4000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #4378 = VRSQRTSSr
  { 4379,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0x4b8d004146ULL, NULL, NULL, OperandInfo233 },  // Inst #4379 = VSHUFPDYrmi
  { 4380,	4,	1,	429,	0,	0, 0x4b8d004145ULL, NULL, NULL, OperandInfo86 },  // Inst #4380 = VSHUFPDYrri
  { 4381,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0xb8d004146ULL, NULL, NULL, OperandInfo137 },  // Inst #4381 = VSHUFPDrmi
  { 4382,	4,	1,	429,	0,	0, 0xb8d004145ULL, NULL, NULL, OperandInfo85 },  // Inst #4382 = VSHUFPDrri
  { 4383,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0x4b8c804106ULL, NULL, NULL, OperandInfo233 },  // Inst #4383 = VSHUFPSYrmi
  { 4384,	4,	1,	429,	0,	0, 0x4b8c804105ULL, NULL, NULL, OperandInfo86 },  // Inst #4384 = VSHUFPSYrri
  { 4385,	8,	1,	428,	0,	0|(1<<MCID::MayLoad), 0xb8c804106ULL, NULL, NULL, OperandInfo137 },  // Inst #4385 = VSHUFPSrmi
  { 4386,	4,	1,	429,	0,	0, 0xb8c804105ULL, NULL, NULL, OperandInfo85 },  // Inst #4386 = VSHUFPSrri
  { 4387,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x42a3000146ULL, NULL, NULL, OperandInfo238 },  // Inst #4387 = VSQRTPDYm
  { 4388,	2,	1,	405,	0,	0, 0x42a3000145ULL, NULL, NULL, OperandInfo242 },  // Inst #4388 = VSQRTPDYr
  { 4389,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x2a3000146ULL, NULL, NULL, OperandInfo49 },  // Inst #4389 = VSQRTPDm
  { 4390,	2,	1,	405,	0,	0, 0x2a3000145ULL, NULL, NULL, OperandInfo50 },  // Inst #4390 = VSQRTPDr
  { 4391,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x42a2800106ULL, NULL, NULL, OperandInfo238 },  // Inst #4391 = VSQRTPSYm
  { 4392,	2,	1,	405,	0,	0, 0x42a2800105ULL, NULL, NULL, OperandInfo242 },  // Inst #4392 = VSQRTPSYr
  { 4393,	6,	1,	404,	0,	0|(1<<MCID::MayLoad), 0x2a2800106ULL, NULL, NULL, OperandInfo49 },  // Inst #4393 = VSQRTPSm
  { 4394,	2,	1,	405,	0,	0, 0x2a2800105ULL, NULL, NULL, OperandInfo50 },  // Inst #4394 = VSQRTPSr
  { 4395,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa2000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #4395 = VSQRTSDm
  { 4396,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa2000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #4396 = VSQRTSDm_Int
  { 4397,	3,	1,	408,	0,	0, 0x8aa2000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #4397 = VSQRTSDr
  { 4398,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa2000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #4398 = VSQRTSSm
  { 4399,	7,	1,	466,	0,	0|(1<<MCID::MayLoad), 0x8aa2000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4399 = VSQRTSSm_Int
  { 4400,	3,	1,	408,	0,	0, 0x8aa2000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #4400 = VSQRTSSr
  { 4401,	5,	0,	436,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x35c80011bULL, NULL, NULL, OperandInfo40 },  // Inst #4401 = VSTMXCSR
  { 4402,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0x4ab9000146ULL, NULL, NULL, OperandInfo226 },  // Inst #4402 = VSUBPDYrm
  { 4403,	3,	1,	11,	0,	0, 0x4ab9000145ULL, NULL, NULL, OperandInfo227 },  // Inst #4403 = VSUBPDYrr
  { 4404,	7,	1,	10,	0,	0|(1<<MCID::MayLoad), 0xab9000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4404 = VSUBPDrm
  { 4405,	3,	1,	11,	0,	0, 0xab9000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4405 = VSUBPDrr
  { 4406,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0x4ab8800106ULL, NULL, NULL, OperandInfo226 },  // Inst #4406 = VSUBPSYrm
  { 4407,	3,	1,	13,	0,	0, 0x4ab8800105ULL, NULL, NULL, OperandInfo227 },  // Inst #4407 = VSUBPSYrr
  { 4408,	7,	1,	12,	0,	0|(1<<MCID::MayLoad), 0xab8800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4408 = VSUBPSrm
  { 4409,	3,	1,	13,	0,	0, 0xab8800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4409 = VSUBPSrr
  { 4410,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo228 },  // Inst #4410 = VSUBSDrm
  { 4411,	7,	1,	14,	0,	0|(1<<MCID::MayLoad), 0x8ab8000b06ULL, NULL, NULL, OperandInfo138 },  // Inst #4411 = VSUBSDrm_Int
  { 4412,	3,	1,	15,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo229 },  // Inst #4412 = VSUBSDrr
  { 4413,	3,	1,	15,	0,	0, 0x8ab8000b05ULL, NULL, NULL, OperandInfo139 },  // Inst #4413 = VSUBSDrr_Int
  { 4414,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo230 },  // Inst #4414 = VSUBSSrm
  { 4415,	7,	1,	16,	0,	0|(1<<MCID::MayLoad), 0x8ab8000c06ULL, NULL, NULL, OperandInfo138 },  // Inst #4415 = VSUBSSrm_Int
  { 4416,	3,	1,	17,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo231 },  // Inst #4416 = VSUBSSrr
  { 4417,	3,	1,	17,	0,	0, 0x8ab8000c05ULL, NULL, NULL, OperandInfo139 },  // Inst #4417 = VSUBSSrr_Int
  { 4418,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x421f000d46ULL, NULL, ImplicitList2, OperandInfo238 },  // Inst #4418 = VTESTPDYrm
  { 4419,	2,	0,	0,	0,	0, 0x421f000d45ULL, NULL, ImplicitList2, OperandInfo242 },  // Inst #4419 = VTESTPDYrr
  { 4420,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x21f000d46ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #4420 = VTESTPDrm
  { 4421,	2,	0,	0,	0,	0, 0x21f000d45ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #4421 = VTESTPDrr
  { 4422,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x421c800d46ULL, NULL, ImplicitList2, OperandInfo238 },  // Inst #4422 = VTESTPSYrm
  { 4423,	2,	0,	0,	0,	0, 0x421c800d45ULL, NULL, ImplicitList2, OperandInfo242 },  // Inst #4423 = VTESTPSYrr
  { 4424,	6,	0,	0,	0,	0|(1<<MCID::MayLoad), 0x21c800d46ULL, NULL, ImplicitList2, OperandInfo49 },  // Inst #4424 = VTESTPSrm
  { 4425,	2,	0,	0,	0,	0, 0x21c800d45ULL, NULL, ImplicitList2, OperandInfo50 },  // Inst #4425 = VTESTPSrr
  { 4426,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x825d000146ULL, NULL, ImplicitList2, OperandInfo100 },  // Inst #4426 = VUCOMISDrm
  { 4427,	2,	0,	63,	0,	0, 0x825d000145ULL, NULL, ImplicitList2, OperandInfo123 },  // Inst #4427 = VUCOMISDrr
  { 4428,	6,	0,	62,	0,	0|(1<<MCID::MayLoad), 0x825c800106ULL, NULL, ImplicitList2, OperandInfo98 },  // Inst #4428 = VUCOMISSrm
  { 4429,	2,	0,	63,	0,	0, 0x825c800105ULL, NULL, ImplicitList2, OperandInfo124 },  // Inst #4429 = VUCOMISSrr
  { 4430,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x4a2b000146ULL, NULL, NULL, OperandInfo226 },  // Inst #4430 = VUNPCKHPDYrm
  { 4431,	3,	1,	379,	0,	0, 0x4a2b000145ULL, NULL, NULL, OperandInfo227 },  // Inst #4431 = VUNPCKHPDYrr
  { 4432,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xa2b000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4432 = VUNPCKHPDrm
  { 4433,	3,	1,	379,	0,	0, 0xa2b000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4433 = VUNPCKHPDrr
  { 4434,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x4a2a800106ULL, NULL, NULL, OperandInfo226 },  // Inst #4434 = VUNPCKHPSYrm
  { 4435,	3,	1,	379,	0,	0, 0x4a2a800105ULL, NULL, NULL, OperandInfo227 },  // Inst #4435 = VUNPCKHPSYrr
  { 4436,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xa2a800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4436 = VUNPCKHPSrm
  { 4437,	3,	1,	379,	0,	0, 0xa2a800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4437 = VUNPCKHPSrr
  { 4438,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x4a29000146ULL, NULL, NULL, OperandInfo226 },  // Inst #4438 = VUNPCKLPDYrm
  { 4439,	3,	1,	379,	0,	0, 0x4a29000145ULL, NULL, NULL, OperandInfo227 },  // Inst #4439 = VUNPCKLPDYrr
  { 4440,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xa29000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4440 = VUNPCKLPDrm
  { 4441,	3,	1,	379,	0,	0, 0xa29000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4441 = VUNPCKLPDrr
  { 4442,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0x4a28800106ULL, NULL, NULL, OperandInfo226 },  // Inst #4442 = VUNPCKLPSYrm
  { 4443,	3,	1,	379,	0,	0, 0x4a28800105ULL, NULL, NULL, OperandInfo227 },  // Inst #4443 = VUNPCKLPSYrr
  { 4444,	7,	1,	378,	0,	0|(1<<MCID::MayLoad), 0xa28800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4444 = VUNPCKLPSrm
  { 4445,	3,	1,	379,	0,	0, 0xa28800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4445 = VUNPCKLPSrr
  { 4446,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aaf000146ULL, NULL, NULL, OperandInfo226 },  // Inst #4446 = VXORPDYrm
  { 4447,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aaf000145ULL, NULL, NULL, OperandInfo227 },  // Inst #4447 = VXORPDYrr
  { 4448,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaaf000146ULL, NULL, NULL, OperandInfo138 },  // Inst #4448 = VXORPDrm
  { 4449,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaaf000145ULL, NULL, NULL, OperandInfo139 },  // Inst #4449 = VXORPDrr
  { 4450,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0x4aae800106ULL, NULL, NULL, OperandInfo226 },  // Inst #4450 = VXORPSYrm
  { 4451,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0x4aae800105ULL, NULL, NULL, OperandInfo227 },  // Inst #4451 = VXORPSYrr
  { 4452,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaae800106ULL, NULL, NULL, OperandInfo138 },  // Inst #4452 = VXORPSrm
  { 4453,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaae800105ULL, NULL, NULL, OperandInfo139 },  // Inst #4453 = VXORPSrr
  { 4454,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x42ee000101ULL, NULL, ImplicitList80, 0 },  // Inst #4454 = VZEROALL
  { 4455,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2ee000101ULL, NULL, ImplicitList80, 0 },  // Inst #4455 = VZEROUPPER
  { 4456,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo294 },  // Inst #4456 = V_SET0
  { 4457,	1,	1,	25,	0,	0|(1<<MCID::Pseudo)|(1<<MCID::FoldableAsLoad)|(1<<MCID::Rematerializable)|(1<<MCID::CheapAsAMove), 0x0ULL, NULL, NULL, OperandInfo294 },  // Inst #4457 = V_SETALLONES
  { 4458,	1,	0,	41,	0,	0|(1<<MCID::Call)|(1<<MCID::UnmodeledSideEffects), 0x1d0018001ULL, ImplicitList9, ImplicitList81, OperandInfo72 },  // Inst #4458 = W64ALLOCA
  { 4459,	0,	0,	467,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x136000001ULL, NULL, NULL, 0 },  // Inst #4459 = WAIT
  { 4460,	0,	0,	175,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x12000101ULL, NULL, NULL, 0 },  // Inst #4460 = WBINVD
  { 4461,	0,	0,	0,	0,	0|(1<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList7, ImplicitList71, 0 },  // Inst #4461 = WIN_ALLOCA
  { 4462,	1,	0,	0,	0,	0, 0xe0000ULL, NULL, ImplicitList21, OperandInfo143 },  // Inst #4462 = WIN_FTOL_32
  { 4463,	1,	0,	0,	0,	0, 0xe0000ULL, NULL, ImplicitList21, OperandInfo144 },  // Inst #4463 = WIN_FTOL_64
  { 4464,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c12ULL, NULL, NULL, OperandInfo71 },  // Inst #4464 = WRFSBASE
  { 4465,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c12ULL, NULL, NULL, OperandInfo73 },  // Inst #4465 = WRFSBASE64
  { 4466,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c000c13ULL, NULL, NULL, OperandInfo71 },  // Inst #4466 = WRGSBASE
  { 4467,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x15c002c13ULL, NULL, NULL, OperandInfo73 },  // Inst #4467 = WRGSBASE64
  { 4468,	0,	0,	468,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x60000101ULL, NULL, NULL, 0 },  // Inst #4468 = WRMSR
  { 4469,	1,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x18c00402dULL, NULL, NULL, OperandInfo2 },  // Inst #4469 = XABORT
  { 4470,	6,	0,	469,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000144ULL, NULL, NULL, OperandInfo16 },  // Inst #4470 = XADD16rm
  { 4471,	2,	1,	470,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000143ULL, NULL, NULL, OperandInfo57 },  // Inst #4471 = XADD16rr
  { 4472,	6,	0,	469,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182000104ULL, NULL, NULL, OperandInfo20 },  // Inst #4472 = XADD32rm
  { 4473,	2,	1,	470,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182000103ULL, NULL, NULL, OperandInfo32 },  // Inst #4473 = XADD32rr
  { 4474,	6,	0,	469,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x182002104ULL, NULL, NULL, OperandInfo24 },  // Inst #4474 = XADD64rm
  { 4475,	2,	1,	470,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x182002103ULL, NULL, NULL, OperandInfo33 },  // Inst #4475 = XADD64rr
  { 4476,	6,	0,	469,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x180000104ULL, NULL, NULL, OperandInfo28 },  // Inst #4476 = XADD8rm
  { 4477,	2,	1,	470,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180000103ULL, NULL, NULL, OperandInfo88 },  // Inst #4477 = XADD8rr
  { 4478,	1,	1,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UsesCustomInserter)|(1<<MCID::UnmodeledSideEffects), 0x0ULL, NULL, NULL, OperandInfo71 },  // Inst #4478 = XBEGIN
  { 4479,	1,	0,	0,	0,	0|(1<<MCID::Branch)|(1<<MCID::Terminator)|(1<<MCID::UnmodeledSideEffects), 0x18e01802dULL, NULL, ImplicitList4, OperandInfo72 },  // Inst #4479 = XBEGIN_4
  { 4480,	1,	0,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000042ULL, NULL, NULL, OperandInfo112 },  // Inst #4480 = XCHG16ar
  { 4481,	7,	1,	472,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000046ULL, NULL, NULL, OperandInfo18 },  // Inst #4481 = XCHG16rm
  { 4482,	3,	1,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000045ULL, NULL, NULL, OperandInfo19 },  // Inst #4482 = XCHG16rr
  { 4483,	1,	0,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo71 },  // Inst #4483 = XCHG32ar
  { 4484,	1,	0,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120000002ULL, NULL, NULL, OperandInfo295 },  // Inst #4484 = XCHG32ar64
  { 4485,	7,	1,	472,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e000006ULL, NULL, NULL, OperandInfo22 },  // Inst #4485 = XCHG32rm
  { 4486,	3,	1,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e000005ULL, NULL, NULL, OperandInfo23 },  // Inst #4486 = XCHG32rr
  { 4487,	1,	0,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x120002002ULL, NULL, NULL, OperandInfo73 },  // Inst #4487 = XCHG64ar
  { 4488,	7,	1,	472,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10e002006ULL, NULL, NULL, OperandInfo26 },  // Inst #4488 = XCHG64rm
  { 4489,	3,	1,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10e002005ULL, NULL, NULL, OperandInfo27 },  // Inst #4489 = XCHG64rr
  { 4490,	7,	1,	472,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10c000006ULL, NULL, NULL, OperandInfo30 },  // Inst #4490 = XCHG8rm
  { 4491,	3,	1,	471,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x10c000005ULL, NULL, NULL, OperandInfo31 },  // Inst #4491 = XCHG8rr
  { 4492,	1,	0,	473,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000402ULL, NULL, ImplicitList1, OperandInfo41 },  // Inst #4492 = XCH_F
  { 4493,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0001001ULL, ImplicitList82, ImplicitList83, 0 },  // Inst #4493 = XCRYPTCBC
  { 4494,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1c0001001ULL, ImplicitList82, ImplicitList83, 0 },  // Inst #4494 = XCRYPTCFB
  { 4495,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1b0001001ULL, ImplicitList82, ImplicitList83, 0 },  // Inst #4495 = XCRYPTCTR
  { 4496,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190001001ULL, ImplicitList82, ImplicitList83, 0 },  // Inst #4496 = XCRYPTECB
  { 4497,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1d0001001ULL, ImplicitList82, ImplicitList83, 0 },  // Inst #4497 = XCRYPTOFB
  { 4498,	0,	0,	0,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore)|(1<<MCID::UnmodeledSideEffects), 0x2000132ULL, NULL, NULL, 0 },  // Inst #4498 = XEND
  { 4499,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x200012fULL, ImplicitList32, ImplicitList84, 0 },  // Inst #4499 = XGETBV
  { 4500,	0,	0,	474,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1ae000001ULL, NULL, NULL, 0 },  // Inst #4500 = XLAT
  { 4501,	1,	0,	5,	0,	0, 0x6a00c041ULL, ImplicitList3, ImplicitList2, OperandInfo2 },  // Inst #4501 = XOR16i16
  { 4502,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10200c05eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4502 = XOR16mi
  { 4503,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600405eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4503 = XOR16mi8
  { 4504,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000044ULL, NULL, ImplicitList2, OperandInfo16 },  // Inst #4504 = XOR16mr
  { 4505,	3,	1,	5,	0,	0, 0x10200c056ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #4505 = XOR16ri
  { 4506,	3,	1,	5,	0,	0, 0x106004056ULL, NULL, ImplicitList2, OperandInfo17 },  // Inst #4506 = XOR16ri8
  { 4507,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66000046ULL, NULL, ImplicitList2, OperandInfo18 },  // Inst #4507 = XOR16rm
  { 4508,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62000043ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #4508 = XOR16rr
  { 4509,	3,	1,	5,	0,	0, 0x66000045ULL, NULL, ImplicitList2, OperandInfo19 },  // Inst #4509 = XOR16rr_REV
  { 4510,	1,	0,	5,	0,	0, 0x6a014001ULL, ImplicitList4, ImplicitList2, OperandInfo2 },  // Inst #4510 = XOR32i32
  { 4511,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4511 = XOR32mi
  { 4512,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4512 = XOR32mi8
  { 4513,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62000004ULL, NULL, ImplicitList2, OperandInfo20 },  // Inst #4513 = XOR32mr
  { 4514,	3,	1,	5,	0,	0, 0x102014016ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #4514 = XOR32ri
  { 4515,	3,	1,	5,	0,	0, 0x106004016ULL, NULL, ImplicitList2, OperandInfo21 },  // Inst #4515 = XOR32ri8
  { 4516,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66000006ULL, NULL, ImplicitList2, OperandInfo22 },  // Inst #4516 = XOR32rm
  { 4517,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62000003ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #4517 = XOR32rr
  { 4518,	3,	1,	5,	0,	0, 0x66000005ULL, NULL, ImplicitList2, OperandInfo23 },  // Inst #4518 = XOR32rr_REV
  { 4519,	1,	0,	5,	0,	0, 0x6a016001ULL, ImplicitList5, ImplicitList2, OperandInfo2 },  // Inst #4519 = XOR64i32
  { 4520,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10201601eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4520 = XOR64mi32
  { 4521,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10600601eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4521 = XOR64mi8
  { 4522,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x62002004ULL, NULL, ImplicitList2, OperandInfo24 },  // Inst #4522 = XOR64mr
  { 4523,	3,	1,	5,	0,	0, 0x102016016ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #4523 = XOR64ri32
  { 4524,	3,	1,	5,	0,	0, 0x106006016ULL, NULL, ImplicitList2, OperandInfo25 },  // Inst #4524 = XOR64ri8
  { 4525,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x66002006ULL, NULL, ImplicitList2, OperandInfo26 },  // Inst #4525 = XOR64rm
  { 4526,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x62002003ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #4526 = XOR64rr
  { 4527,	3,	1,	5,	0,	0, 0x66002005ULL, NULL, ImplicitList2, OperandInfo27 },  // Inst #4527 = XOR64rr_REV
  { 4528,	1,	0,	5,	0,	0, 0x68004001ULL, ImplicitList6, ImplicitList2, OperandInfo2 },  // Inst #4528 = XOR8i8
  { 4529,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x10000401eULL, NULL, ImplicitList2, OperandInfo15 },  // Inst #4529 = XOR8mi
  { 4530,	6,	0,	6,	0,	0|(1<<MCID::MayLoad)|(1<<MCID::MayStore), 0x60000004ULL, NULL, ImplicitList2, OperandInfo28 },  // Inst #4530 = XOR8mr
  { 4531,	3,	1,	5,	0,	0, 0x100004016ULL, NULL, ImplicitList2, OperandInfo29 },  // Inst #4531 = XOR8ri
  { 4532,	7,	1,	7,	0,	0|(1<<MCID::MayLoad), 0x64000006ULL, NULL, ImplicitList2, OperandInfo30 },  // Inst #4532 = XOR8rm
  { 4533,	3,	1,	5,	0,	0|(1<<MCID::Commutable), 0x60000003ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #4533 = XOR8rr
  { 4534,	3,	1,	5,	0,	0, 0x64000005ULL, NULL, ImplicitList2, OperandInfo31 },  // Inst #4534 = XOR8rr_REV
  { 4535,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xaf000146ULL, NULL, NULL, OperandInfo34 },  // Inst #4535 = XORPDrm
  { 4536,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xaf000145ULL, NULL, NULL, OperandInfo35 },  // Inst #4536 = XORPDrr
  { 4537,	7,	1,	21,	0,	0|(1<<MCID::MayLoad), 0xae800106ULL, NULL, NULL, OperandInfo34 },  // Inst #4537 = XORPSrm
  { 4538,	3,	1,	22,	0,	0|(1<<MCID::Commutable), 0xae800105ULL, NULL, NULL, OperandInfo35 },  // Inst #4538 = XORPSrr
  { 4539,	5,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011dULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4539 = XRSTOR
  { 4540,	5,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211dULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4540 = XRSTOR64
  { 4541,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011cULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4541 = XSAVE
  { 4542,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211cULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4542 = XSAVE64
  { 4543,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00011eULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4543 = XSAVEOPT
  { 4544,	5,	1,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x15c00211eULL, ImplicitList84, NULL, OperandInfo40 },  // Inst #4544 = XSAVEOPT64
  { 4545,	0,	0,	105,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000130ULL, ImplicitList85, NULL, 0 },  // Inst #4545 = XSETBV
  { 4546,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x190000f01ULL, ImplicitList86, ImplicitList86, 0 },  // Inst #4546 = XSHA1
  { 4547,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x1a0000f01ULL, ImplicitList86, ImplicitList86, 0 },  // Inst #4547 = XSHA256
  { 4548,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x180001001ULL, ImplicitList87, ImplicitList88, 0 },  // Inst #4548 = XSTORE
  { 4549,	0,	0,	0,	0,	0|(1<<MCID::UnmodeledSideEffects), 0x2000133ULL, NULL, ImplicitList2, 0 },  // Inst #4549 = XTEST
};

extern const char X86InstrNameData[] = {
  /* 0 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', '_', 'R', 'E', 'S', 'T', 'O', 'R', 'E', '_', 'R', '1', '0', 0,
  /* 26 */ 'L', 'D', '_', 'F', 'p', '0', '8', '0', 0,
  /* 35 */ 'L', 'D', '_', 'F', 'p', '1', '8', '0', 0,
  /* 44 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '8', '0', 0,
  /* 55 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 68 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 81 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 94 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 108 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 122 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '8', '0', 0,
  /* 135 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 147 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 159 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '8', '0', 0,
  /* 172 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 184 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 196 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '8', '0', 0,
  /* 209 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 222 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 235 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 248 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 262 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 276 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '8', '0', 0,
  /* 289 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 301 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 313 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '8', '0', 0,
  /* 326 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 338 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 347 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '8', '0', 0,
  /* 358 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 0,
  /* 367 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 380 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 392 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 404 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '8', '0', 0,
  /* 415 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 0,
  /* 424 */ 'S', 'I', 'N', '_', 'F', 'p', '8', '0', 0,
  /* 433 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 445 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '8', '0', 0,
  /* 456 */ 'A', 'B', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 465 */ 'C', 'H', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 474 */ 'C', 'O', 'S', '_', 'F', 'p', '8', '0', 0,
  /* 483 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 493 */ 'T', 'S', 'T', '_', 'F', 'p', '8', '0', 0,
  /* 502 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 0,
  /* 511 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '8', '0', 0,
  /* 523 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '8', '0', 0,
  /* 534 */ 'L', 'D', '_', 'F', '0', 0,
  /* 540 */ 'V', '_', 'S', 'E', 'T', '0', 0,
  /* 547 */ 'A', 'V', 'X', '_', 'S', 'E', 'T', '0', 0,
  /* 556 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '0', 0,
  /* 567 */ 'S', 'U', 'B', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 577 */ 'A', 'D', 'D', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 587 */ 'M', 'U', 'L', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 597 */ 'S', 'U', 'B', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 608 */ 'D', 'I', 'V', 'R', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 619 */ 'D', 'I', 'V', '_', 'F', 'r', 'S', 'T', '0', 0,
  /* 629 */ 'S', 'U', 'B', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 640 */ 'A', 'D', 'D', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 651 */ 'M', 'U', 'L', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 662 */ 'S', 'U', 'B', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 674 */ 'D', 'I', 'V', 'R', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 686 */ 'D', 'I', 'V', '_', 'F', 'P', 'r', 'S', 'T', '0', 0,
  /* 697 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', '0', 0,
  /* 709 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', '0', 0,
  /* 721 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', '0', 0,
  /* 733 */ 'M', 'O', 'V', '3', '2', 'r', '0', 0,
  /* 741 */ 'M', 'O', 'V', '6', '4', 'r', '0', 0,
  /* 749 */ 'M', 'O', 'V', '1', '6', 'r', '0', 0,
  /* 757 */ 'M', 'O', 'V', '8', 'r', '0', 0,
  /* 764 */ 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', '0', 0,
  /* 776 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', '0', 0,
  /* 788 */ 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', '0', 0,
  /* 800 */ 'X', 'S', 'H', 'A', '1', 0,
  /* 806 */ 'L', 'D', '_', 'F', '1', 0,
  /* 812 */ 'F', 'P', 'R', 'E', 'M', '1', 0,
  /* 819 */ 'F', '2', 'X', 'M', '1', 0,
  /* 825 */ 'F', 'Y', 'L', '2', 'X', 'P', '1', 0,
  /* 833 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '1', 0,
  /* 844 */ 'J', 'A', '_', '1', 0,
  /* 849 */ 'J', 'B', '_', '1', 0,
  /* 854 */ 'J', 'A', 'E', '_', '1', 0,
  /* 860 */ 'J', 'B', 'E', '_', '1', 0,
  /* 866 */ 'J', 'G', 'E', '_', '1', 0,
  /* 872 */ 'J', 'E', '_', '1', 0,
  /* 877 */ 'J', 'L', 'E', '_', '1', 0,
  /* 883 */ 'J', 'N', 'E', '_', '1', 0,
  /* 889 */ 'J', 'G', '_', '1', 0,
  /* 894 */ 'J', 'L', '_', '1', 0,
  /* 899 */ 'J', 'O', '_', '1', 0,
  /* 904 */ 'J', 'N', 'O', '_', '1', 0,
  /* 910 */ 'J', 'P', '_', '1', 0,
  /* 915 */ 'J', 'M', 'P', '_', '1', 0,
  /* 921 */ 'J', 'N', 'P', '_', '1', 0,
  /* 927 */ 'J', 'S', '_', '1', 0,
  /* 932 */ 'J', 'N', 'S', '_', '1', 0,
  /* 938 */ 'R', 'C', 'L', '3', '2', 'm', '1', 0,
  /* 946 */ 'S', 'H', 'L', '3', '2', 'm', '1', 0,
  /* 954 */ 'R', 'O', 'L', '3', '2', 'm', '1', 0,
  /* 962 */ 'S', 'A', 'R', '3', '2', 'm', '1', 0,
  /* 970 */ 'R', 'C', 'R', '3', '2', 'm', '1', 0,
  /* 978 */ 'S', 'H', 'R', '3', '2', 'm', '1', 0,
  /* 986 */ 'R', 'O', 'R', '3', '2', 'm', '1', 0,
  /* 994 */ 'R', 'C', 'L', '6', '4', 'm', '1', 0,
  /* 1002 */ 'S', 'H', 'L', '6', '4', 'm', '1', 0,
  /* 1010 */ 'R', 'O', 'L', '6', '4', 'm', '1', 0,
  /* 1018 */ 'S', 'A', 'R', '6', '4', 'm', '1', 0,
  /* 1026 */ 'R', 'C', 'R', '6', '4', 'm', '1', 0,
  /* 1034 */ 'S', 'H', 'R', '6', '4', 'm', '1', 0,
  /* 1042 */ 'R', 'O', 'R', '6', '4', 'm', '1', 0,
  /* 1050 */ 'R', 'C', 'L', '1', '6', 'm', '1', 0,
  /* 1058 */ 'S', 'H', 'L', '1', '6', 'm', '1', 0,
  /* 1066 */ 'R', 'O', 'L', '1', '6', 'm', '1', 0,
  /* 1074 */ 'S', 'A', 'R', '1', '6', 'm', '1', 0,
  /* 1082 */ 'R', 'C', 'R', '1', '6', 'm', '1', 0,
  /* 1090 */ 'S', 'H', 'R', '1', '6', 'm', '1', 0,
  /* 1098 */ 'R', 'O', 'R', '1', '6', 'm', '1', 0,
  /* 1106 */ 'R', 'C', 'L', '8', 'm', '1', 0,
  /* 1113 */ 'S', 'H', 'L', '8', 'm', '1', 0,
  /* 1120 */ 'R', 'O', 'L', '8', 'm', '1', 0,
  /* 1127 */ 'S', 'A', 'R', '8', 'm', '1', 0,
  /* 1134 */ 'R', 'C', 'R', '8', 'm', '1', 0,
  /* 1141 */ 'S', 'H', 'R', '8', 'm', '1', 0,
  /* 1148 */ 'R', 'O', 'R', '8', 'm', '1', 0,
  /* 1155 */ 'R', 'C', 'L', '3', '2', 'r', '1', 0,
  /* 1163 */ 'S', 'H', 'L', '3', '2', 'r', '1', 0,
  /* 1171 */ 'R', 'O', 'L', '3', '2', 'r', '1', 0,
  /* 1179 */ 'S', 'A', 'R', '3', '2', 'r', '1', 0,
  /* 1187 */ 'R', 'C', 'R', '3', '2', 'r', '1', 0,
  /* 1195 */ 'S', 'H', 'R', '3', '2', 'r', '1', 0,
  /* 1203 */ 'R', 'O', 'R', '3', '2', 'r', '1', 0,
  /* 1211 */ 'R', 'C', 'L', '6', '4', 'r', '1', 0,
  /* 1219 */ 'S', 'H', 'L', '6', '4', 'r', '1', 0,
  /* 1227 */ 'R', 'O', 'L', '6', '4', 'r', '1', 0,
  /* 1235 */ 'S', 'A', 'R', '6', '4', 'r', '1', 0,
  /* 1243 */ 'R', 'C', 'R', '6', '4', 'r', '1', 0,
  /* 1251 */ 'S', 'H', 'R', '6', '4', 'r', '1', 0,
  /* 1259 */ 'R', 'O', 'R', '6', '4', 'r', '1', 0,
  /* 1267 */ 'R', 'C', 'L', '1', '6', 'r', '1', 0,
  /* 1275 */ 'S', 'H', 'L', '1', '6', 'r', '1', 0,
  /* 1283 */ 'R', 'O', 'L', '1', '6', 'r', '1', 0,
  /* 1291 */ 'S', 'A', 'R', '1', '6', 'r', '1', 0,
  /* 1299 */ 'R', 'C', 'R', '1', '6', 'r', '1', 0,
  /* 1307 */ 'S', 'H', 'R', '1', '6', 'r', '1', 0,
  /* 1315 */ 'R', 'O', 'R', '1', '6', 'r', '1', 0,
  /* 1323 */ 'R', 'C', 'L', '8', 'r', '1', 0,
  /* 1330 */ 'S', 'H', 'L', '8', 'r', '1', 0,
  /* 1337 */ 'R', 'O', 'L', '8', 'r', '1', 0,
  /* 1344 */ 'S', 'A', 'R', '8', 'r', '1', 0,
  /* 1351 */ 'R', 'C', 'R', '8', 'r', '1', 0,
  /* 1358 */ 'S', 'H', 'R', '8', 'r', '1', 0,
  /* 1365 */ 'R', 'O', 'R', '8', 'r', '1', 0,
  /* 1372 */ 'L', 'D', '_', 'F', 'p', '0', '3', '2', 0,
  /* 1381 */ 'L', 'D', '_', 'F', 'p', '1', '3', '2', 0,
  /* 1390 */ 'A', 'T', 'O', 'M', 'S', 'U', 'B', '6', '4', '3', '2', 0,
  /* 1402 */ 'A', 'T', 'O', 'M', 'A', 'D', 'D', '6', '4', '3', '2', 0,
  /* 1414 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1426 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', '3', '2', 0,
  /* 1439 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', '3', '2', 0,
  /* 1451 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', '3', '2', 0,
  /* 1464 */ 'A', 'T', 'O', 'M', 'S', 'W', 'A', 'P', '6', '4', '3', '2', 0,
  /* 1477 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1488 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', '3', '2', 0,
  /* 1500 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', '3', '2', 0,
  /* 1512 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', '3', '2', 0,
  /* 1525 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '3', '2', 0,
  /* 1535 */ 'P', 'U', 'S', 'H', 'A', '3', '2', 0,
  /* 1543 */ 'P', 'O', 'P', 'A', '3', '2', 0,
  /* 1550 */ 'V', 'M', 'L', 'O', 'A', 'D', '3', '2', 0,
  /* 1559 */ 'L', 'X', 'A', 'D', 'D', '3', '2', 0,
  /* 1567 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '3', '2', 0,
  /* 1577 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '3', '2', 0,
  /* 1587 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '3', '2', 0,
  /* 1597 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '3', '2', 0,
  /* 1608 */ 'V', 'M', 'S', 'A', 'V', 'E', '3', '2', 0,
  /* 1617 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '3', '2', 0,
  /* 1628 */ 'C', 'M', 'O', 'V', '_', 'V', '8', 'F', '3', '2', 0,
  /* 1639 */ 'P', 'U', 'S', 'H', 'F', '3', '2', 0,
  /* 1647 */ 'P', 'O', 'P', 'F', '3', '2', 0,
  /* 1654 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 0,
  /* 1665 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'T', 'I', '3', '2', 0,
  /* 1677 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '3', '2', 0,
  /* 1687 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '3', '2', 0,
  /* 1698 */ 'V', 'M', 'R', 'U', 'N', '3', '2', 0,
  /* 1706 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '3', '2', 0,
  /* 1725 */ 'N', 'A', 'C', 'L', '_', 'T', 'R', 'A', 'P', '3', '2', 0,
  /* 1737 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '3', '2', 0,
  /* 1748 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '3', '2', 0,
  /* 1765 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '3', '2', 0,
  /* 1775 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '3', '2', 0,
  /* 1785 */ 'A', 'T', 'O', 'M', 'O', 'R', '3', '2', 0,
  /* 1794 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '3', '2', 0,
  /* 1804 */ 'S', 'C', 'A', 'S', '3', '2', 0,
  /* 1811 */ 'P', 'U', 'S', 'H', 'C', 'S', '3', '2', 0,
  /* 1820 */ 'P', 'U', 'S', 'H', 'D', 'S', '3', '2', 0,
  /* 1829 */ 'P', 'O', 'P', 'D', 'S', '3', '2', 0,
  /* 1837 */ 'P', 'U', 'S', 'H', 'E', 'S', '3', '2', 0,
  /* 1846 */ 'P', 'O', 'P', 'E', 'S', '3', '2', 0,
  /* 1854 */ 'P', 'U', 'S', 'H', 'F', 'S', '3', '2', 0,
  /* 1863 */ 'P', 'O', 'P', 'F', 'S', '3', '2', 0,
  /* 1871 */ 'P', 'U', 'S', 'H', 'G', 'S', '3', '2', 0,
  /* 1880 */ 'P', 'O', 'P', 'G', 'S', '3', '2', 0,
  /* 1888 */ 'C', 'M', 'P', 'S', '3', '2', 0,
  /* 1895 */ 'P', 'U', 'S', 'H', 'S', 'S', '3', '2', 0,
  /* 1904 */ 'P', 'O', 'P', 'S', 'S', '3', '2', 0,
  /* 1912 */ 'I', 'R', 'E', 'T', '3', '2', 0,
  /* 1919 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'T', '3', '2', 0,
  /* 1930 */ 'I', 'N', 'V', 'E', 'P', 'T', '3', '2', 0,
  /* 1939 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '3', '2', 0,
  /* 1949 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '3', '2', 0,
  /* 1960 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '3', '2', 0,
  /* 1974 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '3', '2', 0,
  /* 1987 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '3', '2', 0,
  /* 2000 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '3', '2', 0,
  /* 2013 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '3', '2', 0,
  /* 2026 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '3', '2', 0,
  /* 2038 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '3', '2', 0,
  /* 2051 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '3', '2', 0,
  /* 2064 */ 'J', 'E', 'C', 'X', 'Z', '_', '3', '2', 0,
  /* 2073 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '3', '2', 0,
  /* 2084 */ 'S', 'B', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2093 */ 'S', 'U', 'B', '3', '2', 'i', '3', '2', 0,
  /* 2102 */ 'A', 'D', 'C', '3', '2', 'i', '3', '2', 0,
  /* 2111 */ 'A', 'D', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2120 */ 'A', 'N', 'D', '3', '2', 'i', '3', '2', 0,
  /* 2129 */ 'C', 'M', 'P', '3', '2', 'i', '3', '2', 0,
  /* 2138 */ 'X', 'O', 'R', '3', '2', 'i', '3', '2', 0,
  /* 2147 */ 'T', 'E', 'S', 'T', '3', '2', 'i', '3', '2', 0,
  /* 2157 */ 'S', 'B', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2166 */ 'S', 'U', 'B', '6', '4', 'i', '3', '2', 0,
  /* 2175 */ 'A', 'D', 'C', '6', '4', 'i', '3', '2', 0,
  /* 2184 */ 'A', 'D', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2193 */ 'A', 'N', 'D', '6', '4', 'i', '3', '2', 0,
  /* 2202 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '3', '2', 0,
  /* 2212 */ 'C', 'M', 'P', '6', '4', 'i', '3', '2', 0,
  /* 2221 */ 'X', 'O', 'R', '6', '4', 'i', '3', '2', 0,
  /* 2230 */ 'T', 'E', 'S', 'T', '6', '4', 'i', '3', '2', 0,
  /* 2240 */ 'M', 'O', 'V', '6', '4', 'r', 'i', '6', '4', 'i', '3', '2', 0,
  /* 2253 */ 'P', 'U', 'S', 'H', 'i', '3', '2', 0,
  /* 2261 */ 'N', 'A', 'C', 'L', '_', 'S', 'P', 'A', 'D', 'J', 'i', '3', '2', 0,
  /* 2275 */ 'N', 'A', 'C', 'L', '_', 'A', 'S', 'P', 'i', '3', '2', 0,
  /* 2287 */ 'N', 'A', 'C', 'L', '_', 'A', 'N', 'D', 'S', 'P', 'i', '3', '2', 0,
  /* 2301 */ 'N', 'A', 'C', 'L', '_', 'S', 'S', 'P', 'i', '3', '2', 0,
  /* 2313 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2323 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2338 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2348 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2363 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2378 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2388 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2403 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2417 */ 'T', 'E', 'S', 'T', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2428 */ 'M', 'O', 'V', '6', '4', 'm', 'i', '3', '2', 0,
  /* 2438 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '3', '2', 0,
  /* 2450 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2460 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2470 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2480 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2490 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2500 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2510 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2520 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2531 */ 'M', 'O', 'V', '6', '4', 'r', 'i', '3', '2', 0,
  /* 2541 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '3', '2', 0,
  /* 2553 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'C', 'A', 'L', 'L', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2575 */ 'J', 'M', 'P', '6', '4', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2588 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '3', '2', 0,
  /* 2608 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '3', '2', 0,
  /* 2620 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2632 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2644 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2656 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2669 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2682 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2693 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '3', '2', 0,
  /* 2705 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2718 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2731 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2744 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2758 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2772 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '3', '2', 0,
  /* 2785 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2797 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2809 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '3', '2', 0,
  /* 2822 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '3', '2', 0,
  /* 2834 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', '3', '2', 0,
  /* 2846 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2858 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2870 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2882 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2894 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2907 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2920 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2932 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2945 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', '3', '2', 0,
  /* 2957 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2970 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2983 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 2996 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 3010 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 3024 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '3', '2', 0,
  /* 3037 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 3049 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 3061 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '3', '2', 0,
  /* 3074 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '3', '2', 0,
  /* 3086 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '3', '2', 0,
  /* 3098 */ 'M', 'O', 'V', '3', '2', 'a', 'o', '3', '2', 0,
  /* 3108 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 3120 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 3129 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '3', '2', 0,
  /* 3140 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 0,
  /* 3149 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3162 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3174 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3186 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '3', '2', 0,
  /* 3197 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 0,
  /* 3206 */ 'S', 'I', 'N', '_', 'F', 'p', '3', '2', 0,
  /* 3215 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3227 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '3', '2', 0,
  /* 3238 */ 'A', 'B', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3247 */ 'C', 'H', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3256 */ 'C', 'O', 'S', '_', 'F', 'p', '3', '2', 0,
  /* 3265 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3275 */ 'T', 'S', 'T', '_', 'F', 'p', '3', '2', 0,
  /* 3284 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 0,
  /* 3293 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '3', '2', 0,
  /* 3311 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '3', '2', 0,
  /* 3328 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '3', '2', 0,
  /* 3340 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '3', '2', 0,
  /* 3352 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'I', 'E', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3374 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'L', 'E', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3396 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3415 */ 'N', 'A', 'C', 'L', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3431 */ 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '3', '2', 0,
  /* 3447 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '3', '2', 0,
  /* 3458 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '3', '2', 0,
  /* 3470 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '3', '2', 0,
  /* 3482 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '3', '2', 0,
  /* 3496 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '3', '2', 0,
  /* 3510 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '3', '2', 0,
  /* 3525 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '3', '2', 0,
  /* 3540 */ 'F', 'L', 'D', 'L', 'G', '2', 0,
  /* 3547 */ 'F', 'L', 'D', 'L', 'N', '2', 0,
  /* 3554 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'T', '2', 0,
  /* 3565 */ 'I', 'N', 'T', '3', 0,
  /* 3570 */ 'L', 'D', '_', 'F', 'p', '0', '6', '4', 0,
  /* 3579 */ 'L', 'D', '_', 'F', 'p', '1', '6', '4', 0,
  /* 3588 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 'v', '1', '6', '4', 0,
  /* 3605 */ 'I', 'N', 'V', 'L', 'P', 'G', 'A', '6', '4', 0,
  /* 3615 */ 'V', 'M', 'L', 'O', 'A', 'D', '6', '4', 0,
  /* 3624 */ 'L', 'X', 'A', 'D', 'D', '6', '4', 0,
  /* 3632 */ 'I', 'N', 'V', 'P', 'C', 'I', 'D', '6', '4', 0,
  /* 3642 */ 'I', 'N', 'V', 'V', 'P', 'I', 'D', '6', '4', 0,
  /* 3652 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '6', '4', 0,
  /* 3662 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '6', '4', 0,
  /* 3673 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3684 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3695 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3706 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', '6', '4', 0,
  /* 3717 */ 'L', 'E', 'A', 'V', 'E', '6', '4', 0,
  /* 3725 */ 'V', 'M', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3734 */ 'F', 'X', 'S', 'A', 'V', 'E', '6', '4', 0,
  /* 3743 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'F', '6', '4', 0,
  /* 3754 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'F', '6', '4', 0,
  /* 3765 */ 'P', 'U', 'S', 'H', 'F', '6', '4', 0,
  /* 3773 */ 'P', 'O', 'P', 'F', '6', '4', 0,
  /* 3780 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 0,
  /* 3791 */ 'C', 'M', 'O', 'V', '_', 'V', '2', 'I', '6', '4', 0,
  /* 3802 */ 'C', 'M', 'O', 'V', '_', 'V', '4', 'I', '6', '4', 0,
  /* 3813 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '6', '4', 0,
  /* 3823 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '6', '4', 0,
  /* 3833 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '6', '4', 0,
  /* 3844 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', '6', '4', 0,
  /* 3856 */ 'V', 'M', 'R', 'U', 'N', '6', '4', 0,
  /* 3864 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'D', 'O', 'W', 'N', '6', '4', 0,
  /* 3883 */ 'N', 'A', 'C', 'L', '_', 'T', 'R', 'A', 'P', '6', '4', 0,
  /* 3895 */ 'C', 'M', 'O', 'V', '_', 'R', 'F', 'P', '6', '4', 0,
  /* 3906 */ 'F', 'A', 'R', 'J', 'M', 'P', '6', '4', 0,
  /* 3915 */ 'A', 'D', 'J', 'C', 'A', 'L', 'L', 'S', 'T', 'A', 'C', 'K', 'U', 'P', '6', '4', 0,
  /* 3932 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', '6', '4', 0,
  /* 3947 */ 'C', 'M', 'O', 'V', '_', 'F', 'R', '6', '4', 0,
  /* 3957 */ 'A', 'T', 'O', 'M', 'O', 'R', '6', '4', 0,
  /* 3966 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', '6', '4', 0,
  /* 3976 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '6', '4', 0,
  /* 3986 */ 'S', 'C', 'A', 'S', '6', '4', 0,
  /* 3993 */ 'P', 'U', 'S', 'H', 'F', 'S', '6', '4', 0,
  /* 4002 */ 'P', 'O', 'P', 'F', 'S', '6', '4', 0,
  /* 4010 */ 'P', 'U', 'S', 'H', 'G', 'S', '6', '4', 0,
  /* 4019 */ 'P', 'O', 'P', 'G', 'S', '6', '4', 0,
  /* 4027 */ 'C', 'M', 'P', 'S', '6', '4', 0,
  /* 4034 */ 'I', 'R', 'E', 'T', '6', '4', 0,
  /* 4041 */ 'S', 'Y', 'S', 'R', 'E', 'T', '6', '4', 0,
  /* 4050 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'T', '6', '4', 0,
  /* 4061 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', '6', '4', 0,
  /* 4071 */ 'I', 'N', 'V', 'E', 'P', 'T', '6', '4', 0,
  /* 4080 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', '6', '4', 0,
  /* 4091 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', '6', '4', 0,
  /* 4105 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '6', '4', 0,
  /* 4115 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '6', '4', 0,
  /* 4126 */ 'S', 'E', 'G', '_', 'A', 'L', 'L', 'O', 'C', 'A', '_', '6', '4', 0,
  /* 4140 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'B', '_', '6', '4', 0,
  /* 4153 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'B', '_', '6', '4', 0,
  /* 4166 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'D', '_', '6', '4', 0,
  /* 4179 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'D', '_', '6', '4', 0,
  /* 4192 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'V', 'A', 'A', 'R', 'G', '_', '6', '4', 0,
  /* 4209 */ 'W', 'I', 'N', '_', 'F', 'T', 'O', 'L', '_', '6', '4', 0,
  /* 4221 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'Q', '_', '6', '4', 0,
  /* 4234 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'Q', '_', '6', '4', 0,
  /* 4247 */ 'R', 'E', 'P', '_', 'S', 'T', 'O', 'S', 'W', '_', '6', '4', 0,
  /* 4260 */ 'R', 'E', 'P', '_', 'M', 'O', 'V', 'S', 'W', '_', '6', '4', 0,
  /* 4273 */ 'J', 'E', 'C', 'X', 'Z', '_', '6', '4', 0,
  /* 4282 */ 'T', 'L', 'S', 'C', 'a', 'l', 'l', '_', '6', '4', 0,
  /* 4293 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', '6', '4', 0,
  /* 4312 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', '6', '4', 0,
  /* 4333 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', '6', '4', 0,
  /* 4346 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', '6', '4', 0,
  /* 4367 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', '6', '4', 0,
  /* 4379 */ 'S', 'U', 'B', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4391 */ 'A', 'D', 'D', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4403 */ 'M', 'U', 'L', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4415 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4428 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4441 */ 'S', 'T', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4452 */ 'D', 'I', 'V', '_', 'F', 'p', '8', '0', 'm', '6', '4', 0,
  /* 4464 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4477 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4490 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4503 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4517 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4531 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '3', '2', 'm', '6', '4', 0,
  /* 4544 */ 'I', 'L', 'D', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4556 */ 'I', 'S', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4568 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '3', '2', 'm', '6', '4', 0,
  /* 4581 */ 'I', 'L', 'D', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4593 */ 'I', 'S', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4605 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '6', '4', 'm', '6', '4', 0,
  /* 4618 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '6', '4', 0,
  /* 4630 */ 'S', 'U', 'B', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4643 */ 'A', 'D', 'D', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4656 */ 'M', 'U', 'L', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4669 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4683 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4697 */ 'D', 'I', 'V', '_', 'F', 'p', 'I', '1', '6', 'm', '6', '4', 0,
  /* 4710 */ 'I', 'L', 'D', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4722 */ 'I', 'S', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4734 */ 'I', 'S', 'T', 'T', '_', 'F', 'p', '1', '6', 'm', '6', '4', 0,
  /* 4747 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', '6', '4', 0,
  /* 4758 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', '6', '4', 0,
  /* 4773 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', '6', '4', 0,
  /* 4788 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '6', '4', 0,
  /* 4802 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', '6', '4', 0,
  /* 4817 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'm', '6', '4', 0,
  /* 4831 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', '6', '4', 0,
  /* 4846 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '6', '4', 0,
  /* 4860 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', '6', '4', 0,
  /* 4875 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', '6', '4', 0,
  /* 4890 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', '6', '4', 0,
  /* 4905 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4919 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4937 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4953 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4969 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '6', '4', 0,
  /* 4986 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 4998 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 5007 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 'p', '6', '4', 0,
  /* 5018 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 0,
  /* 5027 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 5040 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 5052 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 5064 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 'p', '6', '4', 0,
  /* 5075 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 0,
  /* 5084 */ 'S', 'I', 'N', '_', 'F', 'p', '6', '4', 0,
  /* 5093 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 5105 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 'p', '6', '4', 0,
  /* 5116 */ 'A', 'B', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 5125 */ 'C', 'H', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 5134 */ 'C', 'O', 'S', '_', 'F', 'p', '6', '4', 0,
  /* 5143 */ 'S', 'Q', 'R', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 5153 */ 'T', 'S', 'T', '_', 'F', 'p', '6', '4', 0,
  /* 5162 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 0,
  /* 5171 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'L', 'o', 'n', 'g', 'J', 'm', 'p', '6', '4', 0,
  /* 5189 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'J', 'm', 'p', '6', '4', 0,
  /* 5206 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '6', '4', 0,
  /* 5218 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'I', 'r', '6', '4', 0,
  /* 5230 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', '6', '4', 0,
  /* 5249 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', '6', '4', 0,
  /* 5260 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'G', 'D', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5282 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'I', 'E', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5304 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'L', 'E', '_', 'T', 'L', 'S', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5326 */ 'T', 'L', 'S', '_', 'b', 'a', 's', 'e', '_', 'a', 'd', 'd', 'r', '6', '4', 0,
  /* 5342 */ 'U', 'C', 'O', 'M', '_', 'F', 'p', 'r', '6', '4', 0,
  /* 5353 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', '6', '4', 0,
  /* 5368 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', '6', '4', 0,
  /* 5383 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', '6', '4', 0,
  /* 5395 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '6', '4', 0,
  /* 5409 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', '6', '4', 0,
  /* 5424 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'r', 'r', '6', '4', 0,
  /* 5438 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', '6', '4', 0,
  /* 5453 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', 'r', '6', '4', 0,
  /* 5467 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '6', '4', 0,
  /* 5481 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5495 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', '6', '4', 0,
  /* 5510 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', '6', '4', 0,
  /* 5525 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', '6', '4', 0,
  /* 5540 */ 'M', 'M', 'X', '_', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', '6', '4', 0,
  /* 5555 */ 'M', 'M', 'X', '_', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5569 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5587 */ 'M', 'M', 'X', '_', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5603 */ 'M', 'M', 'X', '_', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5619 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '6', '4', 0,
  /* 5636 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', 'r', '6', '4', 0,
  /* 5651 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', 'r', '6', '4', 0,
  /* 5666 */ 'J', 'A', '_', '4', 0,
  /* 5671 */ 'J', 'B', '_', '4', 0,
  /* 5676 */ 'J', 'A', 'E', '_', '4', 0,
  /* 5682 */ 'J', 'B', 'E', '_', '4', 0,
  /* 5688 */ 'J', 'G', 'E', '_', '4', 0,
  /* 5694 */ 'J', 'E', '_', '4', 0,
  /* 5699 */ 'J', 'L', 'E', '_', '4', 0,
  /* 5705 */ 'J', 'N', 'E', '_', '4', 0,
  /* 5711 */ 'J', 'G', '_', '4', 0,
  /* 5716 */ 'J', 'L', '_', '4', 0,
  /* 5721 */ 'X', 'B', 'E', 'G', 'I', 'N', '_', '4', 0,
  /* 5730 */ 'J', 'O', '_', '4', 0,
  /* 5735 */ 'J', 'N', 'O', '_', '4', 0,
  /* 5741 */ 'J', 'P', '_', '4', 0,
  /* 5746 */ 'J', 'M', 'P', '_', '4', 0,
  /* 5752 */ 'J', 'N', 'P', '_', '4', 0,
  /* 5758 */ 'J', 'S', '_', '4', 0,
  /* 5763 */ 'J', 'N', 'S', '_', '4', 0,
  /* 5769 */ 'L', 'X', 'A', 'D', 'D', '1', '6', 0,
  /* 5777 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '1', '6', 0,
  /* 5787 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '1', '6', 0,
  /* 5798 */ 'P', 'U', 'S', 'H', 'F', '1', '6', 0,
  /* 5806 */ 'P', 'O', 'P', 'F', '1', '6', 0,
  /* 5813 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 0,
  /* 5824 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '1', '6', 0,
  /* 5834 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '1', '6', 0,
  /* 5845 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '1', '6', 0,
  /* 5855 */ 'A', 'T', 'O', 'M', 'O', 'R', '1', '6', 0,
  /* 5864 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '1', '6', 0,
  /* 5874 */ 'S', 'C', 'A', 'S', '1', '6', 0,
  /* 5881 */ 'P', 'U', 'S', 'H', 'C', 'S', '1', '6', 0,
  /* 5890 */ 'P', 'U', 'S', 'H', 'D', 'S', '1', '6', 0,
  /* 5899 */ 'P', 'O', 'P', 'D', 'S', '1', '6', 0,
  /* 5907 */ 'P', 'U', 'S', 'H', 'E', 'S', '1', '6', 0,
  /* 5916 */ 'P', 'O', 'P', 'E', 'S', '1', '6', 0,
  /* 5924 */ 'P', 'U', 'S', 'H', 'F', 'S', '1', '6', 0,
  /* 5933 */ 'P', 'O', 'P', 'F', 'S', '1', '6', 0,
  /* 5941 */ 'P', 'U', 'S', 'H', 'G', 'S', '1', '6', 0,
  /* 5950 */ 'P', 'O', 'P', 'G', 'S', '1', '6', 0,
  /* 5958 */ 'C', 'M', 'P', 'S', '1', '6', 0,
  /* 5965 */ 'P', 'U', 'S', 'H', 'S', 'S', '1', '6', 0,
  /* 5974 */ 'P', 'O', 'P', 'S', 'S', '1', '6', 0,
  /* 5982 */ 'I', 'R', 'E', 'T', '1', '6', 0,
  /* 5989 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '1', '6', 0,
  /* 5999 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '1', '6', 0,
  /* 6010 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '1', '6', 0,
  /* 6020 */ 'S', 'B', 'B', '1', '6', 'i', '1', '6', 0,
  /* 6029 */ 'S', 'U', 'B', '1', '6', 'i', '1', '6', 0,
  /* 6038 */ 'A', 'D', 'C', '1', '6', 'i', '1', '6', 0,
  /* 6047 */ 'A', 'D', 'D', '1', '6', 'i', '1', '6', 0,
  /* 6056 */ 'A', 'N', 'D', '1', '6', 'i', '1', '6', 0,
  /* 6065 */ 'C', 'M', 'P', '1', '6', 'i', '1', '6', 0,
  /* 6074 */ 'X', 'O', 'R', '1', '6', 'i', '1', '6', 0,
  /* 6083 */ 'T', 'E', 'S', 'T', '1', '6', 'i', '1', '6', 0,
  /* 6093 */ 'P', 'U', 'S', 'H', 'i', '1', '6', 0,
  /* 6101 */ 'C', 'A', 'L', 'L', 'p', 'c', 'r', 'e', 'l', '1', '6', 0,
  /* 6113 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '1', '6', 0,
  /* 6125 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 6137 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '1', '6', 0,
  /* 6149 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '1', '6', 0,
  /* 6161 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '1', '6', 0,
  /* 6173 */ 'M', 'O', 'V', '1', '6', 'a', 'o', '1', '6', 0,
  /* 6183 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '1', '6', 0,
  /* 6195 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 6207 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '1', '6', 0,
  /* 6219 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '1', '6', 0,
  /* 6231 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '1', '6', 0,
  /* 6243 */ 'X', 'S', 'H', 'A', '2', '5', '6', 0,
  /* 6251 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '2', '5', '6', 0,
  /* 6263 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '2', '5', '6', 0,
  /* 6275 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6287 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6303 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6317 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6331 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '2', '5', '6', 0,
  /* 6346 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '2', '5', '6', 0,
  /* 6358 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '2', '5', '6', 0,
  /* 6370 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6382 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6398 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6412 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6426 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '2', '5', '6', 0,
  /* 6441 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'F', '1', '2', '8', 0,
  /* 6456 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'I', '1', '2', '8', 0,
  /* 6471 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'm', '1', '2', '8', 0,
  /* 6483 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'm', '1', '2', '8', 0,
  /* 6495 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6507 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6523 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6537 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6551 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6566 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'm', '1', '2', '8', 0,
  /* 6583 */ 'V', 'P', 'A', 'B', 'S', 'B', 'r', 'r', '1', '2', '8', 0,
  /* 6595 */ 'V', 'P', 'A', 'B', 'S', 'D', 'r', 'r', '1', '2', '8', 0,
  /* 6607 */ 'V', 'P', 'A', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6619 */ 'V', 'P', 'M', 'A', 'D', 'D', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6635 */ 'V', 'P', 'H', 'S', 'U', 'B', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6649 */ 'V', 'P', 'H', 'A', 'D', 'D', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6663 */ 'V', 'P', 'M', 'U', 'L', 'H', 'R', 'S', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6678 */ 'V', 'P', 'H', 'M', 'I', 'N', 'P', 'O', 'S', 'U', 'W', 'r', 'r', '1', '2', '8', 0,
  /* 6695 */ 'L', 'X', 'A', 'D', 'D', '8', 0,
  /* 6702 */ 'A', 'T', 'O', 'M', 'A', 'N', 'D', '8', 0,
  /* 6711 */ 'A', 'T', 'O', 'M', 'N', 'A', 'N', 'D', '8', 0,
  /* 6721 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 0,
  /* 6731 */ 'A', 'T', 'O', 'M', 'M', 'I', 'N', '8', 0,
  /* 6740 */ 'A', 'T', 'O', 'M', 'U', 'M', 'I', 'N', '8', 0,
  /* 6750 */ 'C', 'M', 'O', 'V', '_', 'G', 'R', '8', 0,
  /* 6759 */ 'A', 'T', 'O', 'M', 'O', 'R', '8', 0,
  /* 6767 */ 'A', 'T', 'O', 'M', 'X', 'O', 'R', '8', 0,
  /* 6776 */ 'S', 'C', 'A', 'S', '8', 0,
  /* 6782 */ 'C', 'M', 'P', 'S', '8', 0,
  /* 6788 */ 'A', 'T', 'O', 'M', 'M', 'A', 'X', '8', 0,
  /* 6797 */ 'A', 'T', 'O', 'M', 'U', 'M', 'A', 'X', '8', 0,
  /* 6807 */ 'P', 'U', 'S', 'H', '6', '4', 'i', '8', 0,
  /* 6816 */ 'S', 'B', 'B', '8', 'i', '8', 0,
  /* 6823 */ 'S', 'U', 'B', '8', 'i', '8', 0,
  /* 6830 */ 'A', 'D', 'C', '8', 'i', '8', 0,
  /* 6837 */ 'A', 'A', 'D', '8', 'i', '8', 0,
  /* 6844 */ 'A', 'D', 'D', '8', 'i', '8', 0,
  /* 6851 */ 'A', 'N', 'D', '8', 'i', '8', 0,
  /* 6858 */ 'A', 'A', 'M', '8', 'i', '8', 0,
  /* 6865 */ 'C', 'M', 'P', '8', 'i', '8', 0,
  /* 6872 */ 'X', 'O', 'R', '8', 'i', '8', 0,
  /* 6879 */ 'T', 'E', 'S', 'T', '8', 'i', '8', 0,
  /* 6887 */ 'P', 'U', 'S', 'H', 'i', '8', 0,
  /* 6894 */ 'N', 'A', 'C', 'L', '_', 'A', 'S', 'P', 'i', '8', 0,
  /* 6905 */ 'N', 'A', 'C', 'L', '_', 'S', 'S', 'P', 'i', '8', 0,
  /* 6916 */ 'S', 'B', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6925 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', '8', 0,
  /* 6939 */ 'A', 'D', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6948 */ 'B', 'T', 'C', '3', '2', 'm', 'i', '8', 0,
  /* 6957 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6971 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', '8', 0,
  /* 6985 */ 'C', 'M', 'P', '3', '2', 'm', 'i', '8', 0,
  /* 6994 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 7008 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 7021 */ 'B', 'T', 'R', '3', '2', 'm', 'i', '8', 0,
  /* 7030 */ 'B', 'T', 'S', '3', '2', 'm', 'i', '8', 0,
  /* 7039 */ 'B', 'T', '3', '2', 'm', 'i', '8', 0,
  /* 7047 */ 'S', 'B', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 7056 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'i', '8', 0,
  /* 7070 */ 'A', 'D', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 7079 */ 'B', 'T', 'C', '6', '4', 'm', 'i', '8', 0,
  /* 7088 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 7102 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'i', '8', 0,
  /* 7116 */ 'C', 'M', 'P', '6', '4', 'm', 'i', '8', 0,
  /* 7125 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 7139 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 7152 */ 'B', 'T', 'R', '6', '4', 'm', 'i', '8', 0,
  /* 7161 */ 'B', 'T', 'S', '6', '4', 'm', 'i', '8', 0,
  /* 7170 */ 'B', 'T', '6', '4', 'm', 'i', '8', 0,
  /* 7178 */ 'S', 'B', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 7187 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', '8', 0,
  /* 7201 */ 'A', 'D', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 7210 */ 'B', 'T', 'C', '1', '6', 'm', 'i', '8', 0,
  /* 7219 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 7233 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', '8', 0,
  /* 7247 */ 'C', 'M', 'P', '1', '6', 'm', 'i', '8', 0,
  /* 7256 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 7270 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 7283 */ 'B', 'T', 'R', '1', '6', 'm', 'i', '8', 0,
  /* 7292 */ 'B', 'T', 'S', '1', '6', 'm', 'i', '8', 0,
  /* 7301 */ 'B', 'T', '1', '6', 'm', 'i', '8', 0,
  /* 7309 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', '8', 0,
  /* 7320 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 'i', '8', 0,
  /* 7331 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', '8', 0,
  /* 7342 */ 'S', 'B', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 7351 */ 'S', 'U', 'B', '3', '2', 'r', 'i', '8', 0,
  /* 7360 */ 'A', 'D', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 7369 */ 'B', 'T', 'C', '3', '2', 'r', 'i', '8', 0,
  /* 7378 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 7387 */ 'A', 'N', 'D', '3', '2', 'r', 'i', '8', 0,
  /* 7396 */ 'C', 'M', 'P', '3', '2', 'r', 'i', '8', 0,
  /* 7405 */ 'X', 'O', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 7414 */ 'B', 'T', 'R', '3', '2', 'r', 'i', '8', 0,
  /* 7423 */ 'B', 'T', 'S', '3', '2', 'r', 'i', '8', 0,
  /* 7432 */ 'B', 'T', '3', '2', 'r', 'i', '8', 0,
  /* 7440 */ 'S', 'B', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 7449 */ 'S', 'U', 'B', '6', '4', 'r', 'i', '8', 0,
  /* 7458 */ 'A', 'D', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 7467 */ 'B', 'T', 'C', '6', '4', 'r', 'i', '8', 0,
  /* 7476 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 7485 */ 'A', 'N', 'D', '6', '4', 'r', 'i', '8', 0,
  /* 7494 */ 'C', 'M', 'P', '6', '4', 'r', 'i', '8', 0,
  /* 7503 */ 'X', 'O', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7512 */ 'B', 'T', 'R', '6', '4', 'r', 'i', '8', 0,
  /* 7521 */ 'B', 'T', 'S', '6', '4', 'r', 'i', '8', 0,
  /* 7530 */ 'B', 'T', '6', '4', 'r', 'i', '8', 0,
  /* 7538 */ 'S', 'B', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7547 */ 'S', 'U', 'B', '1', '6', 'r', 'i', '8', 0,
  /* 7556 */ 'A', 'D', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7565 */ 'B', 'T', 'C', '1', '6', 'r', 'i', '8', 0,
  /* 7574 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7583 */ 'A', 'N', 'D', '1', '6', 'r', 'i', '8', 0,
  /* 7592 */ 'C', 'M', 'P', '1', '6', 'r', 'i', '8', 0,
  /* 7601 */ 'X', 'O', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7610 */ 'B', 'T', 'R', '1', '6', 'r', 'i', '8', 0,
  /* 7619 */ 'B', 'T', 'S', '1', '6', 'r', 'i', '8', 0,
  /* 7628 */ 'B', 'T', '1', '6', 'r', 'i', '8', 0,
  /* 7636 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7647 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'i', '8', 0,
  /* 7658 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7669 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'i', '8', 0,
  /* 7680 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7691 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'i', '8', 0,
  /* 7702 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7713 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7724 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', '8', 0,
  /* 7735 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7746 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7757 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 'i', '8', 0,
  /* 7768 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7779 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7790 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', '8', 0,
  /* 7801 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'm', '8', 0,
  /* 7812 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'm', '8', 0,
  /* 7823 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7834 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'm', '8', 0,
  /* 7845 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'm', '8', 0,
  /* 7856 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '8', 0,
  /* 7867 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7878 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'm', '8', 0,
  /* 7889 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'm', '8', 0,
  /* 7906 */ 'M', 'O', 'V', '8', 'a', 'o', '8', 0,
  /* 7914 */ 'C', 'R', 'C', '3', '2', 'r', '3', '2', 'r', '8', 0,
  /* 7925 */ 'C', 'R', 'C', '3', '2', 'r', '6', '4', 'r', '8', 0,
  /* 7936 */ 'M', 'O', 'V', 'S', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7947 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', 'r', 'r', '8', 0,
  /* 7958 */ 'M', 'O', 'V', 'S', 'X', '6', '4', 'r', 'r', '8', 0,
  /* 7969 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '8', 0,
  /* 7980 */ 'M', 'O', 'V', 'S', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 7991 */ 'M', 'O', 'V', 'Z', 'X', '1', '6', 'r', 'r', '8', 0,
  /* 8002 */ 'M', 'O', 'V', 'Z', 'X', '3', '2', '_', 'N', 'O', 'R', 'E', 'X', 'r', 'r', '8', 0,
  /* 8019 */ 'A', 'A', 'A', 0,
  /* 8023 */ 'D', 'A', 'A', 0,
  /* 8027 */ 'W', '6', '4', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 8037 */ 'W', 'I', 'N', '_', 'A', 'L', 'L', 'O', 'C', 'A', 0,
  /* 8048 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'N', 'T', 'A', 0,
  /* 8060 */ 'U', 'D', '2', 'B', 0,
  /* 8065 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'B', 0,
  /* 8077 */ 'L', 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'B', 0,
  /* 8088 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'E', 'C', 'B', 0,
  /* 8098 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '3', '2', '_', 'D', 'B', 0,
  /* 8111 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 8123 */ 'A', 'D', 'D', '6', '4', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 8135 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '8', '_', 'D', 'B', 0,
  /* 8147 */ 'A', 'D', 'D', '3', '2', 'r', 'i', '_', 'D', 'B', 0,
  /* 8158 */ 'A', 'D', 'D', '1', '6', 'r', 'i', '_', 'D', 'B', 0,
  /* 8169 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'D', 'B', 0,
  /* 8180 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'D', 'B', 0,
  /* 8191 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'D', 'B', 0,
  /* 8202 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'F', 'B', 0,
  /* 8212 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'O', 'F', 'B', 0,
  /* 8222 */ 'L', 'O', 'D', 'S', 'B', 0,
  /* 8228 */ 'S', 'T', 'O', 'S', 'B', 0,
  /* 8234 */ 'O', 'U', 'T', 'S', 'B', 0,
  /* 8240 */ 'M', 'O', 'V', 'S', 'B', 0,
  /* 8246 */ 'C', 'L', 'A', 'C', 0,
  /* 8251 */ 'S', 'T', 'A', 'C', 0,
  /* 8256 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'B', 'C', 0,
  /* 8266 */ 'C', 'L', 'C', 0,
  /* 8270 */ 'C', 'M', 'C', 0,
  /* 8274 */ 'R', 'D', 'P', 'M', 'C', 0,
  /* 8280 */ 'V', 'M', 'F', 'U', 'N', 'C', 0,
  /* 8287 */ 'R', 'D', 'T', 'S', 'C', 0,
  /* 8293 */ 'S', 'T', 'C', 0,
  /* 8297 */ 'C', 'P', 'U', 'I', 'D', 0,
  /* 8303 */ 'C', 'L', 'D', 0,
  /* 8307 */ 'X', 'E', 'N', 'D', 0,
  /* 8312 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'E', 'N', 'D', 0,
  /* 8325 */ 'B', 'U', 'N', 'D', 'L', 'E', '_', 'A', 'L', 'I', 'G', 'N', '_', 'E', 'N', 'D', 0,
  /* 8342 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'D', 0,
  /* 8351 */ 'L', 'O', 'D', 'S', 'D', 0,
  /* 8357 */ 'S', 'T', 'O', 'S', 'D', 0,
  /* 8363 */ 'M', 'O', 'V', 'N', 'T', 'S', 'D', 0,
  /* 8371 */ 'O', 'U', 'T', 'S', 'D', 0,
  /* 8377 */ 'M', 'O', 'V', 'S', 'D', 0,
  /* 8383 */ 'S', 'T', 'D', 0,
  /* 8387 */ 'W', 'B', 'I', 'N', 'V', 'D', 0,
  /* 8394 */ 'C', 'W', 'D', 0,
  /* 8398 */ 'F', 'L', 'D', 'L', '2', 'E', 0,
  /* 8405 */ 'L', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8412 */ 'M', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8419 */ 'S', 'F', 'E', 'N', 'C', 'E', 0,
  /* 8426 */ 'R', 'E', 'G', '_', 'S', 'E', 'Q', 'U', 'E', 'N', 'C', 'E', 0,
  /* 8439 */ 'C', 'W', 'D', 'E', 0,
  /* 8444 */ 'F', 'F', 'R', 'E', 'E', 0,
  /* 8450 */ 'F', 'S', 'C', 'A', 'L', 'E', 0,
  /* 8457 */ 'B', 'U', 'N', 'D', 'L', 'E', 0,
  /* 8464 */ 'V', 'M', 'R', 'E', 'S', 'U', 'M', 'E', 0,
  /* 8473 */ 'L', 'O', 'O', 'P', 'N', 'E', 0,
  /* 8480 */ 'L', 'O', 'O', 'P', 'E', 0,
  /* 8486 */ 'C', 'D', 'Q', 'E', 0,
  /* 8491 */ 'X', 'S', 'T', 'O', 'R', 'E', 0,
  /* 8498 */ 'R', 'D', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8507 */ 'W', 'R', 'F', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8516 */ 'R', 'D', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8525 */ 'W', 'R', 'G', 'S', 'B', 'A', 'S', 'E', 0,
  /* 8534 */ 'P', 'A', 'U', 'S', 'E', 0,
  /* 8540 */ 'D', 'B', 'G', '_', 'V', 'A', 'L', 'U', 'E', 0,
  /* 8550 */ 'L', 'E', 'A', 'V', 'E', 0,
  /* 8556 */ 'F', 'X', 'S', 'A', 'V', 'E', 0,
  /* 8563 */ 'I', 'M', 'P', 'L', 'I', 'C', 'I', 'T', '_', 'D', 'E', 'F', 0,
  /* 8576 */ 'V', 'M', 'X', 'O', 'F', 'F', 0,
  /* 8583 */ 'L', 'A', 'H', 'F', 0,
  /* 8588 */ 'S', 'A', 'H', 'F', 0,
  /* 8593 */ 'C', 'M', 'O', 'V', 'N', 'B', '_', 'F', 0,
  /* 8602 */ 'C', 'M', 'O', 'V', 'B', '_', 'F', 0,
  /* 8610 */ 'C', 'M', 'O', 'V', 'N', 'B', 'E', '_', 'F', 0,
  /* 8620 */ 'C', 'M', 'O', 'V', 'B', 'E', '_', 'F', 0,
  /* 8629 */ 'C', 'M', 'O', 'V', 'N', 'E', '_', 'F', 0,
  /* 8638 */ 'C', 'M', 'O', 'V', 'E', '_', 'F', 0,
  /* 8646 */ 'X', 'C', 'H', '_', 'F', 0,
  /* 8652 */ 'S', 'I', 'N', '_', 'F', 0,
  /* 8658 */ 'C', 'M', 'O', 'V', 'N', 'P', '_', 'F', 0,
  /* 8667 */ 'C', 'M', 'O', 'V', 'P', '_', 'F', 0,
  /* 8675 */ 'A', 'B', 'S', '_', 'F', 0,
  /* 8681 */ 'C', 'H', 'S', '_', 'F', 0,
  /* 8687 */ 'C', 'O', 'S', '_', 'F', 0,
  /* 8693 */ 'S', 'Q', 'R', 'T', '_', 'F', 0,
  /* 8700 */ 'T', 'S', 'T', '_', 'F', 0,
  /* 8706 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8723 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'R', 'E', 'G', 0,
  /* 8740 */ 'E', 'X', 'T', 'R', 'A', 'C', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8755 */ 'I', 'N', 'S', 'E', 'R', 'T', '_', 'S', 'U', 'B', 'R', 'E', 'G', 0,
  /* 8769 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'R', 'E', 'G', 0,
  /* 8783 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'R', 'E', 'G', 0,
  /* 8797 */ 'S', 'U', 'B', 'R', 'E', 'G', '_', 'T', 'O', '_', 'R', 'E', 'G', 0,
  /* 8811 */ 'I', 'N', 'V', 'L', 'P', 'G', 0,
  /* 8818 */ 'V', 'M', 'L', 'A', 'U', 'N', 'C', 'H', 0,
  /* 8827 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 0,
  /* 8836 */ 'C', 'L', 'F', 'L', 'U', 'S', 'H', 0,
  /* 8844 */ 'C', 'L', 'G', 'I', 0,
  /* 8849 */ 'S', 'T', 'G', 'I', 0,
  /* 8854 */ 'P', 'H', 'I', 0,
  /* 8858 */ 'C', 'L', 'I', 0,
  /* 8862 */ 'F', 'L', 'D', 'P', 'I', 0,
  /* 8868 */ 'E', 'X', 'T', 'R', 'Q', 'I', 0,
  /* 8875 */ 'I', 'N', 'S', 'E', 'R', 'T', 'Q', 'I', 0,
  /* 8884 */ 'L', 'R', 'E', 'T', 'I', 0,
  /* 8890 */ 'S', 'T', 'I', 0,
  /* 8894 */ 'B', 'U', 'N', 'D', 'L', 'E', '_', 'U', 'N', 'L', 'O', 'C', 'K', 0,
  /* 8908 */ 'B', 'U', 'N', 'D', 'L', 'E', '_', 'L', 'O', 'C', 'K', 0,
  /* 8920 */ 'F', 'p', 'P', 'O', 'P', '_', 'R', 'E', 'T', 'V', 'A', 'L', 0,
  /* 8933 */ 'R', 'C', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8942 */ 'S', 'H', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8951 */ 'R', 'O', 'L', '3', '2', 'm', 'C', 'L', 0,
  /* 8960 */ 'S', 'A', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8969 */ 'R', 'C', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8978 */ 'S', 'H', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8987 */ 'R', 'O', 'R', '3', '2', 'm', 'C', 'L', 0,
  /* 8996 */ 'R', 'C', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 9005 */ 'S', 'H', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 9014 */ 'R', 'O', 'L', '6', '4', 'm', 'C', 'L', 0,
  /* 9023 */ 'S', 'A', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 9032 */ 'R', 'C', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 9041 */ 'S', 'H', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 9050 */ 'R', 'O', 'R', '6', '4', 'm', 'C', 'L', 0,
  /* 9059 */ 'R', 'C', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 9068 */ 'S', 'H', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 9077 */ 'R', 'O', 'L', '1', '6', 'm', 'C', 'L', 0,
  /* 9086 */ 'S', 'A', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 9095 */ 'R', 'C', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 9104 */ 'S', 'H', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 9113 */ 'R', 'O', 'R', '1', '6', 'm', 'C', 'L', 0,
  /* 9122 */ 'R', 'C', 'L', '8', 'm', 'C', 'L', 0,
  /* 9130 */ 'S', 'H', 'L', '8', 'm', 'C', 'L', 0,
  /* 9138 */ 'R', 'O', 'L', '8', 'm', 'C', 'L', 0,
  /* 9146 */ 'S', 'A', 'R', '8', 'm', 'C', 'L', 0,
  /* 9154 */ 'R', 'C', 'R', '8', 'm', 'C', 'L', 0,
  /* 9162 */ 'S', 'H', 'R', '8', 'm', 'C', 'L', 0,
  /* 9170 */ 'R', 'O', 'R', '8', 'm', 'C', 'L', 0,
  /* 9178 */ 'R', 'C', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 9187 */ 'S', 'H', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 9196 */ 'R', 'O', 'L', '3', '2', 'r', 'C', 'L', 0,
  /* 9205 */ 'S', 'A', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 9214 */ 'R', 'C', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 9223 */ 'S', 'H', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 9232 */ 'R', 'O', 'R', '3', '2', 'r', 'C', 'L', 0,
  /* 9241 */ 'R', 'C', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 9250 */ 'S', 'H', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 9259 */ 'R', 'O', 'L', '6', '4', 'r', 'C', 'L', 0,
  /* 9268 */ 'S', 'A', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 9277 */ 'R', 'C', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 9286 */ 'S', 'H', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 9295 */ 'R', 'O', 'R', '6', '4', 'r', 'C', 'L', 0,
  /* 9304 */ 'R', 'C', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 9313 */ 'S', 'H', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 9322 */ 'R', 'O', 'L', '1', '6', 'r', 'C', 'L', 0,
  /* 9331 */ 'S', 'A', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 9340 */ 'R', 'C', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 9349 */ 'S', 'H', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 9358 */ 'R', 'O', 'R', '1', '6', 'r', 'C', 'L', 0,
  /* 9367 */ 'R', 'C', 'L', '8', 'r', 'C', 'L', 0,
  /* 9375 */ 'S', 'H', 'L', '8', 'r', 'C', 'L', 0,
  /* 9383 */ 'R', 'O', 'L', '8', 'r', 'C', 'L', 0,
  /* 9391 */ 'S', 'A', 'R', '8', 'r', 'C', 'L', 0,
  /* 9399 */ 'R', 'C', 'R', '8', 'r', 'C', 'L', 0,
  /* 9407 */ 'S', 'H', 'R', '8', 'r', 'C', 'L', 0,
  /* 9415 */ 'R', 'O', 'R', '8', 'r', 'C', 'L', 0,
  /* 9423 */ 'S', 'H', 'L', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 9434 */ 'S', 'H', 'R', 'D', '3', '2', 'm', 'r', 'C', 'L', 0,
  /* 9445 */ 'S', 'H', 'L', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 9456 */ 'S', 'H', 'R', 'D', '6', '4', 'm', 'r', 'C', 'L', 0,
  /* 9467 */ 'S', 'H', 'L', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 9478 */ 'S', 'H', 'R', 'D', '1', '6', 'm', 'r', 'C', 'L', 0,
  /* 9489 */ 'S', 'H', 'L', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 9500 */ 'S', 'H', 'R', 'D', '3', '2', 'r', 'r', 'C', 'L', 0,
  /* 9511 */ 'S', 'H', 'L', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 9522 */ 'S', 'H', 'R', 'D', '6', '4', 'r', 'r', 'C', 'L', 0,
  /* 9533 */ 'S', 'H', 'L', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 9544 */ 'S', 'H', 'R', 'D', '1', '6', 'r', 'r', 'C', 'L', 0,
  /* 9555 */ 'G', 'C', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9564 */ 'P', 'R', 'O', 'L', 'O', 'G', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9577 */ 'E', 'H', '_', 'L', 'A', 'B', 'E', 'L', 0,
  /* 9586 */ 'V', 'M', 'M', 'C', 'A', 'L', 'L', 0,
  /* 9594 */ 'V', 'M', 'C', 'A', 'L', 'L', 0,
  /* 9601 */ 'S', 'Y', 'S', 'C', 'A', 'L', 'L', 0,
  /* 9609 */ 'V', 'Z', 'E', 'R', 'O', 'A', 'L', 'L', 0,
  /* 9618 */ 'K', 'I', 'L', 'L', 0,
  /* 9623 */ 'N', 'O', 'O', 'P', 'L', 0,
  /* 9629 */ 'L', 'R', 'E', 'T', 'L', 0,
  /* 9635 */ 'M', 'O', 'N', 'T', 'M', 'U', 'L', 0,
  /* 9643 */ 'F', 'X', 'A', 'M', 0,
  /* 9648 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9665 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'M', 'E', 'M', 0,
  /* 9682 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'M', 'E', 'M', 0,
  /* 9696 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'M', 'E', 'M', 0,
  /* 9710 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9731 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9752 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '3', '2', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9773 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9794 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9815 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '6', '4', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9836 */ 'F', 'P', '8', '0', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9857 */ 'F', 'P', '3', '2', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9878 */ 'F', 'P', '6', '4', '_', 'T', 'O', '_', 'I', 'N', 'T', '1', '6', '_', 'I', 'N', '_', 'M', 'E', 'M', 0,
  /* 9899 */ 'F', 'P', 'R', 'E', 'M', 0,
  /* 9905 */ 'I', 'N', 'L', 'I', 'N', 'E', 'A', 'S', 'M', 0,
  /* 9915 */ 'R', 'S', 'M', 0,
  /* 9919 */ 'F', 'P', 'A', 'T', 'A', 'N', 0,
  /* 9926 */ 'F', 'P', 'T', 'A', 'N', 0,
  /* 9932 */ 'X', 'B', 'E', 'G', 'I', 'N', 0,
  /* 9939 */ 'V', 'M', 'X', 'O', 'N', 0,
  /* 9945 */ 'E', 'H', '_', 'R', 'E', 'T', 'U', 'R', 'N', 0,
  /* 9955 */ 'C', 'Q', 'O', 0,
  /* 9959 */ 'I', 'N', 'T', 'O', 0,
  /* 9964 */ 'T', 'R', 'A', 'P', 0,
  /* 9969 */ 'R', 'D', 'T', 'S', 'C', 'P', 0,
  /* 9976 */ 'F', 'N', 'O', 'P', 0,
  /* 9981 */ 'L', 'O', 'O', 'P', 0,
  /* 9986 */ 'N', 'O', 'O', 'P', 0,
  /* 9991 */ 'F', 'C', 'O', 'M', 'P', 'P', 0,
  /* 9998 */ 'F', 'D', 'E', 'C', 'S', 'T', 'P', 0,
  /* 10006 */ 'F', 'I', 'N', 'C', 'S', 'T', 'P', 0,
  /* 10014 */ 'C', 'D', 'Q', 0,
  /* 10018 */ 'E', 'X', 'T', 'R', 'Q', 0,
  /* 10024 */ 'L', 'O', 'D', 'S', 'Q', 0,
  /* 10030 */ 'S', 'T', 'O', 'S', 'Q', 0,
  /* 10036 */ 'M', 'O', 'V', 'S', 'Q', 0,
  /* 10042 */ 'L', 'R', 'E', 'T', 'Q', 0,
  /* 10048 */ 'I', 'N', 'S', 'E', 'R', 'T', 'Q', 0,
  /* 10056 */ 'M', 'M', 'X', '_', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 0,
  /* 10069 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '1', '6', '_', 'Q', 0,
  /* 10083 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '1', '6', '_', 'Q', 0,
  /* 10097 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'm', '8', '_', 'Q', 0,
  /* 10110 */ 'M', 'O', 'V', 'Z', 'X', '6', '4', 'r', 'r', '8', '_', 'Q', 0,
  /* 10123 */ 'V', 'Z', 'E', 'R', 'O', 'U', 'P', 'P', 'E', 'R', 0,
  /* 10134 */ 'S', 'Y', 'S', 'E', 'N', 'T', 'E', 'R', 0,
  /* 10143 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 0,
  /* 10151 */ 'F', 'X', 'R', 'S', 'T', 'O', 'R', 0,
  /* 10159 */ 'V', 'L', 'D', 'M', 'X', 'C', 'S', 'R', 0,
  /* 10168 */ 'V', 'S', 'T', 'M', 'X', 'C', 'S', 'R', 0,
  /* 10177 */ 'R', 'D', 'M', 'S', 'R', 0,
  /* 10183 */ 'W', 'R', 'M', 'S', 'R', 0,
  /* 10189 */ 'X', 'C', 'R', 'Y', 'P', 'T', 'C', 'T', 'R', 0,
  /* 10199 */ 'A', 'A', 'S', 0,
  /* 10203 */ 'D', 'A', 'S', 0,
  /* 10207 */ 'A', 'V', 'X', '2', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 10223 */ 'V', '_', 'S', 'E', 'T', 'A', 'L', 'L', 'O', 'N', 'E', 'S', 0,
  /* 10236 */ 'V', 'A', 'S', 'T', 'A', 'R', 'T', '_', 'S', 'A', 'V', 'E', '_', 'X', 'M', 'M', '_', 'R', 'E', 'G', 'S', 0,
  /* 10258 */ 'S', 'W', 'A', 'P', 'G', 'S', 0,
  /* 10265 */ 'T', 'H', 'R', 'E', 'A', 'D', '_', 'P', 'O', 'I', 'N', 'T', 'E', 'R', '_', 'F', 'R', 'O', 'M', '_', 'G', 'S', 0,
  /* 10288 */ 'F', 'E', 'M', 'M', 'S', 0,
  /* 10294 */ 'M', 'M', 'X', '_', 'E', 'M', 'M', 'S', 0,
  /* 10303 */ 'F', 'S', 'I', 'N', 'C', 'O', 'S', 0,
  /* 10311 */ 'F', 's', 'F', 'L', 'D', '0', 'S', 'S', 0,
  /* 10320 */ 'C', 'O', 'P', 'Y', '_', 'T', 'O', '_', 'R', 'E', 'G', 'C', 'L', 'A', 'S', 'S', 0,
  /* 10337 */ 'M', 'O', 'V', 'N', 'T', 'S', 'S', 0,
  /* 10345 */ 'C', 'L', 'T', 'S', 0,
  /* 10350 */ 'F', 'L', 'D', 'L', '2', 'T', 0,
  /* 10357 */ 'X', 'L', 'A', 'T', 0,
  /* 10362 */ 'F', 'X', 'T', 'R', 'A', 'C', 'T', 0,
  /* 10370 */ 'S', 'Y', 'S', 'R', 'E', 'T', 0,
  /* 10377 */ 'M', 'O', 'R', 'E', 'S', 'T', 'A', 'C', 'K', '_', 'R', 'E', 'T', 0,
  /* 10391 */ 'W', 'A', 'I', 'T', 0,
  /* 10396 */ 'S', 'K', 'I', 'N', 'I', 'T', 0,
  /* 10403 */ 'F', 'N', 'I', 'N', 'I', 'T', 0,
  /* 10410 */ 'S', 'Y', 'S', 'E', 'X', 'I', 'T', 0,
  /* 10418 */ 'H', 'L', 'T', 0,
  /* 10422 */ 'F', 'R', 'N', 'D', 'I', 'N', 'T', 0,
  /* 10430 */ 'X', 'S', 'A', 'V', 'E', 'O', 'P', 'T', 0,
  /* 10439 */ 'L', 'I', 'F', 'E', 'T', 'I', 'M', 'E', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10454 */ 'B', 'U', 'N', 'D', 'L', 'E', '_', 'A', 'L', 'I', 'G', 'N', '_', 'S', 'T', 'A', 'R', 'T', 0,
  /* 10473 */ 'X', 'A', 'B', 'O', 'R', 'T', 0,
  /* 10480 */ 'X', 'T', 'E', 'S', 'T', 0,
  /* 10486 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Q', 'U', 0,
  /* 10498 */ 'X', 'G', 'E', 'T', 'B', 'V', 0,
  /* 10505 */ 'X', 'S', 'E', 'T', 'B', 'V', 0,
  /* 10512 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10532 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10549 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10567 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10587 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10604 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10622 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10642 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10659 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10677 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10697 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10714 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', '_', 'R', 'E', 'V', 0,
  /* 10732 */ 'S', 'B', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10744 */ 'S', 'U', 'B', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10756 */ 'A', 'D', 'C', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10768 */ 'A', 'D', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10780 */ 'A', 'N', 'D', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10792 */ 'C', 'M', 'P', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10804 */ 'X', 'O', 'R', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10816 */ 'M', 'O', 'V', '3', '2', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10828 */ 'S', 'B', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10840 */ 'S', 'U', 'B', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10852 */ 'A', 'D', 'C', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10864 */ 'A', 'D', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10876 */ 'A', 'N', 'D', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10888 */ 'C', 'M', 'P', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10900 */ 'X', 'O', 'R', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10912 */ 'M', 'O', 'V', '6', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10924 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10943 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10959 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10976 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 10995 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11011 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11028 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11044 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11061 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11077 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11094 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11113 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11129 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11146 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11165 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11181 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11198 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11214 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11231 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11247 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11264 */ 'S', 'B', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11276 */ 'S', 'U', 'B', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11288 */ 'A', 'D', 'C', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11300 */ 'A', 'D', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11312 */ 'A', 'N', 'D', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11324 */ 'C', 'M', 'P', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11336 */ 'X', 'O', 'R', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11348 */ 'M', 'O', 'V', '1', '6', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11360 */ 'S', 'B', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11371 */ 'S', 'U', 'B', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11382 */ 'A', 'D', 'C', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11393 */ 'A', 'D', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11404 */ 'A', 'N', 'D', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11415 */ 'C', 'M', 'P', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11426 */ 'X', 'O', 'R', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11437 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11448 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11462 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11476 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11490 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11503 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11517 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11531 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11544 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11558 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11573 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11588 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11603 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11618 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11633 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', '_', 'R', 'E', 'V', 0,
  /* 11648 */ 'C', 'B', 'W', 0,
  /* 11652 */ 'P', 'R', 'E', 'F', 'E', 'T', 'C', 'H', 'W', 0,
  /* 11662 */ 'L', 'R', 'E', 'T', 'I', 'W', 0,
  /* 11669 */ 'N', 'O', 'O', 'P', 'W', 0,
  /* 11675 */ 'L', 'O', 'D', 'S', 'W', 0,
  /* 11681 */ 'S', 'T', 'O', 'S', 'W', 0,
  /* 11687 */ 'O', 'U', 'T', 'S', 'W', 0,
  /* 11693 */ 'M', 'O', 'V', 'S', 'W', 0,
  /* 11699 */ 'L', 'R', 'E', 'T', 'W', 0,
  /* 11705 */ 'F', 'Y', 'L', '2', 'X', 0,
  /* 11711 */ 'F', 'N', 'C', 'L', 'E', 'X', 0,
  /* 11718 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11732 */ 'M', 'O', 'V', '8', 'r', 'm', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11745 */ 'M', 'O', 'V', '8', 'm', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11758 */ 'M', 'O', 'V', '8', 'r', 'r', '_', 'N', 'O', 'R', 'E', 'X', 0,
  /* 11771 */ 'R', 'E', 'X', '6', '4', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11784 */ 'D', 'A', 'T', 'A', '1', '6', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11798 */ 'R', 'E', 'P', 'N', 'E', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11811 */ 'L', 'O', 'C', 'K', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11823 */ 'R', 'E', 'P', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11834 */ 'C', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11844 */ 'D', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11854 */ 'E', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11864 */ 'F', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11874 */ 'G', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11884 */ 'S', 'S', '_', 'P', 'R', 'E', 'F', 'I', 'X', 0,
  /* 11894 */ 'C', 'O', 'P', 'Y', 0,
  /* 11899 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11917 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11932 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11948 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11966 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11981 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 11997 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12015 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12030 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12046 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12064 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12079 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 'Y', 0,
  /* 12095 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12113 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12128 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12144 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12162 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12177 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12193 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12211 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12226 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12242 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12260 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12275 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 'Y', 0,
  /* 12291 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12309 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12324 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12340 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12358 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12373 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12389 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12407 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12422 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12438 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12456 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12471 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 'Y', 0,
  /* 12487 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12503 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12516 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12530 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12546 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12559 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 'Y', 0,
  /* 12573 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12589 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12602 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12616 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12632 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12645 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 'Y', 0,
  /* 12659 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 12673 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 'Y', 0,
  /* 12684 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 12698 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 'Y', 0,
  /* 12709 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 'Y', 0,
  /* 12719 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12737 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12752 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12768 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12786 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12801 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12817 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12835 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12850 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12866 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12884 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12899 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 'Y', 0,
  /* 12915 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12933 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12948 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12964 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12982 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 12997 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13013 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13031 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13046 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13062 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13080 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13095 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 'Y', 0,
  /* 13111 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13129 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13144 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13160 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13178 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13193 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13209 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13227 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13242 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13258 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13276 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13291 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 'Y', 0,
  /* 13307 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13323 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13336 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13350 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13366 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13379 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 'Y', 0,
  /* 13393 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13409 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13422 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13436 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13452 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13465 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 'Y', 0,
  /* 13479 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 'Y', 0,
  /* 13493 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 'Y', 0,
  /* 13507 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 'Y', 0,
  /* 13517 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13533 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13546 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13560 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13576 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13589 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 'Y', 0,
  /* 13603 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13619 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13632 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13646 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13662 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13675 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 'Y', 0,
  /* 13689 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 13703 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 'Y', 0,
  /* 13714 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13728 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 'Y', 0,
  /* 13739 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 'Y', 0,
  /* 13749 */ 'J', 'C', 'X', 'Z', 0,
  /* 13754 */ 'J', 'R', 'C', 'X', 'Z', 0,
  /* 13760 */ 'M', 'O', 'V', '3', '2', 'o', '3', '2', 'a', 0,
  /* 13770 */ 'M', 'O', 'V', '1', '6', 'o', '1', '6', 'a', 0,
  /* 13780 */ 'M', 'O', 'V', '8', 'o', '8', 'a', 0,
  /* 13788 */ 'M', 'O', 'V', '3', '2', 'r', 'c', 0,
  /* 13796 */ 'M', 'O', 'V', '6', '4', 'r', 'c', 0,
  /* 13804 */ 'N', 'A', 'C', 'L', '_', 'C', 'A', 'L', 'L', '3', '2', 'd', 0,
  /* 13817 */ 'N', 'A', 'C', 'L', '_', 'C', 'A', 'L', 'L', '6', '4', 'd', 0,
  /* 13830 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'd', 0,
  /* 13839 */ 'O', 'R', '3', '2', 'm', 'r', 'L', 'o', 'c', 'k', 'e', 'd', 0,
  /* 13852 */ 'M', 'O', 'V', '3', '2', 'r', 'd', 0,
  /* 13860 */ 'M', 'O', 'V', '6', '4', 'r', 'd', 0,
  /* 13868 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'i', 0,
  /* 13879 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'i', 0,
  /* 13889 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', '6', '4', 'i', 0,
  /* 13902 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'i', 0,
  /* 13913 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'i', 0,
  /* 13923 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'd', 'i', 0,
  /* 13934 */ 'S', 'B', 'B', '3', '2', 'm', 'i', 0,
  /* 13942 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'i', 0,
  /* 13955 */ 'A', 'D', 'C', '3', '2', 'm', 'i', 0,
  /* 13963 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'i', 0,
  /* 13976 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'i', 0,
  /* 13989 */ 'R', 'C', 'L', '3', '2', 'm', 'i', 0,
  /* 13997 */ 'S', 'H', 'L', '3', '2', 'm', 'i', 0,
  /* 14005 */ 'R', 'O', 'L', '3', '2', 'm', 'i', 0,
  /* 14013 */ 'C', 'M', 'P', '3', '2', 'm', 'i', 0,
  /* 14021 */ 'S', 'A', 'R', '3', '2', 'm', 'i', 0,
  /* 14029 */ 'R', 'C', 'R', '3', '2', 'm', 'i', 0,
  /* 14037 */ 'S', 'H', 'R', '3', '2', 'm', 'i', 0,
  /* 14045 */ 'R', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 14053 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 14066 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'i', 0,
  /* 14078 */ 'T', 'E', 'S', 'T', '3', '2', 'm', 'i', 0,
  /* 14087 */ 'M', 'O', 'V', '3', '2', 'm', 'i', 0,
  /* 14095 */ 'R', 'O', 'R', 'X', '3', '2', 'm', 'i', 0,
  /* 14104 */ 'R', 'C', 'L', '6', '4', 'm', 'i', 0,
  /* 14112 */ 'S', 'H', 'L', '6', '4', 'm', 'i', 0,
  /* 14120 */ 'R', 'O', 'L', '6', '4', 'm', 'i', 0,
  /* 14128 */ 'S', 'A', 'R', '6', '4', 'm', 'i', 0,
  /* 14136 */ 'R', 'C', 'R', '6', '4', 'm', 'i', 0,
  /* 14144 */ 'S', 'H', 'R', '6', '4', 'm', 'i', 0,
  /* 14152 */ 'R', 'O', 'R', '6', '4', 'm', 'i', 0,
  /* 14160 */ 'R', 'O', 'R', 'X', '6', '4', 'm', 'i', 0,
  /* 14169 */ 'S', 'B', 'B', '1', '6', 'm', 'i', 0,
  /* 14177 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'i', 0,
  /* 14190 */ 'A', 'D', 'C', '1', '6', 'm', 'i', 0,
  /* 14198 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'i', 0,
  /* 14211 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'i', 0,
  /* 14224 */ 'R', 'C', 'L', '1', '6', 'm', 'i', 0,
  /* 14232 */ 'S', 'H', 'L', '1', '6', 'm', 'i', 0,
  /* 14240 */ 'R', 'O', 'L', '1', '6', 'm', 'i', 0,
  /* 14248 */ 'C', 'M', 'P', '1', '6', 'm', 'i', 0,
  /* 14256 */ 'S', 'A', 'R', '1', '6', 'm', 'i', 0,
  /* 14264 */ 'R', 'C', 'R', '1', '6', 'm', 'i', 0,
  /* 14272 */ 'S', 'H', 'R', '1', '6', 'm', 'i', 0,
  /* 14280 */ 'R', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 14288 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 14301 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'i', 0,
  /* 14313 */ 'T', 'E', 'S', 'T', '1', '6', 'm', 'i', 0,
  /* 14322 */ 'M', 'O', 'V', '1', '6', 'm', 'i', 0,
  /* 14330 */ 'S', 'B', 'B', '8', 'm', 'i', 0,
  /* 14337 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'i', 0,
  /* 14349 */ 'A', 'D', 'C', '8', 'm', 'i', 0,
  /* 14356 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'i', 0,
  /* 14368 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'i', 0,
  /* 14380 */ 'R', 'C', 'L', '8', 'm', 'i', 0,
  /* 14387 */ 'S', 'H', 'L', '8', 'm', 'i', 0,
  /* 14394 */ 'R', 'O', 'L', '8', 'm', 'i', 0,
  /* 14401 */ 'C', 'M', 'P', '8', 'm', 'i', 0,
  /* 14408 */ 'S', 'A', 'R', '8', 'm', 'i', 0,
  /* 14415 */ 'R', 'C', 'R', '8', 'm', 'i', 0,
  /* 14422 */ 'S', 'H', 'R', '8', 'm', 'i', 0,
  /* 14429 */ 'R', 'O', 'R', '8', 'm', 'i', 0,
  /* 14436 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'i', 0,
  /* 14448 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'i', 0,
  /* 14459 */ 'T', 'E', 'S', 'T', '8', 'm', 'i', 0,
  /* 14467 */ 'M', 'O', 'V', '8', 'm', 'i', 0,
  /* 14474 */ 'V', 'P', 'C', 'O', 'M', 'B', 'm', 'i', 0,
  /* 14483 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'i', 0,
  /* 14492 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'm', 'i', 0,
  /* 14502 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'm', 'i', 0,
  /* 14512 */ 'V', 'P', 'C', 'O', 'M', 'D', 'm', 'i', 0,
  /* 14521 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'm', 'i', 0,
  /* 14533 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'i', 0,
  /* 14542 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'm', 'i', 0,
  /* 14552 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'm', 'i', 0,
  /* 14563 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'm', 'i', 0,
  /* 14572 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'i', 0,
  /* 14581 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'm', 'i', 0,
  /* 14591 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'm', 'i', 0,
  /* 14603 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'm', 'i', 0,
  /* 14616 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'm', 'i', 0,
  /* 14627 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'm', 'i', 0,
  /* 14638 */ 'V', 'P', 'C', 'O', 'M', 'W', 'm', 'i', 0,
  /* 14647 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'i', 0,
  /* 14656 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'm', 'i', 0,
  /* 14666 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'm', 'i', 0,
  /* 14677 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 14690 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'm', 'i', 0,
  /* 14701 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'm', 'i', 0,
  /* 14711 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'm', 'i', 0,
  /* 14724 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'm', 'i', 0,
  /* 14736 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'm', 'i', 0,
  /* 14748 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 'i', 0,
  /* 14758 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 'i', 0,
  /* 14768 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'm', 'i', 0,
  /* 14780 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14792 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14803 */ 'V', 'D', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14812 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', 0,
  /* 14822 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14834 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14845 */ 'V', 'D', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14854 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', 0,
  /* 14864 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 'i', 0,
  /* 14876 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'm', 'i', 0,
  /* 14888 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'm', 'i', 0,
  /* 14899 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14912 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14925 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14937 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', 0,
  /* 14948 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14961 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14973 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14983 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', 0,
  /* 14994 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 15007 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'm', 'i', 0,
  /* 15020 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'm', 'i', 0,
  /* 15035 */ 'S', 'B', 'B', '3', '2', 'r', 'i', 0,
  /* 15043 */ 'S', 'U', 'B', '3', '2', 'r', 'i', 0,
  /* 15051 */ 'A', 'D', 'C', '3', '2', 'r', 'i', 0,
  /* 15059 */ 'A', 'D', 'D', '3', '2', 'r', 'i', 0,
  /* 15067 */ 'A', 'N', 'D', '3', '2', 'r', 'i', 0,
  /* 15075 */ 'R', 'C', 'L', '3', '2', 'r', 'i', 0,
  /* 15083 */ 'S', 'H', 'L', '3', '2', 'r', 'i', 0,
  /* 15091 */ 'R', 'O', 'L', '3', '2', 'r', 'i', 0,
  /* 15099 */ 'I', 'N', '3', '2', 'r', 'i', 0,
  /* 15106 */ 'C', 'M', 'P', '3', '2', 'r', 'i', 0,
  /* 15114 */ 'S', 'A', 'R', '3', '2', 'r', 'i', 0,
  /* 15122 */ 'R', 'C', 'R', '3', '2', 'r', 'i', 0,
  /* 15130 */ 'S', 'H', 'R', '3', '2', 'r', 'i', 0,
  /* 15138 */ 'R', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 15146 */ 'X', 'O', 'R', '3', '2', 'r', 'i', 0,
  /* 15154 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'i', 0,
  /* 15163 */ 'M', 'O', 'V', '3', '2', 'r', 'i', 0,
  /* 15171 */ 'R', 'O', 'R', 'X', '3', '2', 'r', 'i', 0,
  /* 15180 */ 'R', 'C', 'L', '6', '4', 'r', 'i', 0,
  /* 15188 */ 'S', 'H', 'L', '6', '4', 'r', 'i', 0,
  /* 15196 */ 'R', 'O', 'L', '6', '4', 'r', 'i', 0,
  /* 15204 */ 'S', 'A', 'R', '6', '4', 'r', 'i', 0,
  /* 15212 */ 'R', 'C', 'R', '6', '4', 'r', 'i', 0,
  /* 15220 */ 'S', 'H', 'R', '6', '4', 'r', 'i', 0,
  /* 15228 */ 'R', 'O', 'R', '6', '4', 'r', 'i', 0,
  /* 15236 */ 'M', 'O', 'V', '6', '4', 'r', 'i', 0,
  /* 15244 */ 'R', 'O', 'R', 'X', '6', '4', 'r', 'i', 0,
  /* 15253 */ 'S', 'B', 'B', '1', '6', 'r', 'i', 0,
  /* 15261 */ 'S', 'U', 'B', '1', '6', 'r', 'i', 0,
  /* 15269 */ 'A', 'D', 'C', '1', '6', 'r', 'i', 0,
  /* 15277 */ 'A', 'D', 'D', '1', '6', 'r', 'i', 0,
  /* 15285 */ 'A', 'N', 'D', '1', '6', 'r', 'i', 0,
  /* 15293 */ 'R', 'C', 'L', '1', '6', 'r', 'i', 0,
  /* 15301 */ 'S', 'H', 'L', '1', '6', 'r', 'i', 0,
  /* 15309 */ 'R', 'O', 'L', '1', '6', 'r', 'i', 0,
  /* 15317 */ 'I', 'N', '1', '6', 'r', 'i', 0,
  /* 15324 */ 'C', 'M', 'P', '1', '6', 'r', 'i', 0,
  /* 15332 */ 'S', 'A', 'R', '1', '6', 'r', 'i', 0,
  /* 15340 */ 'R', 'C', 'R', '1', '6', 'r', 'i', 0,
  /* 15348 */ 'S', 'H', 'R', '1', '6', 'r', 'i', 0,
  /* 15356 */ 'R', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 15364 */ 'X', 'O', 'R', '1', '6', 'r', 'i', 0,
  /* 15372 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'i', 0,
  /* 15381 */ 'M', 'O', 'V', '1', '6', 'r', 'i', 0,
  /* 15389 */ 'S', 'B', 'B', '8', 'r', 'i', 0,
  /* 15396 */ 'S', 'U', 'B', '8', 'r', 'i', 0,
  /* 15403 */ 'A', 'D', 'C', '8', 'r', 'i', 0,
  /* 15410 */ 'A', 'D', 'D', '8', 'r', 'i', 0,
  /* 15417 */ 'A', 'N', 'D', '8', 'r', 'i', 0,
  /* 15424 */ 'R', 'C', 'L', '8', 'r', 'i', 0,
  /* 15431 */ 'S', 'H', 'L', '8', 'r', 'i', 0,
  /* 15438 */ 'R', 'O', 'L', '8', 'r', 'i', 0,
  /* 15445 */ 'I', 'N', '8', 'r', 'i', 0,
  /* 15451 */ 'C', 'M', 'P', '8', 'r', 'i', 0,
  /* 15458 */ 'S', 'A', 'R', '8', 'r', 'i', 0,
  /* 15465 */ 'R', 'C', 'R', '8', 'r', 'i', 0,
  /* 15472 */ 'S', 'H', 'R', '8', 'r', 'i', 0,
  /* 15479 */ 'R', 'O', 'R', '8', 'r', 'i', 0,
  /* 15486 */ 'X', 'O', 'R', '8', 'r', 'i', 0,
  /* 15493 */ 'T', 'E', 'S', 'T', '8', 'r', 'i', 0,
  /* 15501 */ 'M', 'O', 'V', '8', 'r', 'i', 0,
  /* 15508 */ 'V', 'P', 'C', 'O', 'M', 'B', 'r', 'i', 0,
  /* 15517 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'i', 0,
  /* 15526 */ 'V', 'P', 'C', 'O', 'M', 'U', 'B', 'r', 'i', 0,
  /* 15536 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 15545 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'i', 0,
  /* 15557 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'r', 'i', 0,
  /* 15567 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 15576 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'i', 0,
  /* 15588 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 15597 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'i', 0,
  /* 15609 */ 'V', 'P', 'C', 'O', 'M', 'D', 'r', 'i', 0,
  /* 15618 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'i', 0,
  /* 15630 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'i', 0,
  /* 15639 */ 'V', 'P', 'C', 'O', 'M', 'U', 'D', 'r', 'i', 0,
  /* 15649 */ 'T', 'C', 'R', 'E', 'T', 'U', 'R', 'N', 'r', 'i', 0,
  /* 15660 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 15670 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'r', 'i', 0,
  /* 15680 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 15689 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'i', 0,
  /* 15701 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 15710 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'i', 0,
  /* 15722 */ 'V', 'P', 'C', 'O', 'M', 'Q', 'r', 'i', 0,
  /* 15731 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'i', 0,
  /* 15740 */ 'V', 'P', 'C', 'O', 'M', 'U', 'Q', 'r', 'i', 0,
  /* 15750 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'i', 0,
  /* 15762 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15771 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'i', 0,
  /* 15783 */ 'M', 'M', 'X', '_', 'P', 'S', 'H', 'U', 'F', 'W', 'r', 'i', 0,
  /* 15796 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'r', 'i', 0,
  /* 15807 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'r', 'i', 0,
  /* 15818 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15827 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'i', 0,
  /* 15839 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15848 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'i', 0,
  /* 15860 */ 'V', 'P', 'C', 'O', 'M', 'W', 'r', 'i', 0,
  /* 15869 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'r', 'i', 0,
  /* 15879 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'i', 0,
  /* 15888 */ 'V', 'P', 'C', 'O', 'M', 'U', 'W', 'r', 'i', 0,
  /* 15898 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'i', 0,
  /* 15908 */ 'V', 'P', 'S', 'H', 'U', 'F', 'D', 'Y', 'r', 'i', 0,
  /* 15919 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15929 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'i', 0,
  /* 15939 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15952 */ 'V', 'P', 'E', 'R', 'M', 'P', 'D', 'Y', 'r', 'i', 0,
  /* 15963 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15974 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Q', 'Y', 'r', 'i', 0,
  /* 15985 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 15995 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'i', 0,
  /* 16005 */ 'V', 'P', 'E', 'R', 'M', 'Q', 'Y', 'r', 'i', 0,
  /* 16015 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'i', 0,
  /* 16028 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'i', 0,
  /* 16038 */ 'V', 'P', 'S', 'H', 'U', 'F', 'H', 'W', 'Y', 'r', 'i', 0,
  /* 16050 */ 'V', 'P', 'S', 'H', 'U', 'F', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 16062 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 16072 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'i', 0,
  /* 16082 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 'i', 0,
  /* 16092 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 'i', 0,
  /* 16102 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'r', 'r', 'i', 0,
  /* 16114 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'r', 'r', 'i', 0,
  /* 16126 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'r', 'r', 'i', 0,
  /* 16137 */ 'V', 'D', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 16146 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', 0,
  /* 16156 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'r', 'r', 'i', 0,
  /* 16168 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'r', 'r', 'i', 0,
  /* 16179 */ 'V', 'D', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 16188 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', 0,
  /* 16198 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 'i', 0,
  /* 16210 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'r', 'r', 'i', 0,
  /* 16222 */ 'V', 'P', 'I', 'N', 'S', 'R', 'W', 'r', 'r', 'i', 0,
  /* 16233 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16246 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16259 */ 'V', 'S', 'H', 'U', 'F', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16271 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', 0,
  /* 16282 */ 'V', 'B', 'L', 'E', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16295 */ 'V', 'S', 'H', 'U', 'F', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16307 */ 'V', 'D', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16317 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', 0,
  /* 16328 */ 'V', 'M', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 16341 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'W', 'Y', 'r', 'r', 'i', 0,
  /* 16354 */ 'M', 'M', 'X', '_', 'P', 'I', 'N', 'S', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 16369 */ 'M', 'M', 'X', '_', 'P', 'E', 'X', 'T', 'R', 'W', 'i', 'r', 'r', 'i', 0,
  /* 16384 */ 'L', 'D', '_', 'F', '8', '0', 'm', 0,
  /* 16392 */ 'S', 'T', '_', 'F', 'P', '8', '0', 'm', 0,
  /* 16401 */ 'S', 'T', '_', 'F', 'p', 'P', '8', '0', 'm', 0,
  /* 16411 */ 'L', 'D', '_', 'F', 'p', '8', '0', 'm', 0,
  /* 16420 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16437 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16451 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16466 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16483 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16497 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16512 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16526 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16541 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16555 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'm', 0,
  /* 16570 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16587 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16601 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16616 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16633 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16647 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16662 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16676 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16691 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16705 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'm', 0,
  /* 16720 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16737 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16751 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16766 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16783 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16797 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16812 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16826 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16841 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16855 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'm', 0,
  /* 16870 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16887 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16901 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16916 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16933 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16947 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16962 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16976 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 16991 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 17005 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'm', 0,
  /* 17020 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '3', '2', 'm', 0,
  /* 17032 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '3', '2', 'm', 0,
  /* 17044 */ 'S', 'U', 'B', '_', 'F', '3', '2', 'm', 0,
  /* 17053 */ 'A', 'D', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 17062 */ 'I', 'L', 'D', '_', 'F', '3', '2', 'm', 0,
  /* 17071 */ 'M', 'U', 'L', '_', 'F', '3', '2', 'm', 0,
  /* 17080 */ 'S', 'U', 'B', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 17090 */ 'D', 'I', 'V', 'R', '_', 'F', '3', '2', 'm', 0,
  /* 17100 */ 'I', 'S', 'T', '_', 'F', '3', '2', 'm', 0,
  /* 17109 */ 'D', 'I', 'V', '_', 'F', '3', '2', 'm', 0,
  /* 17118 */ 'N', 'E', 'G', '3', '2', 'm', 0,
  /* 17125 */ 'S', 'U', 'B', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17135 */ 'A', 'D', 'D', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17145 */ 'M', 'U', 'L', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17155 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17166 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17177 */ 'D', 'I', 'V', '_', 'F', 'I', '3', '2', 'm', 0,
  /* 17187 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '3', '2', 'm', 0,
  /* 17198 */ 'I', 'M', 'U', 'L', '3', '2', 'm', 0,
  /* 17206 */ 'F', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 17214 */ 'F', 'I', 'C', 'O', 'M', '3', '2', 'm', 0,
  /* 17223 */ 'I', 'S', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 17233 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '3', '2', 'm', 0,
  /* 17244 */ 'F', 'A', 'R', 'J', 'M', 'P', '3', '2', 'm', 0,
  /* 17254 */ 'F', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 17263 */ 'F', 'I', 'C', 'O', 'M', 'P', '3', '2', 'm', 0,
  /* 17273 */ 'S', 'T', '_', 'F', 'p', 'P', '3', '2', 'm', 0,
  /* 17283 */ 'N', 'O', 'T', '3', '2', 'm', 0,
  /* 17290 */ 'I', 'D', 'I', 'V', '3', '2', 'm', 0,
  /* 17298 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 17308 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'm', 0,
  /* 17318 */ 'S', 'U', 'B', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17328 */ 'A', 'D', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17338 */ 'L', 'D', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17347 */ 'M', 'U', 'L', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17357 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17368 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17379 */ 'S', 'T', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17388 */ 'D', 'I', 'V', '_', 'F', 'p', '3', '2', 'm', 0,
  /* 17398 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17415 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17429 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17444 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17461 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17475 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17490 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17504 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17519 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17533 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', 0,
  /* 17548 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17565 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17579 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17594 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17611 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17625 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17640 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17654 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17669 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17683 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', 0,
  /* 17698 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '6', '4', 'm', 0,
  /* 17710 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '6', '4', 'm', 0,
  /* 17722 */ 'S', 'U', 'B', '_', 'F', '6', '4', 'm', 0,
  /* 17731 */ 'A', 'D', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 17740 */ 'I', 'L', 'D', '_', 'F', '6', '4', 'm', 0,
  /* 17749 */ 'M', 'U', 'L', '_', 'F', '6', '4', 'm', 0,
  /* 17758 */ 'S', 'U', 'B', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17768 */ 'D', 'I', 'V', 'R', '_', 'F', '6', '4', 'm', 0,
  /* 17778 */ 'S', 'T', '_', 'F', '6', '4', 'm', 0,
  /* 17786 */ 'D', 'I', 'V', '_', 'F', '6', '4', 'm', 0,
  /* 17795 */ 'N', 'E', 'G', '6', '4', 'm', 0,
  /* 17802 */ 'C', 'A', 'L', 'L', '6', '4', 'm', 0,
  /* 17810 */ 'I', 'M', 'U', 'L', '6', '4', 'm', 0,
  /* 17818 */ 'F', 'C', 'O', 'M', '6', '4', 'm', 0,
  /* 17826 */ 'I', 'S', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17836 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '6', '4', 'm', 0,
  /* 17847 */ 'J', 'M', 'P', '6', '4', 'm', 0,
  /* 17854 */ 'F', 'C', 'O', 'M', 'P', '6', '4', 'm', 0,
  /* 17863 */ 'S', 'T', '_', 'F', 'p', 'P', '6', '4', 'm', 0,
  /* 17873 */ 'S', 'L', 'D', 'T', '6', '4', 'm', 0,
  /* 17881 */ 'N', 'O', 'T', '6', '4', 'm', 0,
  /* 17888 */ 'I', 'D', 'I', 'V', '6', '4', 'm', 0,
  /* 17896 */ 'S', 'U', 'B', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17906 */ 'A', 'D', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17916 */ 'L', 'D', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17925 */ 'M', 'U', 'L', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17935 */ 'S', 'U', 'B', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17946 */ 'D', 'I', 'V', 'R', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17957 */ 'S', 'T', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17966 */ 'D', 'I', 'V', '_', 'F', 'p', '6', '4', 'm', 0,
  /* 17976 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '1', '6', 'm', 0,
  /* 17988 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '1', '6', 'm', 0,
  /* 18000 */ 'I', 'L', 'D', '_', 'F', '1', '6', 'm', 0,
  /* 18009 */ 'I', 'S', 'T', '_', 'F', '1', '6', 'm', 0,
  /* 18018 */ 'N', 'E', 'G', '1', '6', 'm', 0,
  /* 18025 */ 'S', 'U', 'B', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18035 */ 'A', 'D', 'D', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18045 */ 'M', 'U', 'L', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18055 */ 'S', 'U', 'B', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18066 */ 'D', 'I', 'V', 'R', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18077 */ 'D', 'I', 'V', '_', 'F', 'I', '1', '6', 'm', 0,
  /* 18087 */ 'F', 'A', 'R', 'C', 'A', 'L', 'L', '1', '6', 'm', 0,
  /* 18098 */ 'I', 'M', 'U', 'L', '1', '6', 'm', 0,
  /* 18106 */ 'F', 'I', 'C', 'O', 'M', '1', '6', 'm', 0,
  /* 18115 */ 'I', 'S', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 18125 */ 'I', 'S', 'T', 'T', '_', 'F', 'P', '1', '6', 'm', 0,
  /* 18136 */ 'F', 'A', 'R', 'J', 'M', 'P', '1', '6', 'm', 0,
  /* 18146 */ 'F', 'I', 'C', 'O', 'M', 'P', '1', '6', 'm', 0,
  /* 18156 */ 'L', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 18164 */ 'S', 'G', 'D', 'T', '1', '6', 'm', 0,
  /* 18172 */ 'L', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 18180 */ 'S', 'I', 'D', 'T', '1', '6', 'm', 0,
  /* 18188 */ 'L', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 18196 */ 'S', 'L', 'D', 'T', '1', '6', 'm', 0,
  /* 18204 */ 'N', 'O', 'T', '1', '6', 'm', 0,
  /* 18211 */ 'I', 'D', 'I', 'V', '1', '6', 'm', 0,
  /* 18219 */ 'F', 'L', 'D', 'C', 'W', '1', '6', 'm', 0,
  /* 18228 */ 'F', 'N', 'S', 'T', 'C', 'W', '1', '6', 'm', 0,
  /* 18238 */ 'L', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 18246 */ 'S', 'M', 'S', 'W', '1', '6', 'm', 0,
  /* 18254 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 18264 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'm', 0,
  /* 18274 */ 'L', 'O', 'C', 'K', '_', 'D', 'E', 'C', '8', 'm', 0,
  /* 18285 */ 'L', 'O', 'C', 'K', '_', 'I', 'N', 'C', '8', 'm', 0,
  /* 18296 */ 'N', 'E', 'G', '8', 'm', 0,
  /* 18302 */ 'I', 'M', 'U', 'L', '8', 'm', 0,
  /* 18309 */ 'N', 'O', 'T', '8', 'm', 0,
  /* 18315 */ 'I', 'D', 'I', 'V', '8', 'm', 0,
  /* 18322 */ 'S', 'E', 'T', 'A', 'm', 0,
  /* 18328 */ 'S', 'E', 'T', 'B', 'm', 0,
  /* 18334 */ 'F', 'B', 'L', 'D', 'm', 0,
  /* 18340 */ 'V', 'M', 'P', 'T', 'R', 'L', 'D', 'm', 0,
  /* 18349 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'm', 0,
  /* 18359 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'm', 0,
  /* 18368 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'm', 0,
  /* 18379 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'm', 0,
  /* 18389 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', 0,
  /* 18398 */ 'S', 'E', 'T', 'A', 'E', 'm', 0,
  /* 18405 */ 'S', 'E', 'T', 'B', 'E', 'm', 0,
  /* 18412 */ 'S', 'E', 'T', 'G', 'E', 'm', 0,
  /* 18419 */ 'S', 'E', 'T', 'L', 'E', 'm', 0,
  /* 18426 */ 'S', 'E', 'T', 'N', 'E', 'm', 0,
  /* 18433 */ 'S', 'E', 'T', 'E', 'm', 0,
  /* 18439 */ 'F', 'S', 'A', 'V', 'E', 'm', 0,
  /* 18446 */ 'S', 'E', 'T', 'G', 'm', 0,
  /* 18452 */ 'S', 'E', 'T', 'L', 'm', 0,
  /* 18458 */ 'S', 'E', 'T', 'N', 'O', 'm', 0,
  /* 18465 */ 'S', 'E', 'T', 'O', 'm', 0,
  /* 18471 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'B', 'P', 'm', 0,
  /* 18484 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'm', 0,
  /* 18493 */ 'S', 'E', 'T', 'N', 'P', 'm', 0,
  /* 18500 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'S', 'P', 'm', 0,
  /* 18513 */ 'S', 'E', 'T', 'P', 'm', 0,
  /* 18519 */ 'F', 'B', 'S', 'T', 'P', 'm', 0,
  /* 18526 */ 'V', 'M', 'C', 'L', 'E', 'A', 'R', 'm', 0,
  /* 18535 */ 'F', 'R', 'S', 'T', 'O', 'R', 'm', 0,
  /* 18543 */ 'V', 'E', 'R', 'R', 'm', 0,
  /* 18549 */ 'L', 'T', 'R', 'm', 0,
  /* 18554 */ 'S', 'T', 'R', 'm', 0,
  /* 18559 */ 'S', 'E', 'T', 'N', 'S', 'm', 0,
  /* 18566 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'm', 0,
  /* 18576 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', 0,
  /* 18584 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 18594 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', 0,
  /* 18603 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'm', 0,
  /* 18614 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'm', 0,
  /* 18624 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', 0,
  /* 18632 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 18642 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', 0,
  /* 18651 */ 'S', 'E', 'T', 'S', 'm', 0,
  /* 18657 */ 'L', 'G', 'D', 'T', 'm', 0,
  /* 18663 */ 'S', 'G', 'D', 'T', 'm', 0,
  /* 18669 */ 'L', 'I', 'D', 'T', 'm', 0,
  /* 18675 */ 'S', 'I', 'D', 'T', 'm', 0,
  /* 18681 */ 'V', 'M', 'P', 'T', 'R', 'S', 'T', 'm', 0,
  /* 18690 */ 'F', 'L', 'D', 'E', 'N', 'V', 'm', 0,
  /* 18698 */ 'F', 'S', 'T', 'E', 'N', 'V', 'm', 0,
  /* 18706 */ 'V', 'E', 'R', 'W', 'm', 0,
  /* 18712 */ 'F', 'N', 'S', 'T', 'S', 'W', 'm', 0,
  /* 18720 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'm', 0,
  /* 18730 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', 0,
  /* 18739 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 18750 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', 0,
  /* 18760 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'm', 0,
  /* 18770 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'm', 0,
  /* 18779 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'm', 0,
  /* 18789 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'm', 0,
  /* 18798 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'm', 0,
  /* 18808 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'm', 0,
  /* 18817 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'm', 0,
  /* 18828 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'm', 0,
  /* 18839 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'm', 0,
  /* 18849 */ 'S', 'B', 'B', '3', '2', 'r', 'm', 0,
  /* 18857 */ 'S', 'U', 'B', '3', '2', 'r', 'm', 0,
  /* 18865 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'm', 0,
  /* 18875 */ 'A', 'D', 'C', '3', '2', 'r', 'm', 0,
  /* 18883 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'm', 0,
  /* 18894 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'm', 0,
  /* 18903 */ 'A', 'N', 'D', '3', '2', 'r', 'm', 0,
  /* 18911 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'm', 0,
  /* 18922 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'm', 0,
  /* 18933 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'm', 0,
  /* 18944 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'm', 0,
  /* 18955 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'm', 0,
  /* 18966 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'm', 0,
  /* 18978 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'm', 0,
  /* 18988 */ 'B', 'S', 'F', '3', '2', 'r', 'm', 0,
  /* 18996 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'm', 0,
  /* 19008 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'm', 0,
  /* 19018 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'm', 0,
  /* 19027 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'm', 0,
  /* 19036 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'm', 0,
  /* 19047 */ 'L', 'S', 'L', '3', '2', 'r', 'm', 0,
  /* 19055 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'm', 0,
  /* 19064 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'm', 0,
  /* 19074 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'm', 0,
  /* 19083 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'm', 0,
  /* 19094 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'm', 0,
  /* 19104 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'm', 0,
  /* 19113 */ 'C', 'M', 'P', '3', '2', 'r', 'm', 0,
  /* 19121 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'm', 0,
  /* 19132 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'm', 0,
  /* 19142 */ 'L', 'A', 'R', '3', '2', 'r', 'm', 0,
  /* 19150 */ 'X', 'O', 'R', '3', '2', 'r', 'm', 0,
  /* 19158 */ 'B', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 19166 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'm', 0,
  /* 19175 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'm', 0,
  /* 19185 */ 'L', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 19193 */ 'B', 'O', 'U', 'N', 'D', 'S', '3', '2', 'r', 'm', 0,
  /* 19204 */ 'L', 'E', 'S', '3', '2', 'r', 'm', 0,
  /* 19212 */ 'L', 'F', 'S', '3', '2', 'r', 'm', 0,
  /* 19220 */ 'L', 'G', 'S', '3', '2', 'r', 'm', 0,
  /* 19228 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'm', 0,
  /* 19239 */ 'L', 'S', 'S', '3', '2', 'r', 'm', 0,
  /* 19247 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'm', 0,
  /* 19257 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19268 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19278 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'm', 0,
  /* 19288 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'm', 0,
  /* 19297 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'm', 0,
  /* 19306 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '3', '2', 'r', 'm', 0,
  /* 19322 */ 'A', 'D', 'C', 'X', '3', '2', 'r', 'm', 0,
  /* 19331 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 19340 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'm', 0,
  /* 19349 */ 'A', 'D', 'O', 'X', '3', '2', 'r', 'm', 0,
  /* 19358 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 19367 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'm', 0,
  /* 19376 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'm', 0,
  /* 19387 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'm', 0,
  /* 19397 */ 'S', 'B', 'B', '6', '4', 'r', 'm', 0,
  /* 19405 */ 'S', 'U', 'B', '6', '4', 'r', 'm', 0,
  /* 19413 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'm', 0,
  /* 19423 */ 'A', 'D', 'C', '6', '4', 'r', 'm', 0,
  /* 19431 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'm', 0,
  /* 19442 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'm', 0,
  /* 19451 */ 'A', 'N', 'D', '6', '4', 'r', 'm', 0,
  /* 19459 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 19477 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'm', 0,
  /* 19494 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'm', 0,
  /* 19507 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'm', 0,
  /* 19518 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'm', 0,
  /* 19529 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'm', 0,
  /* 19540 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'm', 0,
  /* 19551 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'm', 0,
  /* 19562 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'm', 0,
  /* 19574 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'm', 0,
  /* 19584 */ 'B', 'S', 'F', '6', '4', 'r', 'm', 0,
  /* 19592 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'm', 0,
  /* 19604 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'm', 0,
  /* 19614 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'm', 0,
  /* 19623 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19642 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19660 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19674 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19693 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19711 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19725 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'm', 0,
  /* 19734 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'm', 0,
  /* 19745 */ 'L', 'S', 'L', '6', '4', 'r', 'm', 0,
  /* 19753 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'm', 0,
  /* 19762 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'm', 0,
  /* 19772 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'm', 0,
  /* 19781 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'm', 0,
  /* 19792 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'm', 0,
  /* 19802 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'm', 0,
  /* 19811 */ 'C', 'M', 'P', '6', '4', 'r', 'm', 0,
  /* 19819 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'm', 0,
  /* 19830 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'm', 0,
  /* 19840 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'm', 0,
  /* 19853 */ 'L', 'A', 'R', '6', '4', 'r', 'm', 0,
  /* 19861 */ 'X', 'O', 'R', '6', '4', 'r', 'm', 0,
  /* 19869 */ 'B', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19877 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'm', 0,
  /* 19886 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'm', 0,
  /* 19896 */ 'L', 'F', 'S', '6', '4', 'r', 'm', 0,
  /* 19904 */ 'L', 'G', 'S', '6', '4', 'r', 'm', 0,
  /* 19912 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'm', 0,
  /* 19923 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19941 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19958 */ 'L', 'S', 'S', '6', '4', 'r', 'm', 0,
  /* 19966 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'm', 0,
  /* 19976 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19987 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 19997 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'm', 0,
  /* 20007 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'm', 0,
  /* 20016 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'm', 0,
  /* 20025 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '6', '4', 'r', 'm', 0,
  /* 20041 */ 'A', 'D', 'C', 'X', '6', '4', 'r', 'm', 0,
  /* 20050 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 20059 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'm', 0,
  /* 20068 */ 'A', 'D', 'O', 'X', '6', '4', 'r', 'm', 0,
  /* 20077 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 20086 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'm', 0,
  /* 20095 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20110 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20122 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'm', 0,
  /* 20135 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20150 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20162 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'm', 0,
  /* 20175 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 20187 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', 0,
  /* 20200 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 20212 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', 0,
  /* 20225 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20240 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20252 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'm', 0,
  /* 20265 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20280 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20292 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'm', 0,
  /* 20305 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 20317 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', 0,
  /* 20330 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 20342 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', 0,
  /* 20355 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'm', 0,
  /* 20365 */ 'S', 'B', 'B', '1', '6', 'r', 'm', 0,
  /* 20373 */ 'S', 'U', 'B', '1', '6', 'r', 'm', 0,
  /* 20381 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'm', 0,
  /* 20391 */ 'A', 'D', 'C', '1', '6', 'r', 'm', 0,
  /* 20399 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'm', 0,
  /* 20408 */ 'A', 'N', 'D', '1', '6', 'r', 'm', 0,
  /* 20416 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'm', 0,
  /* 20427 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'm', 0,
  /* 20438 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'm', 0,
  /* 20449 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'm', 0,
  /* 20460 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'm', 0,
  /* 20471 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'm', 0,
  /* 20481 */ 'B', 'S', 'F', '1', '6', 'r', 'm', 0,
  /* 20489 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'm', 0,
  /* 20501 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'm', 0,
  /* 20511 */ 'L', 'S', 'L', '1', '6', 'r', 'm', 0,
  /* 20519 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'm', 0,
  /* 20528 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'm', 0,
  /* 20538 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'm', 0,
  /* 20549 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'm', 0,
  /* 20559 */ 'C', 'M', 'P', '1', '6', 'r', 'm', 0,
  /* 20567 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'm', 0,
  /* 20578 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'm', 0,
  /* 20588 */ 'L', 'A', 'R', '1', '6', 'r', 'm', 0,
  /* 20596 */ 'X', 'O', 'R', '1', '6', 'r', 'm', 0,
  /* 20604 */ 'B', 'S', 'R', '1', '6', 'r', 'm', 0,
  /* 20612 */ 'L', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 20620 */ 'B', 'O', 'U', 'N', 'D', 'S', '1', '6', 'r', 'm', 0,
  /* 20631 */ 'L', 'E', 'S', '1', '6', 'r', 'm', 0,
  /* 20639 */ 'L', 'F', 'S', '1', '6', 'r', 'm', 0,
  /* 20647 */ 'L', 'G', 'S', '1', '6', 'r', 'm', 0,
  /* 20655 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'm', 0,
  /* 20666 */ 'L', 'S', 'S', '1', '6', 'r', 'm', 0,
  /* 20674 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'm', 0,
  /* 20684 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20695 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20705 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'm', 0,
  /* 20715 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'm', 0,
  /* 20724 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '1', '6', 'r', 'm', 0,
  /* 20740 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'm', 0,
  /* 20754 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 20767 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'm', 0,
  /* 20781 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 20794 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'm', 0,
  /* 20808 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20824 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'm', 0,
  /* 20840 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'm', 0,
  /* 20854 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'm', 0,
  /* 20876 */ 'S', 'B', 'B', '8', 'r', 'm', 0,
  /* 20883 */ 'S', 'U', 'B', '8', 'r', 'm', 0,
  /* 20890 */ 'A', 'D', 'C', '8', 'r', 'm', 0,
  /* 20897 */ 'X', 'A', 'D', 'D', '8', 'r', 'm', 0,
  /* 20905 */ 'A', 'N', 'D', '8', 'r', 'm', 0,
  /* 20912 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'm', 0,
  /* 20923 */ 'C', 'M', 'P', '8', 'r', 'm', 0,
  /* 20930 */ 'X', 'O', 'R', '8', 'r', 'm', 0,
  /* 20937 */ 'T', 'E', 'S', 'T', '8', 'r', 'm', 0,
  /* 20945 */ 'A', 'C', 'Q', 'U', 'I', 'R', 'E', '_', 'M', 'O', 'V', '8', 'r', 'm', 0,
  /* 20960 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 20972 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'm', 0,
  /* 20982 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'm', 0,
  /* 20991 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'm', 0,
  /* 21000 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'm', 0,
  /* 21009 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'm', 0,
  /* 21019 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'm', 0,
  /* 21028 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'm', 0,
  /* 21037 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'm', 0,
  /* 21047 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'm', 0,
  /* 21058 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'm', 0,
  /* 21068 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'm', 0,
  /* 21078 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'm', 0,
  /* 21088 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'm', 0,
  /* 21098 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21109 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21120 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'm', 0,
  /* 21130 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'm', 0,
  /* 21140 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'm', 0,
  /* 21151 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'm', 0,
  /* 21160 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'm', 0,
  /* 21175 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'm', 0,
  /* 21185 */ 'P', 'F', 'S', 'U', 'B', 'r', 'm', 0,
  /* 21193 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'm', 0,
  /* 21203 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'm', 0,
  /* 21215 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'm', 0,
  /* 21227 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'm', 0,
  /* 21239 */ 'P', 'F', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21247 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21256 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'm', 0,
  /* 21266 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'm', 0,
  /* 21276 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'm', 0,
  /* 21286 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'm', 0,
  /* 21296 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'm', 0,
  /* 21305 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 21314 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'm', 0,
  /* 21326 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'm', 0,
  /* 21337 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21349 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21359 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'm', 0,
  /* 21368 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'm', 0,
  /* 21380 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'm', 0,
  /* 21392 */ 'P', 'F', 'A', 'D', 'D', 'r', 'm', 0,
  /* 21400 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 21410 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'm', 0,
  /* 21419 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'D', 'r', 'm', 0,
  /* 21432 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'm', 0,
  /* 21443 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'm', 0,
  /* 21455 */ 'P', 'I', '2', 'F', 'D', 'r', 'm', 0,
  /* 21463 */ 'P', 'F', '2', 'I', 'D', 'r', 'm', 0,
  /* 21471 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'm', 0,
  /* 21480 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21489 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21501 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'm', 0,
  /* 21511 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 21520 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'm', 0,
  /* 21532 */ 'V', 'P', 'A', 'N', 'D', 'r', 'm', 0,
  /* 21540 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'm', 0,
  /* 21550 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'm', 0,
  /* 21563 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'm', 0,
  /* 21575 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'm', 0,
  /* 21587 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21599 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21610 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'm', 0,
  /* 21619 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21631 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21641 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'm', 0,
  /* 21650 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'r', 'm', 0,
  /* 21660 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'r', 'm', 0,
  /* 21670 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21680 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21689 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21698 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21709 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'D', 'r', 'm', 0,
  /* 21722 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'm', 0,
  /* 21734 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'r', 'm', 0,
  /* 21744 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21756 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21768 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21777 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'r', 'm', 0,
  /* 21787 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21797 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21809 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'm', 0,
  /* 21818 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'D', 'r', 'm', 0,
  /* 21831 */ 'V', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21839 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21848 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21859 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'm', 0,
  /* 21869 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'm', 0,
  /* 21879 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'm', 0,
  /* 21889 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21901 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21910 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'r', 'm', 0,
  /* 21923 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'm', 0,
  /* 21932 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'm', 0,
  /* 21942 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'm', 0,
  /* 21953 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'D', 'r', 'm', 0,
  /* 21966 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'm', 0,
  /* 21976 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 21992 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'm', 0,
  /* 22007 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 22023 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'm', 0,
  /* 22038 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', 0,
  /* 22047 */ 'V', 'M', 'I', 'N', 'C', 'S', 'D', 'r', 'm', 0,
  /* 22057 */ 'V', 'M', 'A', 'X', 'C', 'S', 'D', 'r', 'm', 0,
  /* 22067 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', 0,
  /* 22076 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22091 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22105 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22119 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'm', 0,
  /* 22132 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', 0,
  /* 22141 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 22151 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', 0,
  /* 22160 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 22173 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'm', 0,
  /* 22185 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', 0,
  /* 22194 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'm', 0,
  /* 22203 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 22213 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', 0,
  /* 22222 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'm', 0,
  /* 22232 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'm', 0,
  /* 22245 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'm', 0,
  /* 22256 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'm', 0,
  /* 22265 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'm', 0,
  /* 22280 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'm', 0,
  /* 22290 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'm', 0,
  /* 22300 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'm', 0,
  /* 22310 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'm', 0,
  /* 22320 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'm', 0,
  /* 22330 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'r', 'm', 0,
  /* 22343 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'm', 0,
  /* 22354 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 22365 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'm', 0,
  /* 22376 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'm', 0,
  /* 22389 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'm', 0,
  /* 22402 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22413 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22425 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22437 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'm', 0,
  /* 22450 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'm', 0,
  /* 22462 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'm', 0,
  /* 22474 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'm', 0,
  /* 22486 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'm', 0,
  /* 22496 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 22508 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'm', 0,
  /* 22521 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22534 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22548 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'm', 0,
  /* 22565 */ 'V', 'M', 'O', 'V', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22578 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22592 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'm', 0,
  /* 22609 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 22622 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'm', 0,
  /* 22635 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22652 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22668 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'm', 0,
  /* 22680 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22697 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22713 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'm', 0,
  /* 22725 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 22737 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'm', 0,
  /* 22750 */ 'P', 'F', 'M', 'U', 'L', 'r', 'm', 0,
  /* 22758 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'm', 0,
  /* 22767 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'm', 0,
  /* 22776 */ 'P', 'F', 'M', 'I', 'N', 'r', 'm', 0,
  /* 22784 */ 'P', 'F', 'R', 'C', 'P', 'r', 'm', 0,
  /* 22792 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22803 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22815 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'm', 0,
  /* 22827 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'm', 0,
  /* 22836 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'm', 0,
  /* 22847 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22859 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'm', 0,
  /* 22868 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 22880 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'm', 0,
  /* 22892 */ 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22904 */ 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22915 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22928 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'm', 0,
  /* 22940 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'm', 0,
  /* 22951 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 22960 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'm', 0,
  /* 22971 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'm', 0,
  /* 22984 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 22997 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'm', 0,
  /* 23007 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23021 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23035 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'm', 0,
  /* 23048 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'Q', 'r', 'm', 0,
  /* 23061 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 23073 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'm', 0,
  /* 23084 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 23096 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'm', 0,
  /* 23108 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'm', 0,
  /* 23118 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'm', 0,
  /* 23127 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 23136 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'm', 0,
  /* 23148 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 23157 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'm', 0,
  /* 23169 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'm', 0,
  /* 23180 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'Q', 'r', 'm', 0,
  /* 23193 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'm', 0,
  /* 23203 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'm', 0,
  /* 23214 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'm', 0,
  /* 23223 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'm', 0,
  /* 23238 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 23248 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'm', 0,
  /* 23258 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'r', 'm', 0,
  /* 23271 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'm', 0,
  /* 23282 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'm', 0,
  /* 23294 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 23306 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'm', 0,
  /* 23318 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'm', 0,
  /* 23327 */ 'V', 'P', 'O', 'R', 'r', 'm', 0,
  /* 23334 */ 'V', 'P', 'X', 'O', 'R', 'r', 'm', 0,
  /* 23342 */ 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'm', 0,
  /* 23353 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'm', 0,
  /* 23365 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'm', 0,
  /* 23378 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'm', 0,
  /* 23390 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 23402 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'm', 0,
  /* 23413 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23425 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23435 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'm', 0,
  /* 23444 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'r', 'm', 0,
  /* 23454 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'r', 'm', 0,
  /* 23464 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23474 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23483 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23492 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23503 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'S', 'r', 'm', 0,
  /* 23516 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'm', 0,
  /* 23528 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'r', 'm', 0,
  /* 23538 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23550 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23562 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23571 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'r', 'm', 0,
  /* 23581 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23591 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23603 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'm', 0,
  /* 23612 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'S', 'r', 'm', 0,
  /* 23625 */ 'V', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23633 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23642 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23653 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'm', 0,
  /* 23663 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'm', 0,
  /* 23675 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'm', 0,
  /* 23685 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'm', 0,
  /* 23695 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23707 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23716 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'r', 'm', 0,
  /* 23729 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'm', 0,
  /* 23738 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'm', 0,
  /* 23748 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23764 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'm', 0,
  /* 23779 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23791 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23807 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'm', 0,
  /* 23822 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', 0,
  /* 23831 */ 'V', 'M', 'I', 'N', 'C', 'S', 'S', 'r', 'm', 0,
  /* 23841 */ 'V', 'M', 'A', 'X', 'C', 'S', 'S', 'r', 'm', 0,
  /* 23851 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', 0,
  /* 23860 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23875 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23889 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23903 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'm', 0,
  /* 23916 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', 0,
  /* 23925 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', 0,
  /* 23934 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 23947 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'm', 0,
  /* 23959 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'm', 0,
  /* 23974 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', 0,
  /* 23983 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'm', 0,
  /* 23992 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', 0,
  /* 24001 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'm', 0,
  /* 24011 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'm', 0,
  /* 24021 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'm', 0,
  /* 24031 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 24045 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'm', 0,
  /* 24059 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'm', 0,
  /* 24068 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 24077 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'm', 0,
  /* 24087 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'm', 0,
  /* 24096 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'm', 0,
  /* 24105 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 24114 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'm', 0,
  /* 24126 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'm', 0,
  /* 24137 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'm', 0,
  /* 24147 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'm', 0,
  /* 24158 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'm', 0,
  /* 24171 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'm', 0,
  /* 24184 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24196 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24206 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'm', 0,
  /* 24215 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'm', 0,
  /* 24227 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'm', 0,
  /* 24239 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 24249 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'm', 0,
  /* 24258 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'm', 0,
  /* 24270 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'm', 0,
  /* 24282 */ 'P', 'I', '2', 'F', 'W', 'r', 'm', 0,
  /* 24290 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'm', 0,
  /* 24299 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'm', 0,
  /* 24309 */ 'P', 'F', '2', 'I', 'W', 'r', 'm', 0,
  /* 24317 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'm', 0,
  /* 24326 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24335 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24347 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'm', 0,
  /* 24357 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 24366 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'm', 0,
  /* 24378 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'm', 0,
  /* 24388 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'm', 0,
  /* 24399 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'm', 0,
  /* 24409 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'm', 0,
  /* 24419 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'm', 0,
  /* 24429 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'm', 0,
  /* 24439 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'm', 0,
  /* 24450 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'm', 0,
  /* 24461 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'm', 0,
  /* 24471 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'm', 0,
  /* 24482 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'm', 0,
  /* 24491 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'm', 0,
  /* 24506 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'm', 0,
  /* 24517 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'm', 0,
  /* 24527 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'm', 0,
  /* 24537 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'm', 0,
  /* 24548 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'm', 0,
  /* 24560 */ 'P', 'F', 'M', 'A', 'X', 'r', 'm', 0,
  /* 24568 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 24582 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'X', 'r', 'm', 0,
  /* 24595 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'X', 'r', 'm', 0,
  /* 24608 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 24621 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'm', 0,
  /* 24632 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'm', 0,
  /* 24642 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'm', 0,
  /* 24652 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'm', 0,
  /* 24663 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'm', 0,
  /* 24673 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'm', 0,
  /* 24684 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'm', 0,
  /* 24696 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24707 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24718 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24729 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24741 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24753 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'm', 0,
  /* 24764 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24776 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'm', 0,
  /* 24792 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24803 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'm', 0,
  /* 24814 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'm', 0,
  /* 24827 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24840 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'm', 0,
  /* 24853 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'm', 0,
  /* 24863 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24874 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24884 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24897 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'm', 0,
  /* 24910 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 24921 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 24931 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'D', 'Y', 'r', 'm', 0,
  /* 24945 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24955 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24966 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'm', 0,
  /* 24976 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'm', 0,
  /* 24986 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 24995 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'm', 0,
  /* 25006 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25019 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25032 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25043 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25056 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25067 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25077 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25088 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25099 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25110 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25120 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25130 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25144 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25157 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25170 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25183 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25193 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25204 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25214 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25228 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25237 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25247 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25258 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25269 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25282 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25292 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25306 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'm', 0,
  /* 25316 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'm', 0,
  /* 25328 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'D', 'Y', 'r', 'm', 0,
  /* 25342 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25353 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25369 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'm', 0,
  /* 25380 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 25392 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'm', 0,
  /* 25408 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 25419 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'm', 0,
  /* 25430 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25441 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25452 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25463 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'r', 'm', 0,
  /* 25477 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25489 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25503 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25517 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25530 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'm', 0,
  /* 25543 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'm', 0,
  /* 25553 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25565 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25578 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'm', 0,
  /* 25591 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25601 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25614 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'm', 0,
  /* 25627 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25641 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25654 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25668 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25681 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25691 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25705 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25719 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25730 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25745 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25760 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25774 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25786 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25799 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'm', 0,
  /* 25812 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 25822 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'm', 0,
  /* 25832 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'm', 0,
  /* 25844 */ 'V', 'P', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'Q', 'Y', 'r', 'm', 0,
  /* 25858 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 25870 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'm', 0,
  /* 25886 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25897 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25908 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'r', 'm', 0,
  /* 25922 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 25935 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'm', 0,
  /* 25948 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 25956 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'm', 0,
  /* 25965 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25978 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 25991 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26004 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26015 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26028 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26039 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26049 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26060 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26071 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26082 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26092 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26102 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'D', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26116 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26129 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26142 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26155 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26165 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26176 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26187 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26197 */ 'V', 'G', 'A', 'T', 'H', 'E', 'R', 'Q', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26211 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26220 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26230 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26241 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26252 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26265 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26275 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26289 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'm', 0,
  /* 26299 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'm', 0,
  /* 26315 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'm', 0,
  /* 26325 */ 'V', 'L', 'D', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 26335 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'm', 0,
  /* 26346 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'm', 0,
  /* 26356 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26367 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26381 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26395 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26406 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26416 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26429 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'm', 0,
  /* 26442 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26453 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26463 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26476 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'm', 0,
  /* 26489 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'm', 0,
  /* 26499 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'm', 0,
  /* 26510 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26520 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26531 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'm', 0,
  /* 26541 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'm', 0,
  /* 26552 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'm', 0,
  /* 26564 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26575 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26586 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26597 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26609 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26621 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'm', 0,
  /* 26632 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 26644 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'm', 0,
  /* 26660 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26672 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26683 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'm', 0,
  /* 26694 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'm', 0,
  /* 26711 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'm', 0,
  /* 26724 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'm', 0,
  /* 26737 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'm', 0,
  /* 26750 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'm', 0,
  /* 26765 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'm', 0,
  /* 26779 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'm', 0,
  /* 26793 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 26808 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'm', 0,
  /* 26823 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'm', 0,
  /* 26838 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'm', 0,
  /* 26852 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'm', 0,
  /* 26866 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 26882 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'm', 0,
  /* 26898 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'm', 0,
  /* 26911 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'm', 0,
  /* 26924 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'm', 0,
  /* 26936 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'm', 0,
  /* 26952 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'm', 0,
  /* 26967 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'm', 0,
  /* 26982 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'm', 0,
  /* 26997 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'm', 0,
  /* 27014 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'm', 0,
  /* 27031 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27048 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27064 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27081 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'm', 0,
  /* 27097 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'm', 0,
  /* 27110 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'm', 0,
  /* 27123 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27136 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27153 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27170 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'm', 0,
  /* 27185 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'm', 0,
  /* 27196 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'm', 0,
  /* 27208 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'm', 0,
  /* 27224 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27238 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27255 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27272 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'm', 0,
  /* 27285 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'm', 0,
  /* 27298 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'm', 0,
  /* 27314 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'm', 0,
  /* 27327 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'm', 0,
  /* 27341 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'm', 0,
  /* 27355 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'm', 0,
  /* 27370 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27384 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27398 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27412 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27427 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27442 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'm', 0,
  /* 27456 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'm', 0,
  /* 27471 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'm', 0,
  /* 27486 */ 'M', 'O', 'V', '3', '2', 's', 'm', 0,
  /* 27494 */ 'M', 'O', 'V', '6', '4', 's', 'm', 0,
  /* 27502 */ 'M', 'O', 'V', '1', '6', 's', 'm', 0,
  /* 27510 */ 'E', 'H', '_', 'S', 'j', 'L', 'j', '_', 'S', 'e', 't', 'u', 'p', 0,
  /* 27524 */ 'S', 'U', 'B', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27534 */ 'A', 'D', 'D', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27544 */ 'M', 'U', 'L', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27554 */ 'C', 'O', 'M', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27564 */ 'C', 'O', 'M', 'P', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27575 */ 'S', 'U', 'B', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27586 */ 'D', 'I', 'V', 'R', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27597 */ 'D', 'I', 'V', '_', 'F', 'S', 'T', '0', 'r', 0,
  /* 27607 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27624 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27638 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27653 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27670 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27684 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27699 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27713 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27728 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27742 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '3', '1', 'r', 0,
  /* 27757 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27774 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27788 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27803 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27820 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27834 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27849 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27863 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27878 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27892 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '3', '1', 'r', 0,
  /* 27907 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27924 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27938 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27953 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27970 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27984 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 27999 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28013 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28028 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28042 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '1', '3', '2', 'r', 0,
  /* 28057 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28074 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28088 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28103 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28120 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28134 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28149 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28163 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28178 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28192 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '1', '3', '2', 'r', 0,
  /* 28207 */ 'L', 'E', 'A', '3', '2', 'r', 0,
  /* 28214 */ 'D', 'E', 'C', '3', '2', 'r', 0,
  /* 28221 */ 'I', 'N', 'C', '3', '2', 'r', 0,
  /* 28228 */ 'M', 'O', 'V', 'P', 'C', '3', '2', 'r', 0,
  /* 28237 */ 'S', 'E', 'T', 'B', '_', 'C', '3', '2', 'r', 0,
  /* 28247 */ 'R', 'D', 'S', 'E', 'E', 'D', '3', '2', 'r', 0,
  /* 28257 */ 'R', 'D', 'R', 'A', 'N', 'D', '3', '2', 'r', 0,
  /* 28267 */ 'N', 'E', 'G', '3', '2', 'r', 0,
  /* 28274 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 0,
  /* 28282 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'C', 'A', 'L', 'L', '3', '2', 'r', 0,
  /* 28298 */ 'N', 'A', 'C', 'L', '_', 'C', 'A', 'L', 'L', '3', '2', 'r', 0,
  /* 28311 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 0,
  /* 28319 */ 'B', 'S', 'W', 'A', 'P', '3', '2', 'r', 0,
  /* 28328 */ 'N', 'A', 'C', 'L', '_', 'J', 'M', 'P', '3', '2', 'r', 0,
  /* 28340 */ 'P', 'O', 'P', '3', '2', 'r', 0,
  /* 28347 */ 'S', 'T', 'R', '3', '2', 'r', 0,
  /* 28354 */ 'S', 'L', 'D', 'T', '3', '2', 'r', 0,
  /* 28362 */ 'N', 'O', 'T', '3', '2', 'r', 0,
  /* 28369 */ 'I', 'D', 'I', 'V', '3', '2', 'r', 0,
  /* 28377 */ 'S', 'M', 'S', 'W', '3', '2', 'r', 0,
  /* 28385 */ 'L', 'E', 'A', '6', '4', '_', '3', '2', 'r', 0,
  /* 28395 */ 'D', 'E', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 28405 */ 'I', 'N', 'C', '6', '4', '_', '3', '2', 'r', 0,
  /* 28415 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28432 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28446 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28461 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28478 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28492 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28507 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28521 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28536 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28550 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', 0,
  /* 28565 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28582 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28596 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28611 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28628 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28642 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28657 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28671 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28686 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28700 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', 0,
  /* 28715 */ 'L', 'E', 'A', '6', '4', 'r', 0,
  /* 28722 */ 'D', 'E', 'C', '6', '4', 'r', 0,
  /* 28729 */ 'I', 'N', 'C', '6', '4', 'r', 0,
  /* 28736 */ 'S', 'E', 'T', 'B', '_', 'C', '6', '4', 'r', 0,
  /* 28746 */ 'R', 'D', 'S', 'E', 'E', 'D', '6', '4', 'r', 0,
  /* 28756 */ 'R', 'D', 'R', 'A', 'N', 'D', '6', '4', 'r', 0,
  /* 28766 */ 'N', 'E', 'G', '6', '4', 'r', 0,
  /* 28773 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 0,
  /* 28781 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'C', 'A', 'L', 'L', '6', '4', 'r', 0,
  /* 28797 */ 'N', 'A', 'C', 'L', '_', 'C', 'A', 'L', 'L', '6', '4', 'r', 0,
  /* 28810 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 0,
  /* 28818 */ 'B', 'S', 'W', 'A', 'P', '6', '4', 'r', 0,
  /* 28827 */ 'N', 'A', 'C', 'L', '_', 'C', 'G', '_', 'J', 'M', 'P', '6', '4', 'r', 0,
  /* 28842 */ 'N', 'A', 'C', 'L', '_', 'J', 'M', 'P', '6', '4', 'r', 0,
  /* 28854 */ 'P', 'O', 'P', '6', '4', 'r', 0,
  /* 28861 */ 'S', 'T', 'R', '6', '4', 'r', 0,
  /* 28868 */ 'S', 'L', 'D', 'T', '6', '4', 'r', 0,
  /* 28876 */ 'N', 'O', 'T', '6', '4', 'r', 0,
  /* 28883 */ 'I', 'D', 'I', 'V', '6', '4', 'r', 0,
  /* 28891 */ 'S', 'M', 'S', 'W', '6', '4', 'r', 0,
  /* 28899 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', '6', '4', 'r', 0,
  /* 28913 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'r', '6', '4', 'r', 0,
  /* 28927 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'r', '6', '4', 'r', 0,
  /* 28941 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', '6', '4', 'r', 0,
  /* 28956 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'D', 'Y', 'r', '6', '4', 'r', 0,
  /* 28971 */ 'V', 'M', 'O', 'V', 'M', 'S', 'K', 'P', 'S', 'Y', 'r', '6', '4', 'r', 0,
  /* 28986 */ 'L', 'E', 'A', '1', '6', 'r', 0,
  /* 28993 */ 'D', 'E', 'C', '1', '6', 'r', 0,
  /* 29000 */ 'I', 'N', 'C', '1', '6', 'r', 0,
  /* 29007 */ 'S', 'E', 'T', 'B', '_', 'C', '1', '6', 'r', 0,
  /* 29017 */ 'R', 'D', 'S', 'E', 'E', 'D', '1', '6', 'r', 0,
  /* 29027 */ 'R', 'D', 'R', 'A', 'N', 'D', '1', '6', 'r', 0,
  /* 29037 */ 'N', 'E', 'G', '1', '6', 'r', 0,
  /* 29044 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 0,
  /* 29052 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 0,
  /* 29060 */ 'P', 'O', 'P', '1', '6', 'r', 0,
  /* 29067 */ 'S', 'T', 'R', '1', '6', 'r', 0,
  /* 29074 */ 'L', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 29082 */ 'S', 'L', 'D', 'T', '1', '6', 'r', 0,
  /* 29090 */ 'N', 'O', 'T', '1', '6', 'r', 0,
  /* 29097 */ 'I', 'D', 'I', 'V', '1', '6', 'r', 0,
  /* 29105 */ 'L', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 29113 */ 'S', 'M', 'S', 'W', '1', '6', 'r', 0,
  /* 29121 */ 'F', 'N', 'S', 'T', 'S', 'W', '1', '6', 'r', 0,
  /* 29131 */ 'D', 'E', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 29141 */ 'I', 'N', 'C', '6', '4', '_', '1', '6', 'r', 0,
  /* 29151 */ 'D', 'E', 'C', '8', 'r', 0,
  /* 29157 */ 'I', 'N', 'C', '8', 'r', 0,
  /* 29163 */ 'S', 'E', 'T', 'B', '_', 'C', '8', 'r', 0,
  /* 29172 */ 'N', 'E', 'G', '8', 'r', 0,
  /* 29178 */ 'I', 'M', 'U', 'L', '8', 'r', 0,
  /* 29185 */ 'N', 'O', 'T', '8', 'r', 0,
  /* 29191 */ 'I', 'D', 'I', 'V', '8', 'r', 0,
  /* 29198 */ 'S', 'E', 'T', 'A', 'r', 0,
  /* 29204 */ 'S', 'E', 'T', 'B', 'r', 0,
  /* 29210 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'D', 'r', 0,
  /* 29220 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'r', 0,
  /* 29229 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'D', 'r', 0,
  /* 29240 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', 0,
  /* 29250 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'r', 0,
  /* 29259 */ 'S', 'E', 'T', 'A', 'E', 'r', 0,
  /* 29266 */ 'S', 'E', 'T', 'B', 'E', 'r', 0,
  /* 29273 */ 'S', 'E', 'T', 'G', 'E', 'r', 0,
  /* 29280 */ 'S', 'E', 'T', 'L', 'E', 'r', 0,
  /* 29287 */ 'S', 'E', 'T', 'N', 'E', 'r', 0,
  /* 29294 */ 'S', 'E', 'T', 'E', 'r', 0,
  /* 29300 */ 'U', 'C', 'O', 'M', '_', 'F', 'r', 0,
  /* 29308 */ 'S', 'E', 'T', 'G', 'r', 0,
  /* 29314 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'r', 0,
  /* 29323 */ 'S', 'E', 'T', 'L', 'r', 0,
  /* 29329 */ 'S', 'E', 'T', 'N', 'O', 'r', 0,
  /* 29336 */ 'S', 'E', 'T', 'O', 'r', 0,
  /* 29342 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'B', 'P', 'r', 0,
  /* 29355 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'r', 0,
  /* 29364 */ 'U', 'C', 'O', 'M', '_', 'F', 'I', 'P', 'r', 0,
  /* 29374 */ 'T', 'A', 'I', 'L', 'J', 'M', 'P', 'r', 0,
  /* 29383 */ 'S', 'E', 'T', 'N', 'P', 'r', 0,
  /* 29390 */ 'U', 'C', 'O', 'M', '_', 'F', 'P', 'P', 'r', 0,
  /* 29400 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'S', 'P', 'r', 0,
  /* 29413 */ 'S', 'E', 'T', 'P', 'r', 0,
  /* 29419 */ 'V', 'E', 'R', 'R', 'r', 0,
  /* 29425 */ 'L', 'T', 'R', 'r', 0,
  /* 29430 */ 'S', 'E', 'T', 'N', 'S', 'r', 0,
  /* 29437 */ 'V', 'R', 'O', 'U', 'N', 'D', 'P', 'S', 'r', 0,
  /* 29447 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', 0,
  /* 29455 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 29465 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', 0,
  /* 29474 */ 'V', 'R', 'O', 'U', 'N', 'D', 'Y', 'P', 'S', 'r', 0,
  /* 29485 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', 0,
  /* 29495 */ 'V', 'R', 'C', 'P', 'S', 'S', 'r', 0,
  /* 29503 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 29513 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', 0,
  /* 29522 */ 'S', 'E', 'T', 'S', 'r', 0,
  /* 29528 */ 'V', 'E', 'R', 'W', 'r', 0,
  /* 29534 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'D', 'Y', 'r', 0,
  /* 29544 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', 0,
  /* 29553 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 29564 */ 'V', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', 0,
  /* 29574 */ 'X', 'C', 'H', 'G', '3', '2', 'a', 'r', 0,
  /* 29583 */ 'X', 'C', 'H', 'G', '6', '4', 'a', 'r', 0,
  /* 29592 */ 'X', 'C', 'H', 'G', '1', '6', 'a', 'r', 0,
  /* 29601 */ 'M', 'O', 'V', '3', '2', 'c', 'r', 0,
  /* 29609 */ 'M', 'O', 'V', '6', '4', 'c', 'r', 0,
  /* 29617 */ 'M', 'O', 'V', '3', '2', 'd', 'r', 0,
  /* 29625 */ 'M', 'O', 'V', '6', '4', 'd', 'r', 0,
  /* 29633 */ 'I', 'n', 't', '_', 'M', 'e', 'm', 'B', 'a', 'r', 'r', 'i', 'e', 'r', 0,
  /* 29648 */ 'O', 'U', 'T', '3', '2', 'i', 'r', 0,
  /* 29656 */ 'O', 'U', 'T', '1', '6', 'i', 'r', 0,
  /* 29664 */ 'O', 'U', 'T', '8', 'i', 'r', 0,
  /* 29671 */ 'S', 'B', 'B', '3', '2', 'm', 'r', 0,
  /* 29679 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '3', '2', 'm', 'r', 0,
  /* 29692 */ 'A', 'D', 'C', '3', '2', 'm', 'r', 0,
  /* 29700 */ 'B', 'T', 'C', '3', '2', 'm', 'r', 0,
  /* 29708 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '3', '2', 'm', 'r', 0,
  /* 29721 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '3', '2', 'm', 'r', 0,
  /* 29734 */ 'M', 'O', 'V', 'B', 'E', '3', '2', 'm', 'r', 0,
  /* 29744 */ 'C', 'M', 'P', '3', '2', 'm', 'r', 0,
  /* 29752 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 29765 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '3', '2', 'm', 'r', 0,
  /* 29777 */ 'B', 'T', 'R', '3', '2', 'm', 'r', 0,
  /* 29785 */ 'B', 'T', 'S', '3', '2', 'm', 'r', 0,
  /* 29793 */ 'B', 'T', '3', '2', 'm', 'r', 0,
  /* 29800 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '3', '2', 'm', 'r', 0,
  /* 29816 */ 'S', 'B', 'B', '6', '4', 'm', 'r', 0,
  /* 29824 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '6', '4', 'm', 'r', 0,
  /* 29837 */ 'A', 'D', 'C', '6', '4', 'm', 'r', 0,
  /* 29845 */ 'B', 'T', 'C', '6', '4', 'm', 'r', 0,
  /* 29853 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '6', '4', 'm', 'r', 0,
  /* 29866 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '6', '4', 'm', 'r', 0,
  /* 29879 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'm', 'r', 0,
  /* 29892 */ 'M', 'O', 'V', 'B', 'E', '6', '4', 'm', 'r', 0,
  /* 29902 */ 'C', 'M', 'P', '6', '4', 'm', 'r', 0,
  /* 29910 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'm', 'r', 0,
  /* 29923 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 29936 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '6', '4', 'm', 'r', 0,
  /* 29948 */ 'B', 'T', 'R', '6', '4', 'm', 'r', 0,
  /* 29956 */ 'B', 'T', 'S', '6', '4', 'm', 'r', 0,
  /* 29964 */ 'B', 'T', '6', '4', 'm', 'r', 0,
  /* 29971 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '6', '4', 'm', 'r', 0,
  /* 29987 */ 'M', 'O', 'V', 'N', 'T', 'I', '_', '6', '4', 'm', 'r', 0,
  /* 29999 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'm', 'r', 0,
  /* 30012 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30027 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30039 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'm', 'r', 0,
  /* 30052 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30067 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30079 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'm', 'r', 0,
  /* 30092 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 30104 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', 0,
  /* 30117 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 30129 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', 0,
  /* 30142 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30157 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30169 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'm', 'r', 0,
  /* 30182 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30197 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30209 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'm', 'r', 0,
  /* 30222 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 30234 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', 0,
  /* 30247 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 30259 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', 0,
  /* 30272 */ 'S', 'B', 'B', '1', '6', 'm', 'r', 0,
  /* 30280 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '1', '6', 'm', 'r', 0,
  /* 30293 */ 'A', 'D', 'C', '1', '6', 'm', 'r', 0,
  /* 30301 */ 'B', 'T', 'C', '1', '6', 'm', 'r', 0,
  /* 30309 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '1', '6', 'm', 'r', 0,
  /* 30322 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '1', '6', 'm', 'r', 0,
  /* 30335 */ 'M', 'O', 'V', 'B', 'E', '1', '6', 'm', 'r', 0,
  /* 30345 */ 'A', 'R', 'P', 'L', '1', '6', 'm', 'r', 0,
  /* 30354 */ 'C', 'M', 'P', '1', '6', 'm', 'r', 0,
  /* 30362 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 30375 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '1', '6', 'm', 'r', 0,
  /* 30387 */ 'B', 'T', 'R', '1', '6', 'm', 'r', 0,
  /* 30395 */ 'B', 'T', 'S', '1', '6', 'm', 'r', 0,
  /* 30403 */ 'B', 'T', '1', '6', 'm', 'r', 0,
  /* 30410 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '1', '6', 'm', 'r', 0,
  /* 30426 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'm', 'r', 0,
  /* 30441 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'm', 'r', 0,
  /* 30456 */ 'V', 'M', 'O', 'V', 'L', 'Q', '1', '2', '8', 'm', 'r', 0,
  /* 30468 */ 'S', 'B', 'B', '8', 'm', 'r', 0,
  /* 30475 */ 'L', 'O', 'C', 'K', '_', 'S', 'U', 'B', '8', 'm', 'r', 0,
  /* 30487 */ 'A', 'D', 'C', '8', 'm', 'r', 0,
  /* 30494 */ 'L', 'O', 'C', 'K', '_', 'A', 'D', 'D', '8', 'm', 'r', 0,
  /* 30506 */ 'L', 'O', 'C', 'K', '_', 'A', 'N', 'D', '8', 'm', 'r', 0,
  /* 30518 */ 'C', 'M', 'P', '8', 'm', 'r', 0,
  /* 30525 */ 'L', 'O', 'C', 'K', '_', 'X', 'O', 'R', '8', 'm', 'r', 0,
  /* 30537 */ 'L', 'O', 'C', 'K', '_', 'O', 'R', '8', 'm', 'r', 0,
  /* 30548 */ 'R', 'E', 'L', 'E', 'A', 'S', 'E', '_', 'M', 'O', 'V', '8', 'm', 'r', 0,
  /* 30563 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'm', 'r', 0,
  /* 30573 */ 'V', 'P', 'S', 'H', 'A', 'B', 'm', 'r', 0,
  /* 30582 */ 'V', 'P', 'S', 'H', 'L', 'B', 'm', 'r', 0,
  /* 30591 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'm', 'r', 0,
  /* 30601 */ 'V', 'P', 'R', 'O', 'T', 'B', 'm', 'r', 0,
  /* 30610 */ 'V', 'P', 'S', 'H', 'A', 'D', 'm', 'r', 0,
  /* 30619 */ 'V', 'P', 'S', 'H', 'L', 'D', 'm', 'r', 0,
  /* 30628 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'm', 'r', 0,
  /* 30641 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'm', 'r', 0,
  /* 30651 */ 'V', 'M', 'O', 'V', 'H', 'P', 'D', 'm', 'r', 0,
  /* 30661 */ 'V', 'M', 'O', 'V', 'L', 'P', 'D', 'm', 'r', 0,
  /* 30671 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'm', 'r', 0,
  /* 30682 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'm', 'r', 0,
  /* 30692 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'm', 'r', 0,
  /* 30705 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'm', 'r', 0,
  /* 30715 */ 'V', 'M', 'O', 'V', 'S', 'D', 'm', 'r', 0,
  /* 30724 */ 'V', 'P', 'R', 'O', 'T', 'D', 'm', 'r', 0,
  /* 30733 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'm', 'r', 0,
  /* 30746 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'm', 'r', 0,
  /* 30758 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'm', 'r', 0,
  /* 30771 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'm', 'r', 0,
  /* 30783 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', '2', 'Q', 'I', 'm', 'r', 0,
  /* 30796 */ 'M', 'O', 'V', 'N', 'T', 'I', 'm', 'r', 0,
  /* 30805 */ 'V', 'P', 'P', 'E', 'R', 'M', 'm', 'r', 0,
  /* 30814 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'm', 'r', 0,
  /* 30823 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'm', 'r', 0,
  /* 30834 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'm', 'r', 0,
  /* 30843 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'm', 'r', 0,
  /* 30853 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'N', 'T', 'Q', 'm', 'r', 0,
  /* 30866 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'm', 'r', 0,
  /* 30875 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'm', 'r', 0,
  /* 30888 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'm', 'r', 0,
  /* 30901 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'm', 'r', 0,
  /* 30911 */ 'V', 'M', 'O', 'V', 'H', 'P', 'S', 'm', 'r', 0,
  /* 30921 */ 'V', 'M', 'O', 'V', 'L', 'P', 'S', 'm', 'r', 0,
  /* 30931 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'm', 'r', 0,
  /* 30944 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'm', 'r', 0,
  /* 30955 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'm', 'r', 0,
  /* 30965 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'm', 'r', 0,
  /* 30978 */ 'V', 'M', 'O', 'V', 'S', 'S', 'm', 'r', 0,
  /* 30987 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'm', 'r', 0,
  /* 30997 */ 'V', 'P', 'C', 'M', 'O', 'V', 'm', 'r', 0,
  /* 31006 */ 'V', 'P', 'S', 'H', 'A', 'W', 'm', 'r', 0,
  /* 31015 */ 'V', 'P', 'S', 'H', 'L', 'W', 'm', 'r', 0,
  /* 31024 */ 'V', 'P', 'E', 'X', 'T', 'R', 'W', 'm', 'r', 0,
  /* 31034 */ 'V', 'P', 'R', 'O', 'T', 'W', 'm', 'r', 0,
  /* 31043 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'm', 'r', 0,
  /* 31054 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31065 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31077 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31088 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'D', 'Y', 'm', 'r', 0,
  /* 31102 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'D', 'Y', 'm', 'r', 0,
  /* 31116 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'm', 'r', 0,
  /* 31129 */ 'V', 'M', 'O', 'V', 'N', 'T', 'D', 'Q', 'Y', 'm', 'r', 0,
  /* 31141 */ 'V', 'P', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'Q', 'Y', 'm', 'r', 0,
  /* 31155 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31166 */ 'V', 'M', 'O', 'V', 'N', 'T', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31178 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31189 */ 'V', 'M', 'A', 'S', 'K', 'M', 'O', 'V', 'P', 'S', 'Y', 'm', 'r', 0,
  /* 31203 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'm', 'r', 0,
  /* 31214 */ 'P', 'U', 'S', 'H', '3', '2', 'r', 'm', 'r', 0,
  /* 31224 */ 'P', 'O', 'P', '3', '2', 'r', 'm', 'r', 0,
  /* 31233 */ 'P', 'U', 'S', 'H', '6', '4', 'r', 'm', 'r', 0,
  /* 31243 */ 'P', 'O', 'P', '6', '4', 'r', 'm', 'r', 0,
  /* 31252 */ 'P', 'U', 'S', 'H', '1', '6', 'r', 'm', 'r', 0,
  /* 31262 */ 'P', 'O', 'P', '1', '6', 'r', 'm', 'r', 0,
  /* 31271 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '1', 'r', 'r', 0,
  /* 31282 */ 'P', 'F', 'R', 'S', 'Q', 'I', 'T', '1', 'r', 'r', 0,
  /* 31293 */ 'C', 'M', 'O', 'V', 'A', '3', '2', 'r', 'r', 0,
  /* 31303 */ 'S', 'B', 'B', '3', '2', 'r', 'r', 0,
  /* 31311 */ 'S', 'U', 'B', '3', '2', 'r', 'r', 0,
  /* 31319 */ 'C', 'M', 'O', 'V', 'B', '3', '2', 'r', 'r', 0,
  /* 31329 */ 'A', 'D', 'C', '3', '2', 'r', 'r', 0,
  /* 31337 */ 'B', 'T', 'C', '3', '2', 'r', 'r', 0,
  /* 31345 */ 'V', 'M', 'R', 'E', 'A', 'D', '3', '2', 'r', 'r', 0,
  /* 31356 */ 'X', 'A', 'D', 'D', '3', '2', 'r', 'r', 0,
  /* 31365 */ 'A', 'N', 'D', '3', '2', 'r', 'r', 0,
  /* 31373 */ 'C', 'M', 'O', 'V', 'A', 'E', '3', '2', 'r', 'r', 0,
  /* 31384 */ 'C', 'M', 'O', 'V', 'B', 'E', '3', '2', 'r', 'r', 0,
  /* 31395 */ 'C', 'M', 'O', 'V', 'G', 'E', '3', '2', 'r', 'r', 0,
  /* 31406 */ 'C', 'M', 'O', 'V', 'L', 'E', '3', '2', 'r', 'r', 0,
  /* 31417 */ 'C', 'M', 'O', 'V', 'N', 'E', '3', '2', 'r', 'r', 0,
  /* 31428 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '3', '2', 'r', 'r', 0,
  /* 31440 */ 'C', 'M', 'O', 'V', 'E', '3', '2', 'r', 'r', 0,
  /* 31450 */ 'B', 'S', 'F', '3', '2', 'r', 'r', 0,
  /* 31458 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '3', '2', 'r', 'r', 0,
  /* 31470 */ 'C', 'M', 'O', 'V', 'G', '3', '2', 'r', 'r', 0,
  /* 31480 */ 'B', 'Z', 'H', 'I', '3', '2', 'r', 'r', 0,
  /* 31489 */ 'B', 'L', 'S', 'I', '3', '2', 'r', 'r', 0,
  /* 31498 */ 'B', 'L', 'S', 'M', 'S', 'K', '3', '2', 'r', 'r', 0,
  /* 31509 */ 'L', 'S', 'L', '3', '2', 'r', 'r', 0,
  /* 31517 */ 'I', 'M', 'U', 'L', '3', '2', 'r', 'r', 0,
  /* 31526 */ 'C', 'M', 'O', 'V', 'L', '3', '2', 'r', 'r', 0,
  /* 31536 */ 'A', 'N', 'D', 'N', '3', '2', 'r', 'r', 0,
  /* 31545 */ 'I', 'N', '3', '2', 'r', 'r', 0,
  /* 31552 */ 'C', 'M', 'O', 'V', 'N', 'O', '3', '2', 'r', 'r', 0,
  /* 31563 */ 'C', 'M', 'O', 'V', 'O', '3', '2', 'r', 'r', 0,
  /* 31573 */ 'P', 'D', 'E', 'P', '3', '2', 'r', 'r', 0,
  /* 31582 */ 'C', 'M', 'P', '3', '2', 'r', 'r', 0,
  /* 31590 */ 'C', 'M', 'O', 'V', 'N', 'P', '3', '2', 'r', 'r', 0,
  /* 31601 */ 'C', 'M', 'O', 'V', 'P', '3', '2', 'r', 'r', 0,
  /* 31611 */ 'L', 'A', 'R', '3', '2', 'r', 'r', 0,
  /* 31619 */ 'X', 'O', 'R', '3', '2', 'r', 'r', 0,
  /* 31627 */ 'B', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 31635 */ 'B', 'L', 'S', 'R', '3', '2', 'r', 'r', 0,
  /* 31644 */ 'B', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 31652 */ 'B', 'E', 'X', 'T', 'R', '3', '2', 'r', 'r', 0,
  /* 31662 */ 'C', 'M', 'O', 'V', 'N', 'S', '3', '2', 'r', 'r', 0,
  /* 31673 */ 'B', 'T', 'S', '3', '2', 'r', 'r', 0,
  /* 31681 */ 'C', 'M', 'O', 'V', 'S', '3', '2', 'r', 'r', 0,
  /* 31691 */ 'B', 'T', '3', '2', 'r', 'r', 0,
  /* 31698 */ 'P', 'O', 'P', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 31709 */ 'L', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 31719 */ 'T', 'Z', 'C', 'N', 'T', '3', '2', 'r', 'r', 0,
  /* 31729 */ 'T', 'E', 'S', 'T', '3', '2', 'r', 'r', 0,
  /* 31738 */ 'O', 'U', 'T', '3', '2', 'r', 'r', 0,
  /* 31746 */ 'P', 'E', 'X', 'T', '3', '2', 'r', 'r', 0,
  /* 31755 */ 'M', 'O', 'V', '3', '2', 'r', 'r', 0,
  /* 31763 */ 'A', 'D', 'C', 'X', '3', '2', 'r', 'r', 0,
  /* 31772 */ 'S', 'H', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 31781 */ 'M', 'U', 'L', 'X', '3', '2', 'r', 'r', 0,
  /* 31790 */ 'A', 'D', 'O', 'X', '3', '2', 'r', 'r', 0,
  /* 31799 */ 'S', 'A', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 31808 */ 'S', 'H', 'R', 'X', '3', '2', 'r', 'r', 0,
  /* 31817 */ 'P', 'F', 'R', 'C', 'P', 'I', 'T', '2', 'r', 'r', 0,
  /* 31828 */ 'C', 'M', 'O', 'V', 'A', '6', '4', 'r', 'r', 0,
  /* 31838 */ 'S', 'B', 'B', '6', '4', 'r', 'r', 0,
  /* 31846 */ 'S', 'U', 'B', '6', '4', 'r', 'r', 0,
  /* 31854 */ 'C', 'M', 'O', 'V', 'B', '6', '4', 'r', 'r', 0,
  /* 31864 */ 'A', 'D', 'C', '6', '4', 'r', 'r', 0,
  /* 31872 */ 'B', 'T', 'C', '6', '4', 'r', 'r', 0,
  /* 31880 */ 'V', 'M', 'R', 'E', 'A', 'D', '6', '4', 'r', 'r', 0,
  /* 31891 */ 'X', 'A', 'D', 'D', '6', '4', 'r', 'r', 0,
  /* 31900 */ 'A', 'N', 'D', '6', '4', 'r', 'r', 0,
  /* 31908 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 31926 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', '6', '4', 'r', 'r', 0,
  /* 31943 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'r', 'r', 0,
  /* 31956 */ 'C', 'M', 'O', 'V', 'A', 'E', '6', '4', 'r', 'r', 0,
  /* 31967 */ 'C', 'M', 'O', 'V', 'B', 'E', '6', '4', 'r', 'r', 0,
  /* 31978 */ 'C', 'M', 'O', 'V', 'G', 'E', '6', '4', 'r', 'r', 0,
  /* 31989 */ 'C', 'M', 'O', 'V', 'L', 'E', '6', '4', 'r', 'r', 0,
  /* 32000 */ 'C', 'M', 'O', 'V', 'N', 'E', '6', '4', 'r', 'r', 0,
  /* 32011 */ 'V', 'M', 'W', 'R', 'I', 'T', 'E', '6', '4', 'r', 'r', 0,
  /* 32023 */ 'C', 'M', 'O', 'V', 'E', '6', '4', 'r', 'r', 0,
  /* 32033 */ 'B', 'S', 'F', '6', '4', 'r', 'r', 0,
  /* 32041 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '6', '4', 'r', 'r', 0,
  /* 32053 */ 'C', 'M', 'O', 'V', 'G', '6', '4', 'r', 'r', 0,
  /* 32063 */ 'B', 'Z', 'H', 'I', '6', '4', 'r', 'r', 0,
  /* 32072 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32091 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32109 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32123 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32142 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32160 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32174 */ 'B', 'L', 'S', 'I', '6', '4', 'r', 'r', 0,
  /* 32183 */ 'B', 'L', 'S', 'M', 'S', 'K', '6', '4', 'r', 'r', 0,
  /* 32194 */ 'L', 'S', 'L', '6', '4', 'r', 'r', 0,
  /* 32202 */ 'I', 'M', 'U', 'L', '6', '4', 'r', 'r', 0,
  /* 32211 */ 'C', 'M', 'O', 'V', 'L', '6', '4', 'r', 'r', 0,
  /* 32221 */ 'A', 'N', 'D', 'N', '6', '4', 'r', 'r', 0,
  /* 32230 */ 'C', 'M', 'O', 'V', 'N', 'O', '6', '4', 'r', 'r', 0,
  /* 32241 */ 'C', 'M', 'O', 'V', 'O', '6', '4', 'r', 'r', 0,
  /* 32251 */ 'P', 'D', 'E', 'P', '6', '4', 'r', 'r', 0,
  /* 32260 */ 'C', 'M', 'P', '6', '4', 'r', 'r', 0,
  /* 32268 */ 'C', 'M', 'O', 'V', 'N', 'P', '6', '4', 'r', 'r', 0,
  /* 32279 */ 'C', 'M', 'O', 'V', 'P', '6', '4', 'r', 'r', 0,
  /* 32289 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '6', '4', 'r', 'r', 0,
  /* 32302 */ 'L', 'A', 'R', '6', '4', 'r', 'r', 0,
  /* 32310 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'F', 'R', '6', '4', 'r', 'r', 0,
  /* 32326 */ 'X', 'O', 'R', '6', '4', 'r', 'r', 0,
  /* 32334 */ 'B', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 32342 */ 'B', 'L', 'S', 'R', '6', '4', 'r', 'r', 0,
  /* 32351 */ 'B', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 32359 */ 'B', 'E', 'X', 'T', 'R', '6', '4', 'r', 'r', 0,
  /* 32369 */ 'C', 'M', 'O', 'V', 'N', 'S', '6', '4', 'r', 'r', 0,
  /* 32380 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 32398 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', '6', '4', 'r', 'r', 0,
  /* 32415 */ 'B', 'T', 'S', '6', '4', 'r', 'r', 0,
  /* 32423 */ 'C', 'M', 'O', 'V', 'S', '6', '4', 'r', 'r', 0,
  /* 32433 */ 'B', 'T', '6', '4', 'r', 'r', 0,
  /* 32440 */ 'P', 'O', 'P', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32451 */ 'L', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32461 */ 'T', 'Z', 'C', 'N', 'T', '6', '4', 'r', 'r', 0,
  /* 32471 */ 'T', 'E', 'S', 'T', '6', '4', 'r', 'r', 0,
  /* 32480 */ 'P', 'E', 'X', 'T', '6', '4', 'r', 'r', 0,
  /* 32489 */ 'M', 'O', 'V', '6', '4', 'r', 'r', 0,
  /* 32497 */ 'A', 'D', 'C', 'X', '6', '4', 'r', 'r', 0,
  /* 32506 */ 'S', 'H', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 32515 */ 'M', 'U', 'L', 'X', '6', '4', 'r', 'r', 0,
  /* 32524 */ 'A', 'D', 'O', 'X', '6', '4', 'r', 'r', 0,
  /* 32533 */ 'S', 'A', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 32542 */ 'S', 'H', 'R', 'X', '6', '4', 'r', 'r', 0,
  /* 32551 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', 0,
  /* 32562 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'f', 'r', 'o', 'm', '6', '4', 'r', 'r', 0,
  /* 32581 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 32598 */ 'V', 'M', 'O', 'V', 'S', 'D', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 32611 */ 'V', 'M', 'O', 'V', 'P', 'Q', 'I', 't', 'o', '6', '4', 'r', 'r', 0,
  /* 32625 */ 'V', 'M', 'O', 'V', 'Q', 's', '6', '4', 'r', 'r', 0,
  /* 32636 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 32651 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 32663 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'D', '4', 'r', 'r', 0,
  /* 32676 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 32691 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 32703 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'D', '4', 'r', 'r', 0,
  /* 32716 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 32728 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', 0,
  /* 32741 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 32753 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', 0,
  /* 32766 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 32781 */ 'V', 'F', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 32793 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'P', 'S', '4', 'r', 'r', 0,
  /* 32806 */ 'V', 'F', 'M', 'S', 'U', 'B', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 32821 */ 'V', 'F', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 32833 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'P', 'S', '4', 'r', 'r', 0,
  /* 32846 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 32858 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', 0,
  /* 32871 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 32883 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', 0,
  /* 32896 */ 'C', 'M', 'O', 'V', 'A', '1', '6', 'r', 'r', 0,
  /* 32906 */ 'S', 'B', 'B', '1', '6', 'r', 'r', 0,
  /* 32914 */ 'S', 'U', 'B', '1', '6', 'r', 'r', 0,
  /* 32922 */ 'C', 'M', 'O', 'V', 'B', '1', '6', 'r', 'r', 0,
  /* 32932 */ 'A', 'D', 'C', '1', '6', 'r', 'r', 0,
  /* 32940 */ 'B', 'T', 'C', '1', '6', 'r', 'r', 0,
  /* 32948 */ 'X', 'A', 'D', 'D', '1', '6', 'r', 'r', 0,
  /* 32957 */ 'A', 'N', 'D', '1', '6', 'r', 'r', 0,
  /* 32965 */ 'C', 'M', 'O', 'V', 'A', 'E', '1', '6', 'r', 'r', 0,
  /* 32976 */ 'C', 'M', 'O', 'V', 'B', 'E', '1', '6', 'r', 'r', 0,
  /* 32987 */ 'C', 'M', 'O', 'V', 'G', 'E', '1', '6', 'r', 'r', 0,
  /* 32998 */ 'C', 'M', 'O', 'V', 'L', 'E', '1', '6', 'r', 'r', 0,
  /* 33009 */ 'C', 'M', 'O', 'V', 'N', 'E', '1', '6', 'r', 'r', 0,
  /* 33020 */ 'C', 'M', 'O', 'V', 'E', '1', '6', 'r', 'r', 0,
  /* 33030 */ 'B', 'S', 'F', '1', '6', 'r', 'r', 0,
  /* 33038 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '1', '6', 'r', 'r', 0,
  /* 33050 */ 'C', 'M', 'O', 'V', 'G', '1', '6', 'r', 'r', 0,
  /* 33060 */ 'A', 'R', 'P', 'L', '1', '6', 'r', 'r', 0,
  /* 33069 */ 'L', 'S', 'L', '1', '6', 'r', 'r', 0,
  /* 33077 */ 'I', 'M', 'U', 'L', '1', '6', 'r', 'r', 0,
  /* 33086 */ 'C', 'M', 'O', 'V', 'L', '1', '6', 'r', 'r', 0,
  /* 33096 */ 'I', 'N', '1', '6', 'r', 'r', 0,
  /* 33103 */ 'C', 'M', 'O', 'V', 'N', 'O', '1', '6', 'r', 'r', 0,
  /* 33114 */ 'C', 'M', 'O', 'V', 'O', '1', '6', 'r', 'r', 0,
  /* 33124 */ 'C', 'M', 'P', '1', '6', 'r', 'r', 0,
  /* 33132 */ 'C', 'M', 'O', 'V', 'N', 'P', '1', '6', 'r', 'r', 0,
  /* 33143 */ 'C', 'M', 'O', 'V', 'P', '1', '6', 'r', 'r', 0,
  /* 33153 */ 'L', 'A', 'R', '1', '6', 'r', 'r', 0,
  /* 33161 */ 'X', 'O', 'R', '1', '6', 'r', 'r', 0,
  /* 33169 */ 'B', 'S', 'R', '1', '6', 'r', 'r', 0,
  /* 33177 */ 'B', 'T', 'R', '1', '6', 'r', 'r', 0,
  /* 33185 */ 'C', 'M', 'O', 'V', 'N', 'S', '1', '6', 'r', 'r', 0,
  /* 33196 */ 'B', 'T', 'S', '1', '6', 'r', 'r', 0,
  /* 33204 */ 'C', 'M', 'O', 'V', 'S', '1', '6', 'r', 'r', 0,
  /* 33214 */ 'B', 'T', '1', '6', 'r', 'r', 0,
  /* 33221 */ 'P', 'O', 'P', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33232 */ 'L', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33242 */ 'T', 'Z', 'C', 'N', 'T', '1', '6', 'r', 'r', 0,
  /* 33252 */ 'T', 'E', 'S', 'T', '1', '6', 'r', 'r', 0,
  /* 33261 */ 'O', 'U', 'T', '1', '6', 'r', 'r', 0,
  /* 33269 */ 'M', 'O', 'V', '1', '6', 'r', 'r', 0,
  /* 33277 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '2', '5', '6', 'r', 'r', 0,
  /* 33291 */ 'V', 'P', 'E', 'R', 'M', '2', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33304 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33319 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'F', '1', '2', '8', 'r', 'r', 0,
  /* 33333 */ 'V', 'P', 'E', 'R', 'M', '2', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 33346 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 33361 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'I', '1', '2', '8', 'r', 'r', 0,
  /* 33375 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 33391 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'M', '1', '2', '8', 'r', 'r', 0,
  /* 33407 */ 'V', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '1', '2', '8', 'r', 'r', 0,
  /* 33421 */ 'V', 'A', 'E', 'S', 'K', 'E', 'Y', 'G', 'E', 'N', 'A', 'S', 'S', 'I', 'S', 'T', '1', '2', '8', 'r', 'r', 0,
  /* 33443 */ 'S', 'B', 'B', '8', 'r', 'r', 0,
  /* 33450 */ 'S', 'U', 'B', '8', 'r', 'r', 0,
  /* 33457 */ 'A', 'D', 'C', '8', 'r', 'r', 0,
  /* 33464 */ 'X', 'A', 'D', 'D', '8', 'r', 'r', 0,
  /* 33472 */ 'A', 'N', 'D', '8', 'r', 'r', 0,
  /* 33479 */ 'C', 'M', 'P', 'X', 'C', 'H', 'G', '8', 'r', 'r', 0,
  /* 33490 */ 'I', 'N', '8', 'r', 'r', 0,
  /* 33496 */ 'C', 'M', 'P', '8', 'r', 'r', 0,
  /* 33503 */ 'X', 'O', 'R', '8', 'r', 'r', 0,
  /* 33510 */ 'T', 'E', 'S', 'T', '8', 'r', 'r', 0,
  /* 33518 */ 'O', 'U', 'T', '8', 'r', 'r', 0,
  /* 33525 */ 'M', 'O', 'V', '8', 'r', 'r', 0,
  /* 33532 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'r', 'r', 0,
  /* 33542 */ 'V', 'P', 'S', 'H', 'A', 'B', 'r', 'r', 0,
  /* 33551 */ 'V', 'P', 'S', 'U', 'B', 'B', 'r', 'r', 0,
  /* 33560 */ 'V', 'P', 'A', 'D', 'D', 'B', 'r', 'r', 0,
  /* 33569 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'r', 'r', 0,
  /* 33579 */ 'V', 'P', 'A', 'V', 'G', 'B', 'r', 'r', 0,
  /* 33588 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 33600 */ 'M', 'M', 'X', '_', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'r', 'r', 0,
  /* 33615 */ 'V', 'P', 'S', 'H', 'L', 'B', 'r', 'r', 0,
  /* 33624 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'r', 'r', 0,
  /* 33634 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'r', 'r', 0,
  /* 33645 */ 'V', 'P', 'I', 'N', 'S', 'R', 'B', 'r', 'r', 0,
  /* 33655 */ 'V', 'P', 'E', 'X', 'T', 'R', 'B', 'r', 'r', 0,
  /* 33665 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'r', 'r', 0,
  /* 33675 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'r', 'r', 0,
  /* 33685 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'r', 'r', 0,
  /* 33695 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'r', 'r', 0,
  /* 33706 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'r', 'r', 0,
  /* 33717 */ 'P', 'A', 'V', 'G', 'U', 'S', 'B', 'r', 'r', 0,
  /* 33727 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'r', 'r', 0,
  /* 33737 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'r', 'r', 0,
  /* 33748 */ 'V', 'P', 'R', 'O', 'T', 'B', 'r', 'r', 0,
  /* 33757 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'r', 'r', 0,
  /* 33772 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'r', 'r', 0,
  /* 33782 */ 'P', 'F', 'S', 'U', 'B', 'r', 'r', 0,
  /* 33790 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'r', 'r', 0,
  /* 33800 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'r', 'r', 0,
  /* 33812 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'r', 'r', 0,
  /* 33824 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'r', 'r', 0,
  /* 33836 */ 'P', 'F', 'A', 'C', 'C', 'r', 'r', 0,
  /* 33844 */ 'P', 'F', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 33853 */ 'P', 'F', 'P', 'N', 'A', 'C', 'C', 'r', 'r', 0,
  /* 33863 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'r', 'r', 0,
  /* 33873 */ 'V', 'A', 'E', 'S', 'I', 'M', 'C', 'r', 'r', 0,
  /* 33883 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'r', 'r', 0,
  /* 33893 */ 'V', 'P', 'S', 'H', 'A', 'D', 'r', 'r', 0,
  /* 33902 */ 'V', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 33911 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'D', 'r', 'r', 0,
  /* 33923 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'D', 'r', 'r', 0,
  /* 33934 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'D', 'r', 'r', 0,
  /* 33946 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 33956 */ 'V', 'P', 'S', 'U', 'B', 'D', 'r', 'r', 0,
  /* 33965 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'r', 'r', 0,
  /* 33977 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'r', 'r', 0,
  /* 33989 */ 'P', 'F', 'A', 'D', 'D', 'r', 'r', 0,
  /* 33997 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 34007 */ 'V', 'P', 'A', 'D', 'D', 'D', 'r', 'r', 0,
  /* 34016 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'D', 'r', 'r', 0,
  /* 34027 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'D', 'r', 'r', 0,
  /* 34039 */ 'P', 'I', '2', 'F', 'D', 'r', 'r', 0,
  /* 34047 */ 'P', 'F', '2', 'I', 'D', 'r', 'r', 0,
  /* 34055 */ 'V', 'P', 'S', 'H', 'L', 'D', 'r', 'r', 0,
  /* 34064 */ 'V', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34073 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34085 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'r', 'r', 0,
  /* 34095 */ 'V', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 34104 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'D', 'r', 'r', 0,
  /* 34116 */ 'V', 'P', 'A', 'N', 'D', 'r', 'r', 0,
  /* 34124 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'r', 'r', 0,
  /* 34134 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'D', 'r', 'r', 0,
  /* 34147 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'r', 'r', 0,
  /* 34159 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'r', 'r', 0,
  /* 34171 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34183 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34194 */ 'P', 'S', 'W', 'A', 'P', 'D', 'r', 'r', 0,
  /* 34203 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34215 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34225 */ 'V', 'S', 'U', 'B', 'P', 'D', 'r', 'r', 0,
  /* 34234 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'r', 'r', 0,
  /* 34244 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'r', 'r', 0,
  /* 34254 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34264 */ 'V', 'A', 'D', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34273 */ 'V', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34282 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'D', 'r', 'r', 0,
  /* 34293 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'r', 'r', 0,
  /* 34305 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'r', 'r', 0,
  /* 34317 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'r', 'r', 0,
  /* 34329 */ 'V', 'M', 'U', 'L', 'P', 'D', 'r', 'r', 0,
  /* 34338 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 34348 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'D', 'r', 'r', 0,
  /* 34360 */ 'V', 'M', 'I', 'N', 'P', 'D', 'r', 'r', 0,
  /* 34369 */ 'V', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 34377 */ 'V', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 34386 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 34397 */ 'V', 'F', 's', 'O', 'R', 'P', 'D', 'r', 'r', 0,
  /* 34407 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'r', 'r', 0,
  /* 34417 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'r', 'r', 0,
  /* 34427 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'r', 'r', 0,
  /* 34439 */ 'V', 'D', 'I', 'V', 'P', 'D', 'r', 'r', 0,
  /* 34448 */ 'V', 'M', 'A', 'X', 'P', 'D', 'r', 'r', 0,
  /* 34457 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'D', 'r', 'r', 0,
  /* 34467 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'r', 'r', 0,
  /* 34478 */ 'V', 'P', 'I', 'N', 'S', 'R', 'D', 'r', 'r', 0,
  /* 34488 */ 'V', 'P', 'E', 'X', 'T', 'R', 'D', 'r', 'r', 0,
  /* 34498 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 34514 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'D', 'r', 'r', 0,
  /* 34529 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 34545 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'D', 'r', 'r', 0,
  /* 34560 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', 0,
  /* 34569 */ 'V', 'M', 'I', 'N', 'C', 'S', 'D', 'r', 'r', 0,
  /* 34579 */ 'V', 'M', 'A', 'X', 'C', 'S', 'D', 'r', 'r', 0,
  /* 34589 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', 0,
  /* 34598 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 34613 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 34627 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 34641 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'D', 'r', 'r', 0,
  /* 34654 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', 0,
  /* 34663 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 34673 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', 0,
  /* 34682 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 34695 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'D', 'r', 'r', 0,
  /* 34707 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', 0,
  /* 34716 */ 'V', 'M', 'O', 'V', 'S', 'D', 'r', 'r', 0,
  /* 34725 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 34735 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', 0,
  /* 34744 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'D', 'r', 'r', 0,
  /* 34754 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'S', 'D', 'r', 'r', 0,
  /* 34767 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'r', 'r', 0,
  /* 34778 */ 'V', 'P', 'R', 'O', 'T', 'D', 'r', 'r', 0,
  /* 34787 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'r', 'r', 0,
  /* 34802 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'r', 'r', 0,
  /* 34812 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'r', 'r', 0,
  /* 34822 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'r', 'r', 0,
  /* 34832 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'r', 'r', 0,
  /* 34842 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'r', 'r', 0,
  /* 34852 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'D', 'r', 'r', 0,
  /* 34863 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 34874 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'r', 'r', 0,
  /* 34885 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'r', 'r', 0,
  /* 34898 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'r', 'r', 0,
  /* 34911 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34922 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34934 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34946 */ 'V', 'P', 'M', 'A', 'D', 'C', 'S', 'S', 'W', 'D', 'r', 'r', 0,
  /* 34959 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'D', 'r', 'r', 0,
  /* 34971 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'r', 'r', 0,
  /* 34983 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'r', 'r', 0,
  /* 34995 */ 'P', 'F', 'C', 'M', 'P', 'G', 'E', 'r', 'r', 0,
  /* 35005 */ 'L', 'D', '_', 'F', 'r', 'r', 0,
  /* 35012 */ 'S', 'T', '_', 'F', 'r', 'r', 0,
  /* 35019 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'r', 'r', 0,
  /* 35031 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 35043 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'H', 'r', 'r', 0,
  /* 35056 */ 'V', 'M', 'O', 'V', 'P', 'D', 'I', '2', 'D', 'I', 'r', 'r', 0,
  /* 35069 */ 'V', 'M', 'O', 'V', 'S', 'S', '2', 'D', 'I', 'r', 'r', 0,
  /* 35081 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35094 */ 'V', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35108 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Z', 'D', 'I', '2', 'P', 'D', 'I', 'r', 'r', 0,
  /* 35125 */ 'V', 'M', 'O', 'V', 'Z', 'Q', 'I', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35139 */ 'V', 'M', 'O', 'V', 'Z', 'P', 'Q', 'I', 'L', 'o', '2', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35156 */ 'V', 'M', 'O', 'V', '6', '4', 't', 'o', 'P', 'Q', 'I', 'r', 'r', 0,
  /* 35170 */ 'V', 'P', 'C', 'M', 'P', 'E', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 35183 */ 'V', 'P', 'C', 'M', 'P', 'I', 'S', 'T', 'R', 'I', 'r', 'r', 0,
  /* 35196 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35213 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35229 */ 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'I', 'r', 'r', 0,
  /* 35241 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35258 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35274 */ 'V', 'C', 'V', 'T', 'S', 'S', '2', 'S', 'I', 'r', 'r', 0,
  /* 35286 */ 'V', 'P', 'M', 'A', 'C', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 35298 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'D', 'Q', 'L', 'r', 'r', 0,
  /* 35311 */ 'P', 'F', 'M', 'U', 'L', 'r', 'r', 0,
  /* 35319 */ 'V', 'P', 'P', 'E', 'R', 'M', 'r', 'r', 0,
  /* 35328 */ 'V', 'P', 'A', 'N', 'D', 'N', 'r', 'r', 0,
  /* 35337 */ 'P', 'F', 'M', 'I', 'N', 'r', 'r', 0,
  /* 35345 */ 'P', 'F', 'R', 'C', 'P', 'r', 'r', 0,
  /* 35353 */ 'S', 'T', '_', 'F', 'P', 'r', 'r', 0,
  /* 35361 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'r', 'r', 0,
  /* 35372 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'r', 'r', 0,
  /* 35384 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'r', 'r', 0,
  /* 35396 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'F', 'R', '6', '4', '2', 'Q', 'r', 'r', 0,
  /* 35412 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', 'Q', '2', 'Q', 'r', 'r', 0,
  /* 35426 */ 'V', 'P', 'S', 'H', 'A', 'Q', 'r', 'r', 0,
  /* 35435 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'Q', 'r', 'r', 0,
  /* 35446 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 35458 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'r', 'r', 0,
  /* 35467 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 35479 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'r', 'r', 0,
  /* 35491 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 35504 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'r', 'r', 0,
  /* 35516 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'Q', '2', 'D', 'Q', 'r', 'r', 0,
  /* 35530 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 35543 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'r', 'r', 0,
  /* 35555 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Q', 'r', 'r', 0,
  /* 35566 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 35575 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Q', 'r', 'r', 0,
  /* 35586 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'r', 'r', 0,
  /* 35599 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 35612 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'r', 'r', 0,
  /* 35622 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 35636 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 35650 */ 'V', 'P', 'C', 'L', 'M', 'U', 'L', 'Q', 'D', 'Q', 'r', 'r', 0,
  /* 35663 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 35675 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'r', 'r', 0,
  /* 35686 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 35698 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'r', 'r', 0,
  /* 35710 */ 'P', 'F', 'C', 'M', 'P', 'E', 'Q', 'r', 'r', 0,
  /* 35720 */ 'V', 'P', 'S', 'H', 'L', 'Q', 'r', 'r', 0,
  /* 35729 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 35738 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'Q', 'r', 'r', 0,
  /* 35750 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 35759 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'Q', 'r', 'r', 0,
  /* 35771 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'r', 'r', 0,
  /* 35782 */ 'V', 'P', 'I', 'N', 'S', 'R', 'Q', 'r', 'r', 0,
  /* 35792 */ 'V', 'P', 'E', 'X', 'T', 'R', 'Q', 'r', 'r', 0,
  /* 35802 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'r', 'r', 0,
  /* 35813 */ 'V', 'P', 'R', 'O', 'T', 'Q', 'r', 'r', 0,
  /* 35822 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'r', 'r', 0,
  /* 35837 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 35847 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'r', 'r', 0,
  /* 35857 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Q', 'r', 'r', 0,
  /* 35868 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'W', 'Q', 'r', 'r', 0,
  /* 35880 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 35892 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'r', 'r', 0,
  /* 35904 */ 'P', 'F', 'S', 'U', 'B', 'R', 'r', 'r', 0,
  /* 35913 */ 'V', 'P', 'O', 'R', 'r', 'r', 0,
  /* 35920 */ 'V', 'P', 'X', 'O', 'R', 'r', 'r', 0,
  /* 35928 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'r', 'r', 0,
  /* 35940 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'r', 'r', 0,
  /* 35952 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', '2', 'P', 'S', 'r', 'r', 0,
  /* 35965 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'r', 'r', 0,
  /* 35977 */ 'F', 's', 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 35989 */ 'F', 's', 'M', 'O', 'V', 'A', 'P', 'S', 'r', 'r', 0,
  /* 36000 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36012 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36022 */ 'V', 'S', 'U', 'B', 'P', 'S', 'r', 'r', 0,
  /* 36031 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'r', 'r', 0,
  /* 36041 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'r', 'r', 0,
  /* 36051 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36061 */ 'V', 'A', 'D', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36070 */ 'V', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36079 */ 'V', 'F', 's', 'A', 'N', 'D', 'P', 'S', 'r', 'r', 0,
  /* 36090 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'r', 'r', 0,
  /* 36102 */ 'V', 'M', 'O', 'V', 'L', 'H', 'P', 'S', 'r', 'r', 0,
  /* 36113 */ 'V', 'M', 'O', 'V', 'H', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36124 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36136 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36148 */ 'V', 'M', 'U', 'L', 'P', 'S', 'r', 'r', 0,
  /* 36157 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36167 */ 'V', 'F', 's', 'A', 'N', 'D', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36179 */ 'V', 'M', 'I', 'N', 'P', 'S', 'r', 'r', 0,
  /* 36188 */ 'V', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36196 */ 'V', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36205 */ 'V', 'F', 's', 'X', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36216 */ 'V', 'F', 's', 'O', 'R', 'P', 'S', 'r', 'r', 0,
  /* 36226 */ 'V', 'E', 'X', 'T', 'R', 'A', 'C', 'T', 'P', 'S', 'r', 'r', 0,
  /* 36239 */ 'V', 'I', 'N', 'S', 'E', 'R', 'T', 'P', 'S', 'r', 'r', 0,
  /* 36251 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'r', 'r', 0,
  /* 36261 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'r', 'r', 0,
  /* 36271 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'r', 'r', 0,
  /* 36283 */ 'V', 'D', 'I', 'V', 'P', 'S', 'r', 'r', 0,
  /* 36292 */ 'V', 'M', 'A', 'X', 'P', 'S', 'r', 'r', 0,
  /* 36301 */ 'V', 'F', 'R', 'C', 'Z', 'P', 'S', 'r', 'r', 0,
  /* 36311 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 36327 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'D', '2', 'S', 'S', 'r', 'r', 0,
  /* 36342 */ 'V', 'M', 'O', 'V', 'D', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 36354 */ 'I', 'n', 't', '_', 'V', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 36370 */ 'I', 'n', 't', '_', 'C', 'V', 'T', 'S', 'I', '2', 'S', 'S', 'r', 'r', 0,
  /* 36385 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', 0,
  /* 36394 */ 'V', 'M', 'I', 'N', 'C', 'S', 'S', 'r', 'r', 0,
  /* 36404 */ 'V', 'M', 'A', 'X', 'C', 'S', 'S', 'r', 'r', 0,
  /* 36414 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', 0,
  /* 36423 */ 'I', 'n', 't', '_', 'V', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 36438 */ 'I', 'n', 't', '_', 'U', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 36452 */ 'I', 'n', 't', '_', 'V', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 36466 */ 'I', 'n', 't', '_', 'C', 'O', 'M', 'I', 'S', 'S', 'r', 'r', 0,
  /* 36479 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', 0,
  /* 36488 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', 0,
  /* 36497 */ 'I', 'n', 't', '_', 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 36510 */ 'I', 'n', 't', '_', 'C', 'M', 'P', 'S', 'S', 'r', 'r', 0,
  /* 36522 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'r', 'r', 0,
  /* 36537 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', 0,
  /* 36546 */ 'V', 'M', 'O', 'V', 'S', 'S', 'r', 'r', 0,
  /* 36555 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', 0,
  /* 36564 */ 'V', 'F', 'R', 'C', 'Z', 'S', 'S', 'r', 'r', 0,
  /* 36574 */ 'P', 'F', 'C', 'M', 'P', 'G', 'T', 'r', 'r', 0,
  /* 36584 */ 'M', 'W', 'A', 'I', 'T', 'r', 'r', 0,
  /* 36592 */ 'P', 'F', 'R', 'S', 'Q', 'R', 'T', 'r', 'r', 0,
  /* 36602 */ 'V', 'A', 'E', 'S', 'D', 'E', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 36616 */ 'V', 'A', 'E', 'S', 'E', 'N', 'C', 'L', 'A', 'S', 'T', 'r', 'r', 0,
  /* 36630 */ 'V', 'P', 'T', 'E', 'S', 'T', 'r', 'r', 0,
  /* 36639 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'r', 'r', 0,
  /* 36649 */ 'V', 'P', 'C', 'M', 'O', 'V', 'r', 'r', 0,
  /* 36658 */ 'V', 'P', 'S', 'H', 'A', 'W', 'r', 'r', 0,
  /* 36667 */ 'V', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 36676 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'A', 'W', 'r', 'r', 0,
  /* 36688 */ 'V', 'P', 'H', 'S', 'U', 'B', 'B', 'W', 'r', 'r', 0,
  /* 36699 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'r', 'r', 0,
  /* 36709 */ 'V', 'P', 'H', 'A', 'D', 'D', 'B', 'W', 'r', 'r', 0,
  /* 36720 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'r', 'r', 0,
  /* 36733 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'r', 'r', 0,
  /* 36746 */ 'V', 'P', 'H', 'A', 'D', 'D', 'U', 'B', 'W', 'r', 'r', 0,
  /* 36758 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 36768 */ 'V', 'P', 'S', 'U', 'B', 'W', 'r', 'r', 0,
  /* 36777 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'r', 'r', 0,
  /* 36789 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'r', 'r', 0,
  /* 36801 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 36811 */ 'V', 'P', 'A', 'D', 'D', 'W', 'r', 'r', 0,
  /* 36820 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'r', 'r', 0,
  /* 36832 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'r', 'r', 0,
  /* 36844 */ 'P', 'I', '2', 'F', 'W', 'r', 'r', 0,
  /* 36852 */ 'V', 'P', 'A', 'V', 'G', 'W', 'r', 'r', 0,
  /* 36861 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'r', 'r', 0,
  /* 36871 */ 'P', 'F', '2', 'I', 'W', 'r', 'r', 0,
  /* 36879 */ 'V', 'P', 'S', 'H', 'L', 'W', 'r', 'r', 0,
  /* 36888 */ 'V', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36897 */ 'M', 'M', 'X', '_', 'P', 'S', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36909 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'r', 'r', 0,
  /* 36919 */ 'V', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 36928 */ 'M', 'M', 'X', '_', 'P', 'S', 'R', 'L', 'W', 'r', 'r', 0,
  /* 36940 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'r', 'r', 0,
  /* 36950 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'r', 'r', 0,
  /* 36961 */ 'P', 'M', 'U', 'L', 'H', 'R', 'W', 'r', 'r', 0,
  /* 36971 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'r', 'r', 0,
  /* 36981 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'r', 'r', 0,
  /* 36991 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'r', 'r', 0,
  /* 37001 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'r', 'r', 0,
  /* 37012 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'r', 'r', 0,
  /* 37023 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'r', 'r', 0,
  /* 37033 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'r', 'r', 0,
  /* 37044 */ 'V', 'P', 'R', 'O', 'T', 'W', 'r', 'r', 0,
  /* 37053 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'r', 'r', 0,
  /* 37068 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'r', 'r', 0,
  /* 37079 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'r', 'r', 0,
  /* 37089 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'r', 'r', 0,
  /* 37099 */ 'V', 'P', 'M', 'A', 'C', 'S', 'W', 'W', 'r', 'r', 0,
  /* 37110 */ 'V', 'P', 'M', 'A', 'C', 'S', 'S', 'W', 'W', 'r', 'r', 0,
  /* 37122 */ 'P', 'F', 'M', 'A', 'X', 'r', 'r', 0,
  /* 37130 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'A', 'Y', 'r', 'r', 0,
  /* 37141 */ 'V', 'P', 'S', 'U', 'B', 'B', 'Y', 'r', 'r', 0,
  /* 37151 */ 'V', 'P', 'A', 'D', 'D', 'B', 'Y', 'r', 'r', 0,
  /* 37161 */ 'V', 'P', 'S', 'H', 'U', 'F', 'B', 'Y', 'r', 'r', 0,
  /* 37172 */ 'V', 'P', 'A', 'V', 'G', 'B', 'Y', 'r', 'r', 0,
  /* 37182 */ 'V', 'P', 'M', 'O', 'V', 'M', 'S', 'K', 'B', 'Y', 'r', 'r', 0,
  /* 37195 */ 'V', 'P', 'S', 'I', 'G', 'N', 'B', 'Y', 'r', 'r', 0,
  /* 37206 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'Y', 'r', 'r', 0,
  /* 37218 */ 'V', 'P', 'S', 'U', 'B', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37229 */ 'V', 'P', 'A', 'D', 'D', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37240 */ 'V', 'P', 'M', 'I', 'N', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37251 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37263 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37275 */ 'V', 'P', 'M', 'A', 'X', 'S', 'B', 'Y', 'r', 'r', 0,
  /* 37286 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 37298 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'B', 'Y', 'r', 'r', 0,
  /* 37314 */ 'V', 'P', 'M', 'I', 'N', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 37325 */ 'V', 'P', 'M', 'A', 'X', 'U', 'B', 'Y', 'r', 'r', 0,
  /* 37336 */ 'V', 'P', 'B', 'L', 'E', 'N', 'D', 'V', 'B', 'Y', 'r', 'r', 0,
  /* 37349 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 37362 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'Y', 'r', 'r', 0,
  /* 37375 */ 'V', 'P', 'S', 'R', 'A', 'D', 'Y', 'r', 'r', 0,
  /* 37385 */ 'V', 'P', 'H', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 37396 */ 'V', 'P', 'S', 'U', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 37406 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 37419 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'D', 'Y', 'r', 'r', 0,
  /* 37432 */ 'V', 'P', 'H', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 37443 */ 'V', 'P', 'A', 'D', 'D', 'D', 'Y', 'r', 'r', 0,
  /* 37453 */ 'V', 'P', 'S', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 37463 */ 'V', 'P', 'M', 'U', 'L', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 37474 */ 'V', 'P', 'S', 'R', 'L', 'D', 'Y', 'r', 'r', 0,
  /* 37484 */ 'V', 'P', 'E', 'R', 'M', 'D', 'Y', 'r', 'r', 0,
  /* 37494 */ 'V', 'P', 'A', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 37503 */ 'V', 'P', 'S', 'I', 'G', 'N', 'D', 'Y', 'r', 'r', 0,
  /* 37514 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37527 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37540 */ 'V', 'M', 'O', 'V', 'A', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37551 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37564 */ 'V', 'H', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37575 */ 'V', 'S', 'U', 'B', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37585 */ 'V', 'M', 'I', 'N', 'C', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37596 */ 'V', 'M', 'A', 'X', 'C', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37607 */ 'V', 'H', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37618 */ 'V', 'A', 'D', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37628 */ 'V', 'A', 'N', 'D', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37638 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37651 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37664 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37677 */ 'V', 'M', 'U', 'L', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37687 */ 'V', 'A', 'N', 'D', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37698 */ 'V', 'M', 'I', 'N', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37708 */ 'V', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37717 */ 'V', 'X', 'O', 'R', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37727 */ 'V', 'T', 'E', 'S', 'T', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37738 */ 'V', 'M', 'O', 'V', 'U', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37749 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37762 */ 'V', 'D', 'I', 'V', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37772 */ 'V', 'M', 'A', 'X', 'P', 'D', 'Y', 'r', 'r', 0,
  /* 37782 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'Y', 'r', 'r', 0,
  /* 37794 */ 'V', 'P', 'M', 'I', 'N', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 37805 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 37821 */ 'V', 'P', 'M', 'A', 'X', 'S', 'D', 'Y', 'r', 'r', 0,
  /* 37832 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 37844 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'D', 'Y', 'r', 'r', 0,
  /* 37860 */ 'V', 'P', 'M', 'I', 'N', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 37871 */ 'V', 'P', 'M', 'A', 'X', 'U', 'D', 'Y', 'r', 'r', 0,
  /* 37882 */ 'V', 'P', 'S', 'R', 'A', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37893 */ 'V', 'P', 'S', 'L', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37904 */ 'V', 'P', 'S', 'R', 'L', 'V', 'D', 'Y', 'r', 'r', 0,
  /* 37915 */ 'V', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37927 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37941 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37955 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37968 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'D', 'Y', 'r', 'r', 0,
  /* 37981 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'H', 'Y', 'r', 'r', 0,
  /* 37994 */ 'V', 'P', 'A', 'N', 'D', 'N', 'Y', 'r', 'r', 0,
  /* 38004 */ 'V', 'M', 'O', 'V', 'D', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38016 */ 'V', 'M', 'O', 'V', 'S', 'H', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38029 */ 'V', 'M', 'O', 'V', 'S', 'L', 'D', 'U', 'P', 'Y', 'r', 'r', 0,
  /* 38042 */ 'V', 'P', 'S', 'U', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38052 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38065 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'Q', 'Y', 'r', 'r', 0,
  /* 38078 */ 'V', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38092 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38105 */ 'V', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38119 */ 'V', 'C', 'V', 'T', 'P', 'S', '2', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38132 */ 'V', 'P', 'A', 'D', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38142 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38156 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38170 */ 'V', 'P', 'M', 'U', 'L', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38181 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38196 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'Q', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38211 */ 'V', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38223 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38236 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'D', 'Q', 'Y', 'r', 'r', 0,
  /* 38249 */ 'V', 'P', 'S', 'L', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 38259 */ 'V', 'P', 'S', 'R', 'L', 'Q', 'Y', 'r', 'r', 0,
  /* 38269 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'Q', 'Y', 'r', 'r', 0,
  /* 38281 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 38293 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'Q', 'Y', 'r', 'r', 0,
  /* 38309 */ 'V', 'P', 'S', 'L', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 38320 */ 'V', 'P', 'S', 'R', 'L', 'V', 'Q', 'Y', 'r', 'r', 0,
  /* 38331 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 38344 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'W', 'Q', 'Y', 'r', 'r', 0,
  /* 38357 */ 'V', 'P', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 38365 */ 'V', 'P', 'X', 'O', 'R', 'Y', 'r', 'r', 0,
  /* 38374 */ 'V', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38387 */ 'V', 'C', 'V', 'T', 'P', 'H', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38400 */ 'V', 'C', 'V', 'T', 'D', 'Q', '2', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38413 */ 'V', 'M', 'O', 'V', 'A', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38424 */ 'V', 'A', 'D', 'D', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38437 */ 'V', 'H', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38448 */ 'V', 'S', 'U', 'B', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38458 */ 'V', 'M', 'I', 'N', 'C', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38469 */ 'V', 'M', 'A', 'X', 'C', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38480 */ 'V', 'H', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38491 */ 'V', 'A', 'D', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38501 */ 'V', 'A', 'N', 'D', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38511 */ 'V', 'U', 'N', 'P', 'C', 'K', 'H', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38524 */ 'V', 'P', 'E', 'R', 'M', 'I', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38537 */ 'V', 'U', 'N', 'P', 'C', 'K', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38550 */ 'V', 'M', 'U', 'L', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38560 */ 'V', 'P', 'E', 'R', 'M', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38571 */ 'V', 'A', 'N', 'D', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38582 */ 'V', 'M', 'I', 'N', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38592 */ 'V', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38601 */ 'V', 'X', 'O', 'R', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38611 */ 'V', 'T', 'E', 'S', 'T', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38622 */ 'V', 'M', 'O', 'V', 'U', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38633 */ 'V', 'B', 'L', 'E', 'N', 'D', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38646 */ 'V', 'D', 'I', 'V', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38656 */ 'V', 'M', 'A', 'X', 'P', 'S', 'Y', 'r', 'r', 0,
  /* 38666 */ 'V', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'S', 'S', 'Y', 'r', 'r', 0,
  /* 38682 */ 'V', 'P', 'T', 'E', 'S', 'T', 'Y', 'r', 'r', 0,
  /* 38692 */ 'V', 'M', 'O', 'V', 'D', 'Q', 'U', 'Y', 'r', 'r', 0,
  /* 38703 */ 'V', 'P', 'S', 'R', 'A', 'W', 'Y', 'r', 'r', 0,
  /* 38713 */ 'V', 'P', 'S', 'A', 'D', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38724 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38738 */ 'V', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38752 */ 'V', 'P', 'H', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38763 */ 'V', 'P', 'S', 'U', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38773 */ 'V', 'P', 'M', 'O', 'V', 'S', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38786 */ 'V', 'P', 'M', 'O', 'V', 'Z', 'X', 'B', 'W', 'Y', 'r', 'r', 0,
  /* 38799 */ 'V', 'P', 'H', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 38810 */ 'V', 'P', 'A', 'D', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 38820 */ 'V', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 38833 */ 'V', 'P', 'A', 'C', 'K', 'U', 'S', 'D', 'W', 'Y', 'r', 'r', 0,
  /* 38846 */ 'V', 'P', 'A', 'V', 'G', 'W', 'Y', 'r', 'r', 0,
  /* 38856 */ 'V', 'P', 'M', 'U', 'L', 'H', 'W', 'Y', 'r', 'r', 0,
  /* 38867 */ 'V', 'P', 'S', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38877 */ 'V', 'P', 'M', 'U', 'L', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38888 */ 'V', 'P', 'S', 'R', 'L', 'W', 'Y', 'r', 'r', 0,
  /* 38898 */ 'V', 'P', 'S', 'I', 'G', 'N', 'W', 'Y', 'r', 'r', 0,
  /* 38909 */ 'V', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'Y', 'r', 'r', 0,
  /* 38921 */ 'V', 'P', 'S', 'U', 'B', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38932 */ 'V', 'P', 'A', 'D', 'D', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38943 */ 'V', 'P', 'M', 'I', 'N', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38954 */ 'V', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38966 */ 'V', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38978 */ 'V', 'P', 'M', 'A', 'X', 'S', 'W', 'Y', 'r', 'r', 0,
  /* 38989 */ 'V', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 39001 */ 'V', 'P', 'B', 'R', 'O', 'A', 'D', 'C', 'A', 'S', 'T', 'W', 'Y', 'r', 'r', 0,
  /* 39017 */ 'V', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39029 */ 'V', 'P', 'M', 'I', 'N', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39040 */ 'V', 'P', 'M', 'A', 'X', 'U', 'W', 'Y', 'r', 'r', 0,
  /* 39051 */ 'M', 'M', 'X', '_', 'M', 'O', 'V', 'D', '6', '4', 'g', 'r', 'r', 0,
  /* 39065 */ 'M', 'M', 'X', '_', 'P', 'A', 'L', 'I', 'G', 'N', 'R', '6', '4', 'i', 'r', 'r', 0,
  /* 39082 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'B', 'i', 'r', 'r', 0,
  /* 39095 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'B', 'i', 'r', 'r', 0,
  /* 39108 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'B', 'i', 'r', 'r', 0,
  /* 39121 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'B', 'i', 'r', 'r', 0,
  /* 39136 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'B', 'i', 'r', 'r', 0,
  /* 39150 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'B', 'i', 'r', 'r', 0,
  /* 39164 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 39179 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'B', 'i', 'r', 'r', 0,
  /* 39194 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'B', 'i', 'r', 'r', 0,
  /* 39209 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'U', 'B', 'i', 'r', 'r', 0,
  /* 39223 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'U', 'B', 'i', 'r', 'r', 0,
  /* 39237 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 39253 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'U', 'S', 'W', 'B', 'i', 'r', 'r', 0,
  /* 39269 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'D', 'i', 'r', 'r', 0,
  /* 39282 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'D', 'i', 'r', 'r', 0,
  /* 39295 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'i', 'r', 'r', 0,
  /* 39307 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'D', 'i', 'r', 'r', 0,
  /* 39323 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'D', 'i', 'r', 'r', 0,
  /* 39338 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'D', 'i', 'r', 'r', 0,
  /* 39353 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'D', 'D', 'W', 'D', 'i', 'r', 'r', 0,
  /* 39368 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'W', 'D', 'i', 'r', 'r', 0,
  /* 39385 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'W', 'D', 'i', 'r', 'r', 0,
  /* 39402 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 39419 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'D', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 39435 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 39452 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'S', '2', 'P', 'I', 'i', 'r', 'r', 0,
  /* 39468 */ 'M', 'M', 'X', '_', 'P', 'A', 'N', 'D', 'N', 'i', 'r', 'r', 0,
  /* 39481 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'Q', 'i', 'r', 'r', 0,
  /* 39494 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 39507 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 39524 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 39541 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'U', 'D', 'Q', 'i', 'r', 'r', 0,
  /* 39556 */ 'M', 'M', 'X', '_', 'P', 'O', 'R', 'i', 'r', 'r', 0,
  /* 39567 */ 'M', 'M', 'X', '_', 'P', 'X', 'O', 'R', 'i', 'r', 'r', 0,
  /* 39579 */ 'M', 'M', 'X', '_', 'C', 'V', 'T', 'P', 'I', '2', 'P', 'S', 'i', 'r', 'r', 0,
  /* 39595 */ 'M', 'M', 'X', '_', 'P', 'S', 'A', 'D', 'B', 'W', 'i', 'r', 'r', 0,
  /* 39609 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'H', 'B', 'W', 'i', 'r', 'r', 0,
  /* 39626 */ 'M', 'M', 'X', '_', 'P', 'U', 'N', 'P', 'C', 'K', 'L', 'B', 'W', 'i', 'r', 'r', 0,
  /* 39643 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'W', 'i', 'r', 'r', 0,
  /* 39656 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'W', 'i', 'r', 'r', 0,
  /* 39669 */ 'M', 'M', 'X', '_', 'P', 'A', 'C', 'K', 'S', 'S', 'D', 'W', 'i', 'r', 'r', 0,
  /* 39685 */ 'M', 'M', 'X', '_', 'P', 'A', 'V', 'G', 'W', 'i', 'r', 'r', 0,
  /* 39698 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'W', 'i', 'r', 'r', 0,
  /* 39712 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'L', 'W', 'i', 'r', 'r', 0,
  /* 39726 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'E', 'Q', 'W', 'i', 'r', 'r', 0,
  /* 39741 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39755 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39769 */ 'M', 'M', 'X', '_', 'P', 'M', 'I', 'N', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39783 */ 'M', 'M', 'X', '_', 'P', 'S', 'U', 'B', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39798 */ 'M', 'M', 'X', '_', 'P', 'A', 'D', 'D', 'U', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39813 */ 'M', 'M', 'X', '_', 'P', 'M', 'A', 'X', 'S', 'W', 'i', 'r', 'r', 0,
  /* 39827 */ 'M', 'M', 'X', '_', 'P', 'C', 'M', 'P', 'G', 'T', 'W', 'i', 'r', 'r', 0,
  /* 39842 */ 'M', 'M', 'X', '_', 'P', 'M', 'U', 'L', 'H', 'U', 'W', 'i', 'r', 'r', 0,
  /* 39857 */ 'M', 'O', 'N', 'I', 'T', 'O', 'R', 'r', 'r', 'r', 0,
  /* 39868 */ 'M', 'O', 'V', '3', '2', 's', 'r', 0,
  /* 39876 */ 'M', 'O', 'V', '6', '4', 's', 'r', 0,
  /* 39884 */ 'M', 'O', 'V', '1', '6', 's', 'r', 0,
  /* 39892 */ 'V', 'M', 'O', 'V', 'Q', 'x', 'r', 'x', 'r', 0,
  /* 39902 */ 'M', 'O', 'V', '3', '2', 'm', 's', 0,
  /* 39910 */ 'M', 'O', 'V', '6', '4', 'm', 's', 0,
  /* 39918 */ 'M', 'O', 'V', '1', '6', 'm', 's', 0,
  /* 39926 */ 'M', 'O', 'V', '3', '2', 'r', 's', 0,
  /* 39934 */ 'M', 'O', 'V', '6', '4', 'r', 's', 0,
  /* 39942 */ 'M', 'O', 'V', '1', '6', 'r', 's', 0,
  /* 39950 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39964 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39978 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 39993 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'm', 'i', '_', 'a', 'l', 't', 0,
  /* 40008 */ 'V', 'C', 'M', 'P', 'P', 'D', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 40022 */ 'V', 'C', 'M', 'P', 'P', 'S', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 40036 */ 'V', 'C', 'M', 'P', 'P', 'D', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 40051 */ 'V', 'C', 'M', 'P', 'P', 'S', 'Y', 'r', 'r', 'i', '_', 'a', 'l', 't', 0,
  /* 40066 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 40079 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'm', '_', 'a', 'l', 't', 0,
  /* 40092 */ 'V', 'M', 'O', 'V', 'Q', 'd', '6', '4', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 40107 */ 'V', 'C', 'M', 'P', 'S', 'D', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 40120 */ 'V', 'C', 'M', 'P', 'S', 'S', 'r', 'r', '_', 'a', 'l', 't', 0,
  /* 40133 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40151 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40170 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40188 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40207 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40225 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40244 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40262 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'm', '_', 'I', 'n', 't', 0,
  /* 40281 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'D', 'm', '_', 'I', 'n', 't', 0,
  /* 40294 */ 'V', 'R', 'C', 'P', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 40306 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 40320 */ 'V', 'R', 'C', 'P', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 40332 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 40346 */ 'V', 'S', 'Q', 'R', 'T', 'S', 'S', 'm', '_', 'I', 'n', 't', 0,
  /* 40359 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 40372 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'm', '_', 'I', 'n', 't', 0,
  /* 40387 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40403 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40420 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40436 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40453 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40469 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40486 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40502 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40519 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40532 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40545 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40558 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40571 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40584 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40597 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40610 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40623 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40636 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40649 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40662 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'm', '_', 'I', 'n', 't', 0,
  /* 40675 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40693 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40712 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40730 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40749 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40767 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40786 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40804 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', 'r', '2', '1', '3', 'r', '_', 'I', 'n', 't', 0,
  /* 40823 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 40837 */ 'S', 'Q', 'R', 'T', 'S', 'D', 'r', '_', 'I', 'n', 't', 0,
  /* 40849 */ 'V', 'R', 'C', 'P', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 40861 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 40875 */ 'V', 'R', 'O', 'U', 'N', 'D', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 40889 */ 'R', 'C', 'P', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 40900 */ 'R', 'S', 'Q', 'R', 'T', 'S', 'S', 'r', '_', 'I', 'n', 't', 0,
  /* 40913 */ 'V', 'R', 'C', 'P', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 40926 */ 'V', 'R', 'S', 'Q', 'R', 'T', 'P', 'S', 'Y', 'r', '_', 'I', 'n', 't', 0,
  /* 40941 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 40957 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 40974 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 40990 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 41007 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 41023 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 41040 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 41056 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'm', 'r', '_', 'I', 'n', 't', 0,
  /* 41073 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41089 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41106 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41122 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'D', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41139 */ 'V', 'F', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41155 */ 'V', 'F', 'N', 'M', 'S', 'U', 'B', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41172 */ 'V', 'F', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41188 */ 'V', 'F', 'N', 'M', 'A', 'D', 'D', 'S', 'S', '4', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41205 */ 'V', 'S', 'U', 'B', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41218 */ 'V', 'A', 'D', 'D', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41231 */ 'V', 'M', 'U', 'L', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41244 */ 'V', 'M', 'I', 'N', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41257 */ 'V', 'D', 'I', 'V', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41270 */ 'V', 'M', 'A', 'X', 'S', 'D', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41283 */ 'V', 'S', 'U', 'B', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41296 */ 'V', 'A', 'D', 'D', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41309 */ 'V', 'M', 'U', 'L', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41322 */ 'V', 'M', 'I', 'N', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41335 */ 'V', 'D', 'I', 'V', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41348 */ 'V', 'M', 'A', 'X', 'S', 'S', 'r', 'r', '_', 'I', 'n', 't', 0,
  /* 41361 */ 'N', 'A', 'C', 'L', '_', 'J', 'M', 'P', '6', '4', 'z', 0,
  /* 41373 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'B', 'P', 'r', 'z', 0,
  /* 41387 */ 'N', 'A', 'C', 'L', '_', 'R', 'E', 'S', 'T', 'S', 'P', 'r', 'z', 0,
};

extern const unsigned X86InstrNameIndices[] = {
    8854U, 9905U, 9564U, 9577U, 9555U, 9618U, 8740U, 8755U, 
    8563U, 8797U, 10320U, 8540U, 8426U, 11894U, 8457U, 10439U, 
    8312U, 10454U, 8325U, 8908U, 8894U, 8019U, 6837U, 6858U, 
    10199U, 8675U, 3238U, 5116U, 456U, 20724U, 19306U, 20025U, 
    20945U, 6038U, 14190U, 7201U, 30293U, 15269U, 7556U, 20391U, 
    32932U, 11288U, 2102U, 13955U, 6939U, 29692U, 15051U, 7360U, 
    18875U, 31329U, 10756U, 2175U, 2338U, 7070U, 29837U, 2470U, 
    7458U, 19423U, 31864U, 10852U, 6830U, 14349U, 30487U, 15403U, 
    20890U, 33457U, 11382U, 19322U, 31763U, 20041U, 32497U, 6047U, 
    14203U, 7224U, 30314U, 15277U, 7574U, 8135U, 8158U, 20400U, 
    32949U, 8191U, 11300U, 2111U, 13968U, 6962U, 29713U, 15059U, 
    7378U, 8111U, 8147U, 18895U, 31357U, 8169U, 10768U, 2184U, 
    2353U, 7093U, 29858U, 2480U, 8098U, 7476U, 8123U, 19443U, 
    31892U, 8180U, 10864U, 6844U, 14361U, 30499U, 15410U, 20898U, 
    33465U, 11393U, 21672U, 34256U, 23466U, 36053U, 22068U, 40533U, 
    34590U, 41219U, 23852U, 40611U, 36415U, 41297U, 21620U, 34204U, 
    23414U, 36001U, 17053U, 17731U, 18035U, 17135U, 640U, 27534U, 
    3140U, 17328U, 5018U, 17906U, 2858U, 358U, 2632U, 4391U, 
    2970U, 4643U, 222U, 2718U, 4477U, 68U, 577U, 1706U, 
    3864U, 1748U, 3915U, 19349U, 31790U, 20068U, 32524U, 24032U, 
    36603U, 21267U, 33864U, 24046U, 36617U, 21287U, 33884U, 21277U, 
    33874U, 20855U, 33422U, 6056U, 14216U, 7238U, 30327U, 15285U, 
    7583U, 20408U, 32957U, 11312U, 2120U, 13981U, 6976U, 29726U, 
    15067U, 7387U, 18903U, 31365U, 10780U, 2193U, 2368U, 7107U, 
    29871U, 2490U, 7485U, 19451U, 31900U, 10876U, 6851U, 14373U, 
    30511U, 15417U, 20905U, 33472U, 11404U, 19074U, 31536U, 19772U, 
    32221U, 21788U, 34339U, 23582U, 36158U, 21690U, 34274U, 23484U, 
    36071U, 30345U, 33060U, 1402U, 5777U, 1587U, 3652U, 1414U, 
    6702U, 5989U, 1939U, 4105U, 1500U, 6788U, 5824U, 1677U, 
    3823U, 1439U, 6731U, 5787U, 1597U, 3662U, 1426U, 6711U, 
    5855U, 1785U, 3957U, 1477U, 6759U, 1390U, 1464U, 5999U, 
    1949U, 4115U, 1512U, 6797U, 5834U, 1687U, 3833U, 1451U, 
    6740U, 5864U, 1794U, 3976U, 1488U, 6767U, 10207U, 547U, 
    19175U, 31652U, 19886U, 32359U, 14781U, 16115U, 14823U, 16157U, 
    709U, 776U, 721U, 788U, 19027U, 31489U, 19725U, 32174U, 
    19036U, 31498U, 19734U, 32183U, 19166U, 31635U, 19877U, 32342U, 
    20620U, 19193U, 20481U, 33030U, 18988U, 31450U, 19584U, 32033U, 
    20604U, 33169U, 19158U, 31627U, 19869U, 32334U, 28319U, 28818U, 
    7301U, 30403U, 7628U, 33214U, 7039U, 29793U, 7432U, 31691U, 
    7170U, 29964U, 7530U, 32433U, 7210U, 30301U, 7565U, 32940U, 
    6948U, 29700U, 7369U, 31337U, 7079U, 29845U, 7467U, 31872U, 
    7283U, 30387U, 7610U, 33177U, 7021U, 29777U, 7414U, 31644U, 
    7152U, 29948U, 7512U, 32351U, 7292U, 30395U, 7619U, 33196U, 
    7030U, 29785U, 7423U, 31673U, 7161U, 29956U, 7521U, 32415U, 
    19018U, 31480U, 19614U, 32063U, 17190U, 28290U, 17802U, 2561U, 
    28789U, 6101U, 2596U, 11648U, 10014U, 8486U, 8681U, 3247U, 
    5125U, 465U, 8246U, 8266U, 8303U, 8836U, 8844U, 8858U, 
    10345U, 8270U, 20355U, 32896U, 18839U, 31293U, 19387U, 31828U, 
    20416U, 32965U, 18911U, 31373U, 19507U, 31956U, 20381U, 32922U, 
    18865U, 31319U, 19413U, 31854U, 20427U, 32976U, 18922U, 31384U, 
    19518U, 31967U, 8620U, 3162U, 5040U, 380U, 8602U, 3129U, 
    5007U, 347U, 20471U, 33020U, 18978U, 31440U, 19574U, 32023U, 
    8638U, 3186U, 5064U, 404U, 20501U, 33050U, 19008U, 31470U, 
    19604U, 32053U, 20438U, 32987U, 18933U, 31395U, 19529U, 31978U, 
    20528U, 33086U, 19064U, 31526U, 19762U, 32211U, 20449U, 32998U, 
    18944U, 31406U, 19540U, 31989U, 8610U, 3149U, 5027U, 367U, 
    8593U, 3108U, 4986U, 326U, 20460U, 33009U, 18955U, 31417U, 
    19551U, 32000U, 8629U, 3174U, 5052U, 392U, 20538U, 33103U, 
    19083U, 31552U, 19781U, 32230U, 20567U, 33132U, 19121U, 31590U, 
    19819U, 32268U, 8658U, 3215U, 5093U, 433U, 20655U, 33185U, 
    19228U, 31662U, 19912U, 32369U, 20549U, 33114U, 19094U, 31563U, 
    19792U, 32241U, 20578U, 33143U, 19132U, 31601U, 19830U, 32279U, 
    8667U, 3227U, 5105U, 445U, 20674U, 33204U, 19247U, 31681U, 
    19966U, 32423U, 1765U, 3947U, 5845U, 1775U, 6750U, 1737U, 
    3895U, 44U, 3743U, 3791U, 1617U, 3754U, 3802U, 1628U, 
    6065U, 14248U, 7247U, 30354U, 15324U, 7592U, 20559U, 33124U, 
    11324U, 2129U, 14013U, 6985U, 29744U, 15106U, 7396U, 19113U, 
    31582U, 10792U, 2212U, 2378U, 7116U, 29902U, 2500U, 7494U, 
    19811U, 32260U, 10888U, 6865U, 14401U, 30518U, 15451U, 20923U, 
    33496U, 11415U, 14813U, 39951U, 16147U, 40009U, 14855U, 39965U, 
    16189U, 40023U, 5958U, 1888U, 4027U, 6782U, 22165U, 40067U, 
    34687U, 40108U, 23939U, 40080U, 36502U, 40121U, 8066U, 20489U, 
    33038U, 18996U, 31458U, 19592U, 32041U, 8078U, 20912U, 33479U, 
    22082U, 34604U, 23866U, 36429U, 27564U, 29365U, 29315U, 27554U, 
    8687U, 3256U, 5134U, 474U, 8297U, 9955U, 6113U, 2822U, 
    7801U, 6183U, 3328U, 7914U, 4618U, 7812U, 5206U, 7925U, 
    11834U, 21564U, 34148U, 23379U, 35966U, 22904U, 35505U, 23342U, 
    35929U, 22929U, 35544U, 21576U, 34160U, 19661U, 32110U, 22669U, 
    35230U, 23753U, 36316U, 19464U, 31913U, 21981U, 34503U, 19928U, 
    32385U, 23796U, 36359U, 22012U, 34534U, 19712U, 32161U, 22714U, 
    35275U, 22892U, 35492U, 22916U, 35531U, 19628U, 32077U, 22640U, 
    35201U, 19679U, 32128U, 22685U, 35246U, 8394U, 8439U, 8023U, 
    10203U, 11784U, 17981U, 28993U, 17025U, 28214U, 18254U, 29131U, 
    17298U, 28395U, 17703U, 28722U, 18279U, 29151U, 18212U, 29098U, 
    17291U, 28370U, 17889U, 28884U, 18316U, 29192U, 21902U, 34440U, 
    23708U, 36284U, 17090U, 17768U, 18066U, 17166U, 674U, 27586U, 
    17368U, 17946U, 2907U, 2669U, 4428U, 3010U, 4683U, 262U, 
    2758U, 4517U, 108U, 608U, 22186U, 40572U, 34708U, 41258U, 
    23975U, 40650U, 36538U, 41336U, 17109U, 17786U, 18077U, 17177U, 
    686U, 27597U, 3284U, 17388U, 5162U, 17966U, 2945U, 502U, 
    2693U, 4452U, 3024U, 4697U, 276U, 2772U, 4531U, 122U, 
    619U, 14804U, 16138U, 14846U, 16180U, 11844U, 9945U, 3844U, 
    3293U, 5171U, 3311U, 5189U, 27510U, 10137U, 11854U, 30932U, 
    36227U, 10018U, 8868U, 819U, 13902U, 18087U, 13868U, 17187U, 
    3813U, 13913U, 18136U, 13879U, 17244U, 3906U, 18334U, 18519U, 
    17206U, 17818U, 17254U, 17854U, 9991U, 9998U, 10288U, 8444U, 
    18106U, 17214U, 18146U, 17263U, 10006U, 18219U, 18690U, 8398U, 
    10350U, 3540U, 3547U, 8862U, 11711U, 10403U, 9976U, 18228U, 
    29121U, 18712U, 9857U, 9731U, 9794U, 9878U, 9752U, 9815U, 
    9836U, 9710U, 9773U, 9919U, 9899U, 812U, 9926U, 10422U, 
    18535U, 18439U, 8450U, 10303U, 18698U, 11864U, 9643U, 10151U, 
    3966U, 8556U, 3734U, 10362U, 11705U, 825U, 8920U, 21798U, 
    34349U, 23592U, 36168U, 21699U, 34283U, 23493U, 36080U, 8342U, 
    10311U, 21599U, 34183U, 23402U, 35989U, 21860U, 34398U, 23654U, 
    36217U, 21587U, 34171U, 23390U, 35977U, 21849U, 34387U, 23643U, 
    36206U, 11874U, 21671U, 34255U, 23465U, 36052U, 10418U, 21632U, 
    34216U, 23426U, 36013U, 18211U, 29097U, 17290U, 28369U, 17888U, 
    28883U, 18315U, 29191U, 18000U, 17062U, 17740U, 3037U, 4710U, 
    289U, 2785U, 4544U, 135U, 2870U, 4581U, 172U, 18098U, 
    29052U, 20519U, 14758U, 7331U, 33077U, 16092U, 7790U, 17198U, 
    28311U, 19055U, 14748U, 7309U, 31517U, 16082U, 7724U, 17810U, 
    28810U, 19753U, 2438U, 7320U, 32202U, 2541U, 7757U, 18302U, 
    29178U, 5829U, 15317U, 33096U, 1682U, 15099U, 31545U, 6736U, 
    15445U, 33490U, 17993U, 29000U, 17037U, 28221U, 18264U, 29141U, 
    17308U, 28405U, 17715U, 28729U, 18290U, 29157U, 23664U, 36240U, 
    10048U, 8875U, 10426U, 3565U, 9959U, 8389U, 1930U, 4071U, 
    8811U, 1525U, 3605U, 1567U, 3632U, 1577U, 3642U, 5982U, 
    1912U, 4034U, 18125U, 17233U, 17836U, 3061U, 4734U, 313U, 
    2809U, 4568U, 159U, 2932U, 4605U, 196U, 18009U, 17100U, 
    18115U, 17223U, 17826U, 3049U, 4722U, 301U, 2797U, 4556U, 
    147U, 2920U, 4593U, 184U, 22173U, 34695U, 23947U, 36510U, 
    22119U, 34641U, 23903U, 36466U, 23764U, 36327U, 19477U, 31926U, 
    21992U, 34514U, 19941U, 32398U, 23807U, 36370U, 22023U, 34545U, 
    19642U, 32091U, 22652U, 35213U, 19693U, 32142U, 22697U, 35258U, 
    29633U, 22091U, 34613U, 23875U, 36438U, 22160U, 34682U, 23934U, 
    36497U, 22105U, 34627U, 23889U, 36452U, 23748U, 36311U, 19459U, 
    31908U, 21976U, 34498U, 19923U, 32380U, 23791U, 36354U, 22007U, 
    34529U, 19623U, 32072U, 22635U, 35196U, 19674U, 32123U, 22680U, 
    35241U, 22076U, 34598U, 23860U, 36423U, 854U, 5676U, 844U, 
    5666U, 860U, 5682U, 849U, 5671U, 13749U, 2064U, 4273U, 
    872U, 5694U, 866U, 5688U, 889U, 5711U, 877U, 5699U, 
    894U, 5716U, 17247U, 28333U, 17847U, 2575U, 28835U, 915U, 
    5746U, 883U, 5705U, 904U, 5735U, 921U, 5752U, 932U, 
    5763U, 899U, 5730U, 910U, 5741U, 13754U, 927U, 5758U, 
    8583U, 20588U, 33153U, 19142U, 31611U, 19853U, 32302U, 5813U, 
    8065U, 1654U, 3780U, 6721U, 8077U, 24069U, 10160U, 20612U, 
    19185U, 534U, 806U, 17063U, 17741U, 16384U, 1372U, 3570U, 
    26U, 1381U, 3579U, 35U, 17338U, 4545U, 136U, 17916U, 
    173U, 16411U, 35005U, 28986U, 28207U, 28385U, 28715U, 8550U, 
    3717U, 20631U, 19204U, 8405U, 20639U, 19212U, 19896U, 18156U, 
    18657U, 20647U, 19220U, 19904U, 18172U, 18669U, 18188U, 29074U, 
    18238U, 29105U, 14198U, 7219U, 30309U, 13963U, 6957U, 29708U, 
    2348U, 7088U, 29853U, 14356U, 30494U, 14211U, 7233U, 30322U, 
    13976U, 6971U, 29721U, 2363U, 7102U, 29866U, 14368U, 30506U, 
    17976U, 17020U, 17698U, 18274U, 17988U, 17032U, 17710U, 18285U, 
    14301U, 7270U, 30375U, 14066U, 7008U, 29765U, 2403U, 7139U, 
    29936U, 14448U, 30537U, 11811U, 14177U, 7187U, 30280U, 13942U, 
    6925U, 29679U, 2323U, 7056U, 29824U, 14337U, 30475U, 14288U, 
    7256U, 30362U, 14053U, 6994U, 29752U, 2388U, 7125U, 29923U, 
    14436U, 30525U, 8222U, 8351U, 10024U, 11675U, 9981U, 8480U, 
    8473U, 8884U, 11662U, 9629U, 10042U, 11699U, 20511U, 33069U, 
    19047U, 31509U, 19745U, 32194U, 20666U, 19239U, 19958U, 18549U, 
    29425U, 5769U, 1559U, 3624U, 6695U, 20695U, 33232U, 19268U, 
    31709U, 19987U, 32451U, 10487U, 4092U, 21661U, 34245U, 23455U, 
    36042U, 22058U, 34580U, 23842U, 36405U, 21924U, 34449U, 23730U, 
    36293U, 22205U, 40585U, 34727U, 41271U, 23993U, 40663U, 36556U, 
    41349U, 8412U, 21651U, 34235U, 23445U, 36032U, 22048U, 34570U, 
    23832U, 36395U, 21810U, 34361U, 23604U, 36180U, 22143U, 40559U, 
    34665U, 41245U, 23926U, 40637U, 36489U, 41323U, 27048U, 39419U, 
    26936U, 39307U, 27208U, 39579U, 27081U, 39452U, 27031U, 39402U, 
    27064U, 39435U, 10294U, 10056U, 3932U, 32562U, 39051U, 29879U, 
    19494U, 31943U, 3588U, 32581U, 35412U, 35396U, 30853U, 35516U, 
    32310U, 29910U, 19840U, 32289U, 22548U, 35108U, 4788U, 5395U, 
    4846U, 5467U, 4905U, 5555U, 27298U, 39669U, 26866U, 39237U, 
    26882U, 39253U, 26724U, 39095U, 26911U, 39282U, 27123U, 39494U, 
    26779U, 39150U, 27384U, 39755U, 26808U, 39179U, 27427U, 39798U, 
    27285U, 39656U, 26694U, 39065U, 27097U, 39468U, 26924U, 39295U, 
    26737U, 39108U, 27314U, 39685U, 26750U, 39121U, 26952U, 39323U, 
    27355U, 39726U, 26823U, 39194U, 26967U, 39338U, 27456U, 39827U, 
    16369U, 4953U, 5603U, 4875U, 5525U, 4817U, 5424U, 4802U, 
    5409U, 4937U, 5587U, 4860U, 5510U, 15020U, 16354U, 4919U, 
    5569U, 26982U, 39353U, 27442U, 39813U, 26852U, 39223U, 27398U, 
    39769U, 26838U, 39209U, 33600U, 4969U, 5619U, 27471U, 39842U, 
    27327U, 39698U, 27341U, 39712U, 27170U, 39541U, 27185U, 39556U, 
    27224U, 39595U, 4758U, 5353U, 14603U, 15783U, 4773U, 5368U, 
    4831U, 5438U, 4890U, 5540U, 15576U, 21489U, 34073U, 15689U, 
    23136U, 35738U, 15827U, 24335U, 36897U, 15545U, 21314U, 33911U, 
    15771U, 24114U, 36676U, 15597U, 21520U, 34104U, 15710U, 23157U, 
    35759U, 15848U, 24366U, 36928U, 26711U, 39082U, 26898U, 39269U, 
    27110U, 39481U, 26765U, 39136U, 27370U, 39741U, 26793U, 39164U, 
    27412U, 39783U, 27272U, 39643U, 27238U, 39609U, 27136U, 39507U, 
    26997U, 39368U, 27255U, 39626U, 27153U, 39524U, 27014U, 39385U, 
    27196U, 39567U, 10143U, 39857U, 9635U, 10377U, 0U, 6173U, 
    14322U, 30418U, 39918U, 13770U, 749U, 15381U, 20732U, 33269U, 
    11348U, 39942U, 27502U, 39884U, 3098U, 29601U, 29617U, 14087U, 
    29808U, 39902U, 13760U, 733U, 13788U, 13852U, 15163U, 19314U, 
    31755U, 10816U, 39926U, 27486U, 39868U, 29609U, 29625U, 2428U, 
    29979U, 39910U, 741U, 13796U, 13860U, 15236U, 2531U, 2240U, 
    20033U, 32489U, 10912U, 39934U, 27494U, 39876U, 35157U, 22233U, 
    34755U, 7906U, 14467U, 30556U, 11745U, 13780U, 757U, 15501U, 
    20953U, 11732U, 33525U, 11758U, 11437U, 30642U, 21590U, 34174U, 
    11463U, 30902U, 23393U, 35980U, 11504U, 30335U, 20428U, 29734U, 
    18923U, 29892U, 19519U, 22793U, 35362U, 22522U, 35082U, 23780U, 
    36343U, 30564U, 20973U, 33533U, 11449U, 30988U, 24078U, 36640U, 
    11545U, 36114U, 30652U, 21735U, 30912U, 23529U, 36103U, 30662U, 
    21778U, 30922U, 23572U, 30457U, 3483U, 5454U, 3497U, 5482U, 
    20961U, 30824U, 29987U, 30796U, 30672U, 30945U, 8363U, 10337U, 
    28228U, 30759U, 35057U, 30784U, 32612U, 22566U, 39893U, 8240U, 
    8377U, 30716U, 22195U, 34717U, 11491U, 30000U, 32599U, 22804U, 
    35373U, 22816U, 35385U, 10036U, 30772U, 35070U, 30979U, 23984U, 
    36547U, 11532U, 11693U, 7867U, 7980U, 6125U, 7823U, 6195U, 
    7936U, 6149U, 3074U, 7845U, 6219U, 3458U, 7958U, 30683U, 
    21880U, 34418U, 11477U, 30956U, 23686U, 36262U, 11518U, 22535U, 
    35095U, 22593U, 35140U, 22579U, 35126U, 7878U, 7991U, 7889U, 
    8002U, 6137U, 7834U, 6207U, 7947U, 6161U, 10069U, 3086U, 
    7856U, 10097U, 6231U, 10083U, 3470U, 7969U, 10110U, 14865U, 
    16199U, 18099U, 29053U, 17199U, 28312U, 17811U, 28811U, 18303U, 
    29179U, 21769U, 34330U, 23563U, 36149U, 22133U, 40546U, 34655U, 
    41232U, 23917U, 40624U, 36480U, 41310U, 19340U, 31781U, 20059U, 
    32515U, 17071U, 17749U, 18045U, 17145U, 651U, 27544U, 3197U, 
    17347U, 5075U, 17925U, 2882U, 415U, 2644U, 4403U, 2983U, 
    4656U, 235U, 2731U, 4490U, 81U, 587U, 36584U, 2287U, 
    2275U, 6894U, 13804U, 28298U, 13817U, 28797U, 28282U, 2553U, 
    28781U, 2588U, 5260U, 3352U, 5282U, 28827U, 3374U, 5304U, 
    4293U, 5230U, 4312U, 4346U, 3396U, 4192U, 28328U, 28842U, 
    41361U, 18471U, 29342U, 41373U, 18500U, 29400U, 41387U, 1919U, 
    4050U, 1665U, 2261U, 2301U, 6905U, 3415U, 1725U, 3883U, 
    18018U, 29037U, 17118U, 28267U, 17795U, 28766U, 18296U, 29172U, 
    9986U, 9623U, 11669U, 18204U, 29090U, 17283U, 28362U, 17881U, 
    28876U, 18309U, 29185U, 6075U, 14281U, 7262U, 30368U, 15357U, 
    7602U, 20597U, 33162U, 11337U, 2139U, 14046U, 7000U, 29758U, 
    13839U, 15139U, 7406U, 19151U, 31620U, 10805U, 2222U, 2394U, 
    7131U, 29929U, 2511U, 7504U, 19862U, 32327U, 10901U, 6873U, 
    14430U, 30531U, 15480U, 20931U, 33504U, 11427U, 21832U, 34370U, 
    23626U, 36189U, 29656U, 33261U, 29648U, 31738U, 29664U, 33518U, 
    8234U, 8371U, 11687U, 6472U, 6584U, 6484U, 6596U, 6496U, 
    6608U, 24259U, 36821U, 21216U, 33813U, 24271U, 36833U, 21228U, 
    33825U, 21001U, 33561U, 21411U, 34008U, 22952U, 35567U, 21079U, 
    33676U, 24420U, 36982U, 21110U, 33707U, 24451U, 37013U, 24250U, 
    36812U, 20841U, 33408U, 22768U, 35329U, 21533U, 34117U, 8534U, 
    21020U, 33580U, 21120U, 33717U, 24291U, 36853U, 697U, 764U, 
    14877U, 16211U, 23036U, 35651U, 21048U, 33635U, 21943U, 34468U, 
    23170U, 35772U, 24389U, 36951U, 9683U, 8770U, 22610U, 35171U, 
    9649U, 8707U, 20809U, 33376U, 21141U, 33738U, 22246U, 34768U, 
    23204U, 35803U, 24472U, 37034U, 9697U, 8784U, 22623U, 35184U, 
    9666U, 8724U, 20825U, 33392U, 19104U, 31573U, 19802U, 32251U, 
    19297U, 31746U, 20016U, 32480U, 30592U, 33656U, 30706U, 34489U, 
    30844U, 35793U, 31025U, 15870U, 21463U, 34047U, 24309U, 36871U, 
    21239U, 33836U, 21392U, 33989U, 23108U, 35710U, 22486U, 34995U, 
    24011U, 36574U, 24560U, 37122U, 22776U, 35337U, 22750U, 35311U, 
    21247U, 33844U, 21256U, 33853U, 18817U, 31271U, 19376U, 31817U, 
    22784U, 35345U, 18828U, 31282U, 24021U, 36592U, 23318U, 35904U, 
    21185U, 33782U, 21401U, 33998U, 6538U, 6650U, 24240U, 36802U, 
    6567U, 6679U, 21350U, 33947U, 6524U, 6636U, 24197U, 36759U, 
    21455U, 34039U, 24282U, 36844U, 21059U, 33646U, 21967U, 34479U, 
    23194U, 35783U, 14889U, 16223U, 6508U, 6620U, 22366U, 34875U, 
    21131U, 33728U, 22204U, 34726U, 24462U, 37024U, 21194U, 33791U, 
    22291U, 34813U, 24528U, 37090U, 21089U, 33686U, 22142U, 34664U, 
    24430U, 36992U, 21176U, 33773U, 22281U, 34803U, 24518U, 37080U, 
    33589U, 21369U, 33966U, 22869U, 35468U, 24216U, 36778U, 23085U, 
    35687U, 22463U, 34972U, 23295U, 35881U, 21381U, 33978U, 22881U, 
    35480U, 24228U, 36790U, 23097U, 35699U, 22475U, 34984U, 23307U, 
    35893U, 22998U, 35613U, 6552U, 6664U, 24399U, 36961U, 24507U, 
    37069U, 24300U, 36862U, 21502U, 34086U, 24348U, 36910U, 23074U, 
    35676U, 29060U, 18808U, 31262U, 28340U, 18770U, 31224U, 28854U, 
    18789U, 31243U, 1543U, 20684U, 33221U, 19257U, 31698U, 19976U, 
    32440U, 5899U, 1829U, 5916U, 1846U, 5806U, 1647U, 3773U, 
    5933U, 1863U, 4002U, 5950U, 1880U, 4019U, 5974U, 1904U, 
    23328U, 35914U, 8827U, 8048U, 556U, 833U, 3554U, 11652U, 
    24138U, 36700U, 21010U, 33570U, 14503U, 15558U, 14617U, 15797U, 
    14628U, 15808U, 21038U, 33625U, 21541U, 34125U, 24379U, 36941U, 
    15661U, 15568U, 21481U, 34065U, 15681U, 23128U, 35730U, 15819U, 
    24327U, 36889U, 15537U, 21306U, 33903U, 15763U, 24106U, 36668U, 
    15671U, 15589U, 21512U, 34096U, 15702U, 23149U, 35751U, 15840U, 
    24358U, 36920U, 20992U, 33552U, 21360U, 33957U, 22860U, 35459U, 
    21069U, 33666U, 24410U, 36972U, 21099U, 33696U, 24440U, 37002U, 
    24207U, 36769U, 21610U, 34194U, 24060U, 36631U, 24159U, 36721U, 
    22972U, 35587U, 23008U, 35623U, 22377U, 34886U, 24172U, 36734U, 
    22985U, 35600U, 23022U, 35637U, 22390U, 34899U, 29044U, 18798U, 
    31252U, 28274U, 18760U, 31214U, 6010U, 2202U, 6807U, 28773U, 
    18779U, 31233U, 1535U, 5881U, 1811U, 5890U, 1820U, 5907U, 
    1837U, 5798U, 1639U, 3765U, 5924U, 1854U, 3993U, 5941U, 
    1871U, 4010U, 5965U, 1895U, 6093U, 2253U, 6887U, 23335U, 
    35921U, 1050U, 9059U, 14224U, 1267U, 9304U, 15293U, 938U, 
    8933U, 13989U, 1155U, 9178U, 15075U, 994U, 8996U, 14104U, 
    1211U, 9241U, 15180U, 1106U, 9122U, 14380U, 1323U, 9367U, 
    15424U, 18577U, 40295U, 29448U, 40850U, 18625U, 40321U, 29496U, 
    40889U, 1082U, 9095U, 14264U, 1299U, 9340U, 15340U, 970U, 
    8969U, 14029U, 1187U, 9214U, 15122U, 1026U, 9032U, 14136U, 
    1243U, 9277U, 15212U, 1134U, 9154U, 14415U, 1351U, 9399U, 
    15465U, 8498U, 3673U, 8516U, 3695U, 10177U, 8274U, 29027U, 
    28257U, 28756U, 29017U, 28247U, 28746U, 8287U, 9969U, 30410U, 
    29800U, 29971U, 30548U, 11798U, 1987U, 4153U, 2013U, 4179U, 
    4234U, 2051U, 4260U, 11823U, 1974U, 4140U, 2000U, 4166U, 
    4221U, 2038U, 4247U, 10373U, 8885U, 11663U, 11700U, 11771U, 
    1066U, 9077U, 14240U, 1283U, 9322U, 15309U, 954U, 8951U, 
    14005U, 1171U, 9196U, 15091U, 1010U, 9014U, 14120U, 1227U, 
    9259U, 15196U, 1120U, 9138U, 14394U, 1337U, 9383U, 15438U, 
    1098U, 9113U, 14280U, 1315U, 9358U, 15356U, 986U, 8987U, 
    14045U, 1203U, 9232U, 15138U, 1042U, 9050U, 14152U, 1259U, 
    9295U, 15228U, 1148U, 9170U, 14429U, 1365U, 9415U, 15479U, 
    14095U, 15171U, 14160U, 15244U, 18350U, 29211U, 18567U, 29438U, 
    18380U, 29241U, 40824U, 18615U, 29486U, 40876U, 9915U, 18585U, 
    40307U, 29456U, 40862U, 18633U, 40333U, 29504U, 40900U, 8588U, 
    1074U, 9086U, 14256U, 1291U, 9331U, 15332U, 962U, 8960U, 
    14021U, 1179U, 9205U, 15114U, 1018U, 9023U, 14128U, 1235U, 
    9268U, 15204U, 1127U, 9146U, 14408U, 1344U, 9391U, 15458U, 
    19358U, 31799U, 20077U, 32533U, 6020U, 14169U, 7178U, 30272U, 
    15253U, 7538U, 20365U, 32906U, 11264U, 2084U, 13934U, 6916U, 
    29671U, 15035U, 7342U, 18849U, 31303U, 10732U, 2157U, 2313U, 
    7047U, 29816U, 2450U, 7440U, 19397U, 31838U, 10828U, 6816U, 
    14330U, 30468U, 15389U, 20876U, 33443U, 11360U, 5874U, 1804U, 
    3986U, 6776U, 1960U, 4126U, 18398U, 29259U, 18322U, 29198U, 
    18405U, 29266U, 29007U, 28237U, 28736U, 29163U, 18328U, 29204U, 
    18433U, 29294U, 18412U, 29273U, 18446U, 29308U, 18419U, 29280U, 
    18452U, 29323U, 18426U, 29287U, 18458U, 29329U, 18493U, 29383U, 
    18559U, 29430U, 18465U, 29336U, 18513U, 29413U, 18651U, 29522U, 
    8419U, 18164U, 18663U, 1058U, 9068U, 14232U, 1275U, 9313U, 
    15301U, 946U, 8942U, 13997U, 1163U, 9187U, 15083U, 1002U, 
    9005U, 14112U, 1219U, 9250U, 15188U, 1113U, 9130U, 14387U, 
    1330U, 9375U, 15431U, 9467U, 7680U, 9533U, 7768U, 9423U, 
    7636U, 9489U, 7702U, 9445U, 7658U, 9511U, 7735U, 19331U, 
    31772U, 20050U, 32506U, 1090U, 9104U, 14272U, 1307U, 9349U, 
    15348U, 978U, 8978U, 14037U, 1195U, 9223U, 15130U, 1034U, 
    9041U, 14144U, 1251U, 9286U, 15220U, 1141U, 9162U, 14422U, 
    1358U, 9407U, 15472U, 9478U, 7691U, 9544U, 7779U, 9434U, 
    7647U, 9500U, 7713U, 9456U, 7669U, 9522U, 7746U, 19367U, 
    31808U, 20086U, 32542U, 14793U, 16127U, 14835U, 16169U, 18180U, 
    18675U, 8652U, 3206U, 5084U, 424U, 10396U, 18196U, 29082U, 
    28354U, 17873U, 28868U, 18246U, 29113U, 28377U, 28891U, 18360U, 
    29221U, 18586U, 29457U, 18390U, 40282U, 29251U, 40837U, 18634U, 
    40334U, 29505U, 40901U, 8693U, 3265U, 5143U, 483U, 11884U, 
    8251U, 8293U, 8383U, 8849U, 8890U, 10169U, 8228U, 8357U, 
    10030U, 11681U, 29067U, 28347U, 28861U, 18554U, 17101U, 17778U, 
    17224U, 17827U, 16392U, 35353U, 17379U, 17957U, 2921U, 2682U, 
    4441U, 17273U, 17863U, 2834U, 16401U, 2608U, 4367U, 35012U, 
    6029U, 14182U, 7192U, 30285U, 15261U, 7547U, 20373U, 32914U, 
    11276U, 2093U, 13947U, 6930U, 29684U, 15043U, 7351U, 18857U, 
    31311U, 10744U, 2166U, 2328U, 7061U, 29829U, 2460U, 7449U, 
    19405U, 31846U, 10840U, 6823U, 14342U, 30480U, 15396U, 20883U, 
    33450U, 11371U, 21623U, 34207U, 23417U, 36004U, 17080U, 17758U, 
    18055U, 17155U, 662U, 27575U, 17357U, 17935U, 2894U, 2656U, 
    4415U, 2996U, 4669U, 248U, 2744U, 4503U, 94U, 597U, 
    22039U, 40520U, 34561U, 41206U, 23823U, 40598U, 36386U, 41284U, 
    17044U, 17722U, 18025U, 17125U, 629U, 27524U, 3120U, 17318U, 
    4998U, 17896U, 2846U, 338U, 2620U, 4379U, 2957U, 4630U, 
    209U, 2705U, 4464U, 55U, 567U, 10258U, 9601U, 10134U, 
    10410U, 4061U, 10370U, 4041U, 13830U, 4301U, 18484U, 4747U, 
    29374U, 5238U, 13923U, 4320U, 14552U, 4333U, 15649U, 4354U, 
    6083U, 14313U, 15372U, 20715U, 33252U, 2147U, 14078U, 15154U, 
    19288U, 31729U, 2230U, 2417U, 2520U, 20007U, 32471U, 6879U, 
    14459U, 15493U, 11718U, 20937U, 33510U, 10265U, 2073U, 4282U, 
    3363U, 5271U, 3431U, 5326U, 9964U, 8700U, 3275U, 5153U, 
    493U, 20705U, 33242U, 19278U, 31719U, 19997U, 32461U, 22081U, 
    34603U, 23865U, 36428U, 29364U, 29314U, 29390U, 29355U, 3340U, 
    5218U, 511U, 3447U, 5342U, 523U, 29300U, 8060U, 21723U, 
    34294U, 23517U, 36091U, 21757U, 34318U, 23551U, 36137U, 4200U, 
    25110U, 37618U, 21680U, 34264U, 26082U, 38491U, 23474U, 36061U, 
    22067U, 40532U, 34589U, 41218U, 23851U, 40610U, 36414U, 41296U, 
    25043U, 37551U, 21619U, 34203U, 26015U, 38424U, 23413U, 36000U, 
    24031U, 36602U, 21266U, 33863U, 24045U, 36616U, 21286U, 33883U, 
    21276U, 33873U, 20854U, 33421U, 25193U, 37687U, 21787U, 34338U, 
    26176U, 38571U, 23581U, 36157U, 25120U, 37628U, 21689U, 34273U, 
    26092U, 38501U, 23483U, 36070U, 10236U, 14912U, 16246U, 14780U, 
    16114U, 14948U, 16282U, 14822U, 16156U, 25269U, 37749U, 21889U, 
    34427U, 26252U, 38633U, 23695U, 36271U, 6441U, 6456U, 25353U, 
    37805U, 26299U, 38666U, 23959U, 36522U, 14937U, 39978U, 16271U, 
    40036U, 14812U, 39950U, 16146U, 40008U, 14983U, 39993U, 16317U, 
    40051U, 14854U, 39964U, 16188U, 40022U, 22164U, 40066U, 34686U, 
    40107U, 23938U, 40079U, 36501U, 40120U, 22109U, 34631U, 23893U, 
    36456U, 25006U, 37514U, 21563U, 34147U, 25991U, 38400U, 23378U, 
    35965U, 24582U, 25641U, 38092U, 35504U, 24595U, 25965U, 38374U, 
    35928U, 25978U, 38387U, 23353U, 35940U, 25668U, 38119U, 22928U, 
    35543U, 25019U, 37527U, 21575U, 34159U, 31116U, 37981U, 30746U, 
    35019U, 19660U, 32109U, 22668U, 35229U, 23752U, 36315U, 19463U, 
    31912U, 21980U, 34502U, 19927U, 32384U, 23795U, 36358U, 22011U, 
    34533U, 19711U, 32160U, 22713U, 35274U, 24568U, 25627U, 38078U, 
    35491U, 25654U, 38105U, 22915U, 35530U, 19627U, 32076U, 22639U, 
    35200U, 19678U, 32127U, 22684U, 35245U, 25282U, 37762U, 21901U, 
    34439U, 26265U, 38646U, 23707U, 36283U, 22185U, 40571U, 34707U, 
    41257U, 23974U, 40649U, 36537U, 41335U, 14803U, 16137U, 14973U, 
    16307U, 14845U, 16179U, 18543U, 29419U, 18706U, 29528U, 30426U, 
    33304U, 30441U, 33346U, 30931U, 36226U, 5495U, 30067U, 13366U, 
    20150U, 12546U, 32691U, 13576U, 10587U, 10995U, 16783U, 12162U, 
    27970U, 12982U, 17461U, 12358U, 28478U, 13178U, 16483U, 11966U, 
    27670U, 12786U, 30197U, 13452U, 20280U, 12632U, 32821U, 13662U, 
    10697U, 11165U, 16933U, 12260U, 28120U, 13080U, 17611U, 12456U, 
    28628U, 13276U, 16633U, 12064U, 27820U, 12884U, 30117U, 40974U, 
    20200U, 40420U, 32741U, 41106U, 11061U, 16841U, 28028U, 17519U, 
    40170U, 28536U, 40712U, 16541U, 27728U, 30247U, 41040U, 20330U, 
    40486U, 32871U, 41172U, 11231U, 16991U, 28178U, 17669U, 40244U, 
    28686U, 40786U, 16691U, 27878U, 30012U, 13307U, 20095U, 12487U, 
    32636U, 13517U, 10512U, 10924U, 16720U, 12095U, 27907U, 12915U, 
    17398U, 12291U, 28415U, 13111U, 16420U, 11899U, 27607U, 12719U, 
    30142U, 13393U, 20225U, 12573U, 32766U, 13603U, 10622U, 11094U, 
    16870U, 12193U, 28057U, 13013U, 17548U, 12389U, 28565U, 13209U, 
    16570U, 11997U, 27757U, 12817U, 30052U, 13350U, 20135U, 12530U, 
    32676U, 13560U, 10567U, 10976U, 16766U, 12144U, 27953U, 12964U, 
    17444U, 12340U, 28461U, 13160U, 16466U, 11948U, 27653U, 12768U, 
    30182U, 13436U, 20265U, 12616U, 32806U, 13646U, 10677U, 11146U, 
    16916U, 12242U, 28103U, 13062U, 17594U, 12438U, 28611U, 13258U, 
    16616U, 12046U, 27803U, 12866U, 30027U, 13323U, 20110U, 12503U, 
    32651U, 13533U, 10532U, 10943U, 16737U, 12113U, 27924U, 12933U, 
    17415U, 12309U, 28432U, 13129U, 16437U, 11917U, 27624U, 12737U, 
    30157U, 13409U, 20240U, 12589U, 32781U, 13619U, 10642U, 11113U, 
    16887U, 12211U, 28074U, 13031U, 17565U, 12407U, 28582U, 13227U, 
    16587U, 12015U, 27774U, 12835U, 30092U, 40941U, 20175U, 40387U, 
    32716U, 41073U, 11028U, 16812U, 27999U, 17490U, 40133U, 28507U, 
    40675U, 16512U, 27699U, 30222U, 41007U, 20305U, 40453U, 32846U, 
    41139U, 11198U, 16962U, 28149U, 17640U, 40207U, 28657U, 40749U, 
    16662U, 27849U, 30079U, 13379U, 20162U, 12559U, 32703U, 13589U, 
    10604U, 11011U, 16797U, 12177U, 27984U, 12997U, 17475U, 12373U, 
    28492U, 13193U, 16497U, 11981U, 27684U, 12801U, 30209U, 13465U, 
    20292U, 12645U, 32833U, 13675U, 10714U, 11181U, 16947U, 12275U, 
    28134U, 13095U, 17625U, 12471U, 28642U, 13291U, 16647U, 12079U, 
    27834U, 12899U, 30129U, 40990U, 20212U, 40436U, 32753U, 41122U, 
    11077U, 16855U, 28042U, 17533U, 40188U, 28550U, 40730U, 16555U, 
    27742U, 30259U, 41056U, 20342U, 40502U, 32883U, 41188U, 11247U, 
    17005U, 28192U, 17683U, 40262U, 28700U, 40804U, 16705U, 27892U, 
    30039U, 13336U, 20122U, 12516U, 32663U, 13546U, 10549U, 10959U, 
    16751U, 12128U, 27938U, 12948U, 17429U, 12324U, 28446U, 13144U, 
    16451U, 11932U, 27638U, 12752U, 30169U, 13422U, 20252U, 12602U, 
    32793U, 13632U, 10659U, 11129U, 16901U, 12226U, 28088U, 13046U, 
    17579U, 12422U, 28596U, 13242U, 16601U, 12030U, 27788U, 12850U, 
    30104U, 40957U, 20187U, 40403U, 32728U, 41089U, 11044U, 16826U, 
    28013U, 17504U, 40151U, 28521U, 40693U, 16526U, 27713U, 30234U, 
    41023U, 20317U, 40469U, 32858U, 41155U, 11214U, 16976U, 28163U, 
    17654U, 40225U, 28671U, 40767U, 16676U, 27863U, 21932U, 12673U, 
    34457U, 13703U, 23738U, 12698U, 36301U, 13728U, 22222U, 34744U, 
    24001U, 36564U, 21797U, 34348U, 23591U, 36167U, 21698U, 34282U, 
    23492U, 36079U, 21859U, 34397U, 23653U, 36216U, 21848U, 34386U, 
    23642U, 36205U, 25130U, 21709U, 26102U, 23503U, 25214U, 21818U, 
    26197U, 23612U, 25099U, 37607U, 21670U, 34254U, 26071U, 38480U, 
    23464U, 36051U, 25056U, 37564U, 21631U, 34215U, 26028U, 38437U, 
    23425U, 36012U, 20767U, 33319U, 20794U, 33361U, 23663U, 36239U, 
    26325U, 24068U, 10159U, 10486U, 4091U, 31088U, 25292U, 30692U, 
    21910U, 31189U, 26275U, 30965U, 23716U, 25088U, 37596U, 21660U, 
    34244U, 26060U, 38469U, 23454U, 36041U, 22057U, 34579U, 23841U, 
    36404U, 25306U, 37772U, 21923U, 34448U, 26289U, 38656U, 23729U, 
    36292U, 22213U, 40584U, 34735U, 41270U, 23992U, 40662U, 36555U, 
    41348U, 9594U, 18526U, 8280U, 25077U, 37585U, 21650U, 34234U, 
    26049U, 38458U, 23444U, 36031U, 22047U, 34569U, 23831U, 36394U, 
    25204U, 37698U, 21809U, 34360U, 26187U, 38582U, 23603U, 36179U, 
    22151U, 40558U, 34673U, 41244U, 23925U, 40636U, 36488U, 41322U, 
    8818U, 1550U, 3615U, 9586U, 35156U, 22232U, 34754U, 31054U, 
    25032U, 37540U, 11573U, 30641U, 21589U, 34173U, 11462U, 31155U, 
    26004U, 38413U, 11603U, 30901U, 23392U, 35979U, 11503U, 25553U, 
    38004U, 22792U, 35361U, 22521U, 35081U, 23779U, 36342U, 31043U, 
    24621U, 37130U, 11558U, 30563U, 20972U, 33532U, 11448U, 31203U, 
    26335U, 38692U, 11633U, 30987U, 24077U, 36639U, 11544U, 36113U, 
    30651U, 21734U, 30911U, 23528U, 36102U, 30661U, 21777U, 30921U, 
    23571U, 30456U, 28956U, 3510U, 5636U, 28913U, 3482U, 5453U, 
    28971U, 3525U, 5651U, 28927U, 3496U, 5481U, 24608U, 20960U, 
    31129U, 30823U, 31065U, 30671U, 31166U, 30944U, 30758U, 35056U, 
    30783U, 32611U, 22565U, 32551U, 40092U, 32625U, 39892U, 30715U, 
    22194U, 34716U, 11490U, 29999U, 32598U, 25565U, 38016U, 22803U, 
    35372U, 25578U, 38029U, 22815U, 35384U, 30771U, 35069U, 30978U, 
    23983U, 36546U, 11531U, 31077U, 25258U, 37738U, 11588U, 30682U, 
    21879U, 34417U, 11476U, 31178U, 26241U, 38622U, 11618U, 30955U, 
    23685U, 36261U, 11517U, 22534U, 35094U, 22592U, 35139U, 22578U, 
    35125U, 14994U, 16328U, 14864U, 16198U, 18340U, 18681U, 18883U, 
    31345U, 19431U, 31880U, 8464U, 1698U, 3856U, 1608U, 3725U, 
    25183U, 37677U, 21768U, 34329U, 26155U, 38550U, 23562U, 36148U, 
    22132U, 40545U, 34654U, 41231U, 23916U, 40623U, 36479U, 41309U, 
    18966U, 31428U, 19562U, 32011U, 8576U, 9939U, 25228U, 37708U, 
    21831U, 34369U, 26211U, 38592U, 23625U, 36188U, 6471U, 6251U, 
    6583U, 6346U, 6483U, 6263U, 6595U, 6358U, 6495U, 6275U, 
    6607U, 6370U, 26463U, 38820U, 24258U, 36820U, 24827U, 37349U, 
    21215U, 33812U, 26476U, 38833U, 24270U, 36832U, 24840U, 37362U, 
    21227U, 33824U, 24642U, 37151U, 21000U, 33560U, 24921U, 37443U, 
    21410U, 34007U, 25681U, 38132U, 22951U, 35566U, 24707U, 37229U, 
    21078U, 33675U, 26575U, 38932U, 24419U, 36981U, 24741U, 37263U, 
    21109U, 33706U, 26609U, 38966U, 24450U, 37012U, 26453U, 38810U, 
    24249U, 36811U, 20840U, 33407U, 20740U, 33277U, 25543U, 37994U, 
    22767U, 35328U, 24986U, 37494U, 21532U, 34116U, 24663U, 37172U, 
    21019U, 33579U, 26489U, 38846U, 24290U, 36852U, 14899U, 16233U, 
    14768U, 16102U, 24814U, 37336U, 21203U, 33800U, 15007U, 16341U, 
    14876U, 16210U, 24776U, 37298U, 21160U, 33757U, 25392U, 37844U, 
    22265U, 34787U, 25870U, 38293U, 23223U, 35822U, 26644U, 39001U, 
    24491U, 37053U, 23035U, 35650U, 30997U, 13507U, 24087U, 12709U, 
    36649U, 13739U, 24684U, 37206U, 21047U, 33634U, 25316U, 37782U, 
    21942U, 34467U, 25832U, 38269U, 23169U, 35771U, 26552U, 38909U, 
    24388U, 36950U, 9682U, 8769U, 22609U, 35170U, 9648U, 8706U, 
    20808U, 33375U, 24764U, 37286U, 21140U, 33737U, 25380U, 37832U, 
    22245U, 34767U, 25858U, 38281U, 23203U, 35802U, 26632U, 38989U, 
    24471U, 37033U, 9696U, 8783U, 22622U, 35183U, 9665U, 8723U, 
    20824U, 33391U, 14474U, 15508U, 14512U, 15609U, 14563U, 15722U, 
    14492U, 15526U, 14542U, 15639U, 14581U, 15740U, 14656U, 15888U, 
    14638U, 15860U, 20754U, 33291U, 20781U, 33333U, 24976U, 37484U, 
    30628U, 13479U, 21550U, 12659U, 34134U, 13689U, 30888U, 13493U, 
    23365U, 12684U, 35952U, 13714U, 14677U, 15939U, 25157U, 37651U, 
    14521U, 15618U, 21744U, 34305U, 14711U, 16015U, 26129U, 38524U, 
    14591U, 15750U, 23538U, 36124U, 14690U, 15952U, 26165U, 38560U, 
    14701U, 16005U, 30591U, 33655U, 5383U, 30705U, 34488U, 30843U, 
    35792U, 31024U, 15869U, 24931U, 21419U, 25760U, 23048U, 25328U, 
    21953U, 25844U, 23180U, 21326U, 33923U, 22836U, 35435U, 24147U, 
    36709U, 22960U, 35575U, 24910U, 37432U, 21400U, 33997U, 6537U, 
    6317U, 6649U, 6412U, 21337U, 33934U, 22847U, 35446U, 24184U, 
    36746U, 23061U, 35663U, 22450U, 34959U, 23282U, 35868U, 22354U, 
    34863U, 23271U, 35857U, 26442U, 38799U, 24239U, 36801U, 6566U, 
    6678U, 24126U, 36688U, 22940U, 35555U, 24863U, 37385U, 21349U, 
    33946U, 6523U, 6303U, 6635U, 6398U, 22343U, 34852U, 26395U, 
    38752U, 24196U, 36758U, 21058U, 33645U, 21966U, 34478U, 23193U, 
    35782U, 14888U, 13889U, 16222U, 21432U, 34016U, 22496U, 35031U, 
    22725U, 35286U, 21443U, 34027U, 22508U, 35043U, 22737U, 35298U, 
    22425U, 34934U, 24548U, 37110U, 22402U, 34911U, 24537U, 37099U, 
    22437U, 34946U, 22413U, 34922U, 6507U, 6287U, 6619U, 6382U, 
    25477U, 37915U, 22365U, 34874U, 31102U, 25463U, 30733U, 22330U, 
    31141U, 25908U, 30875U, 23258U, 24753U, 37275U, 21130U, 33727U, 
    25369U, 37821U, 22203U, 34725U, 26621U, 38978U, 24461U, 37023U, 
    24803U, 37325U, 21193U, 33790U, 25419U, 37871U, 22290U, 34812U, 
    26683U, 39040U, 24527U, 37089U, 24718U, 37240U, 21088U, 33685U, 
    25342U, 37794U, 22141U, 34663U, 26586U, 38943U, 24429U, 36991U, 
    24792U, 37314U, 21175U, 33772U, 25408U, 37860U, 22280U, 34802U, 
    26672U, 39029U, 24517U, 37079U, 28941U, 37182U, 28899U, 33588U, 
    24884U, 37406U, 21368U, 33965U, 25601U, 38052U, 22868U, 35467U, 
    26416U, 38773U, 24215U, 36777U, 25786U, 38223U, 23084U, 35686U, 
    25517U, 37955U, 22462U, 34971U, 25922U, 38331U, 23294U, 35880U, 
    24897U, 37419U, 21380U, 33977U, 25614U, 38065U, 22880U, 35479U, 
    26429U, 38786U, 24227U, 36789U, 25799U, 38236U, 23096U, 35698U, 
    25530U, 37968U, 22474U, 34983U, 25935U, 38344U, 23306U, 35892U, 
    25719U, 38170U, 22997U, 35612U, 6551U, 6331U, 6663U, 6426U, 
    26660U, 39017U, 24506U, 37068U, 26499U, 38856U, 24299U, 36861U, 
    24955U, 37463U, 21501U, 34085U, 26520U, 38877U, 24347U, 36909U, 
    25774U, 38211U, 23073U, 35675U, 25948U, 38357U, 23327U, 35913U, 
    30805U, 22758U, 35319U, 14483U, 30601U, 15517U, 21151U, 33748U, 
    14533U, 30724U, 15630U, 22256U, 34778U, 14572U, 30866U, 15731U, 
    23214U, 35813U, 14647U, 31034U, 15879U, 24482U, 37044U, 26356U, 
    38713U, 24137U, 36699U, 30573U, 20982U, 33542U, 30610U, 21296U, 
    33893U, 30814U, 22827U, 35426U, 31006U, 24096U, 36658U, 30582U, 
    21028U, 33615U, 30619U, 21471U, 34055U, 30834U, 23118U, 35720U, 
    31015U, 24317U, 36879U, 24652U, 37161U, 21009U, 33569U, 14666U, 
    15908U, 14502U, 15557U, 14724U, 16038U, 14616U, 15796U, 14736U, 
    16050U, 14627U, 15807U, 24673U, 37195U, 21037U, 33624U, 24995U, 
    37503U, 21540U, 34124U, 26541U, 38898U, 24378U, 36940U, 15963U, 
    15660U, 15919U, 24945U, 37453U, 15567U, 21480U, 34064U, 15985U, 
    25812U, 38249U, 15680U, 23127U, 35729U, 25441U, 37893U, 22310U, 
    34832U, 25886U, 38309U, 23238U, 35837U, 16062U, 26510U, 38867U, 
    15818U, 24326U, 36888U, 15898U, 24853U, 37375U, 15536U, 21305U, 
    33902U, 25430U, 37882U, 22300U, 34822U, 16028U, 26346U, 38703U, 
    15762U, 24105U, 36667U, 15974U, 15670U, 15929U, 24966U, 37474U, 
    15588U, 21511U, 34095U, 15995U, 25822U, 38259U, 15701U, 23148U, 
    35750U, 25452U, 37904U, 22320U, 34842U, 25897U, 38320U, 23248U, 
    35847U, 16072U, 26531U, 38888U, 15839U, 24357U, 36919U, 24632U, 
    37141U, 20991U, 33551U, 24874U, 37396U, 21359U, 33956U, 25591U, 
    38042U, 22859U, 35458U, 24696U, 37218U, 21068U, 33665U, 26564U, 
    38921U, 24409U, 36971U, 24729U, 37251U, 21098U, 33695U, 26597U, 
    38954U, 24439U, 37001U, 26406U, 38763U, 24206U, 36768U, 26315U, 
    38682U, 24059U, 36630U, 26367U, 38724U, 24158U, 36720U, 25691U, 
    38142U, 22971U, 35586U, 25730U, 38181U, 23007U, 35622U, 25489U, 
    37927U, 22376U, 34885U, 26381U, 38738U, 24171U, 36733U, 25705U, 
    38156U, 22984U, 35599U, 25745U, 38196U, 23021U, 35636U, 25503U, 
    37941U, 22389U, 34898U, 25956U, 38365U, 23334U, 35920U, 18730U, 
    40359U, 29544U, 40913U, 18576U, 40294U, 29447U, 40849U, 18624U, 
    40320U, 29495U, 18349U, 29210U, 18566U, 29437U, 18379U, 29240U, 
    40823U, 18614U, 29485U, 40875U, 18368U, 29229U, 18603U, 29474U, 
    18739U, 40372U, 29553U, 40926U, 18584U, 40306U, 29455U, 40861U, 
    18632U, 40332U, 29503U, 14925U, 16259U, 14792U, 16126U, 14961U, 
    16295U, 14834U, 16168U, 18720U, 29534U, 18359U, 29220U, 18750U, 
    29564U, 18594U, 29465U, 18389U, 40281U, 29250U, 18642U, 40346U, 
    29513U, 10168U, 25067U, 37575U, 21641U, 34225U, 26039U, 38448U, 
    23435U, 36022U, 22038U, 40519U, 34560U, 41205U, 23822U, 40597U, 
    36385U, 41283U, 25247U, 37727U, 21869U, 34407U, 26230U, 38611U, 
    23675U, 36251U, 22080U, 34602U, 23864U, 36427U, 25144U, 37638U, 
    21722U, 34293U, 26116U, 38511U, 23516U, 36090U, 25170U, 37664U, 
    21756U, 34317U, 26142U, 38537U, 23550U, 36136U, 25237U, 37717U, 
    21839U, 34377U, 26220U, 38601U, 23633U, 36196U, 9609U, 10123U, 
    540U, 10223U, 8027U, 10391U, 8387U, 8037U, 2026U, 4209U, 
    8507U, 3684U, 8525U, 3706U, 10183U, 10473U, 20399U, 32948U, 
    18894U, 31356U, 19442U, 31891U, 20897U, 33464U, 9932U, 5721U, 
    29592U, 20492U, 33041U, 29574U, 5249U, 18999U, 31461U, 29583U, 
    19595U, 32044U, 20915U, 33482U, 8646U, 8256U, 8202U, 10189U, 
    8088U, 8212U, 8307U, 10498U, 10357U, 6074U, 14293U, 7261U, 
    30367U, 15364U, 7601U, 20596U, 33161U, 11336U, 2138U, 14058U, 
    6999U, 29757U, 15146U, 7405U, 19150U, 31619U, 10804U, 2221U, 
    2393U, 7130U, 29928U, 2510U, 7503U, 19861U, 32326U, 10900U, 
    6872U, 14441U, 30530U, 15486U, 20930U, 33503U, 11426U, 21840U, 
    34378U, 23634U, 36197U, 10152U, 3967U, 8557U, 3735U, 10430U, 
    4080U, 10505U, 800U, 6243U, 8491U, 10480U, 
};

static inline void InitX86MCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4550);
}

} // End llvm namespace 
#endif // GET_INSTRINFO_MC_DESC


#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct X86GenInstrInfo : public TargetInstrInfo {
  explicit X86GenInstrInfo(int SO = -1, int DO = -1);
};
} // End llvm namespace 
#endif // GET_INSTRINFO_HEADER


#ifdef GET_INSTRINFO_CTOR
#undef GET_INSTRINFO_CTOR
namespace llvm {
extern const MCInstrDesc X86Insts[];
extern const unsigned X86InstrNameIndices[];
extern const char X86InstrNameData[];
X86GenInstrInfo::X86GenInstrInfo(int SO, int DO)
  : TargetInstrInfo(SO, DO) {
  InitMCInstrInfo(X86Insts, X86InstrNameIndices, X86InstrNameData, 4550);
}
} // End llvm namespace 
#endif // GET_INSTRINFO_CTOR

